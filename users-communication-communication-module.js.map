{"version":3,"sources":["webpack:///./src/app/users/communication/communication.module.ts","webpack:///./src/app/users/communication/communication.page.html","webpack:///./src/app/users/communication/communication.page.scss","webpack:///./src/app/users/communication/communication.page.ts"],"names":[],"mappings":"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","file":"users-communication-communication-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CommunicationPage } from './communication.page';\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CommunicationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CommunicationPage]\r\n})\r\nexport class CommunicationPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle auto-hide=\\\"false\\\"><i class=\\\"fas fa-align-left icon-menu\\\"></i></ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n    <span class=\\\"title_t\\\">Envie</span>\\r\\n    <span class=\\\"title_w\\\">sua Mensagem</span>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-label>Selecione o Destinatário <span class=\\\"required\\\">*</span></ion-label>\\r\\n        <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n          <!-- para usuario comum carrega só os admins e lideres de equipe e para administradores carrega tudo\\r\\n          primeiro os grupos e depois os users individualmente -->\\r\\n          <mat-select [formControl]=\\\"list\\\" multiple [(ngModel)]=\\\"selected\\\">\\r\\n            <mat-option [value]=\\\"null\\\" (onSelectionChange)=\\\"selectionChange(null)\\\">\\r\\n              Todos os usuários\\r\\n            </mat-option>\\r\\n            <mat-option *ngFor=\\\"let option of optionList\\\" [value]=\\\"option\\\"\\r\\n              (onSelectionChange)=\\\"selectionChange($event)\\\">\\r\\n              {{option.getNome()}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-label>Mensagem <span class=\\\"required\\\">*</span></ion-label>\\r\\n        <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n          <textarea [(ngModel)]=\\\"messageText\\\" matInput></textarea>\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div class=\\\"ion-margin-top\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-block btn-mdlz-clear\\\" (click)=\\\"send()\\\">Enviar Mensagem</button>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2NvbW11bmljYXRpb24vY29tbXVuaWNhdGlvbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { User } from 'src/models/User';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { ToastText } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-communication',\r\n  templateUrl: './communication.page.html',\r\n  styleUrls: ['./communication.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class CommunicationPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"CommunicationPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public list = new FormControl();\r\n  public optionList: Array<any> = new Array<any>();\r\n  private user: User;\r\n  public messageText: string;\r\n  private selectedUsers: Array<number> = new Array<number>();\r\n  public selected: any;\r\n  private page: number = 1;\r\n  private totalPages: number;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private auth: AuthenticationService\r\n  ) {\r\n    this.user = this.auth.loggedUser;\r\n    if (this.user.isAdmin()) {\r\n      this.api.getUsersWithoutPhoto(1).then((response: any) => {\r\n        let users: Array<User> = response.users;\r\n        this.totalPages = response.totalPages\r\n        this.optionList = this.filterUsers(users);\r\n      }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n    }\r\n    else {\r\n      this.api.getAdminsAndLeaders().then((users: Array<User>) => {\r\n        this.optionList = this.filterUsers(users);\r\n      }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  filterUsers(users: Array<User>): Array<User> {\r\n    let filteredList: Array<User> = new Array<User>();\r\n    for (let user of users) {\r\n      if (this.api.getLoggedUser().getId() != user.getId()) {\r\n        filteredList.push(user);\r\n      }\r\n    }\r\n    return filteredList;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  selectionChange(event) {\r\n    if (event == null) {\r\n      this.selectedUsers = new Array<number>();\r\n      for (let option of this.optionList) {\r\n        this.selectedUsers.push(option.getId());\r\n      }\r\n    }\r\n    else {\r\n      if (event.source.selected) {\r\n        if (this.selectedUsers.indexOf(event.source.value.getId()) < 0) {\r\n          this.selectedUsers.push(event.source.value.getId());\r\n        }\r\n      }\r\n      else {\r\n        this.selectedUsers.splice(this.selectedUsers.indexOf(event.source.value.getId()), 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  send() {\r\n    if (Utils.isStringInvalid(this.messageText)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_MESSAGE);\r\n    }\r\n    if (Utils.isArrayInvalid(this.selectedUsers)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_DESTINATION_USER);\r\n    }\r\n    this.api.sendMessage(this.messageText, this.selectedUsers).then(() => {\r\n      this.utils.simpleToast(ToastText.MESSAGE_SEND_SUCCESS);\r\n      this.messageText = \"\";\r\n      this.selected = null;\r\n      this.selectedUsers = new Array<number>();\r\n    }).catch((error) => this.utils.simpleToastError(ToastText.MESSAGE_SEND_FAILURE));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  loadData(event) {\r\n    this.page++;\r\n    const infiniteScroll = event.target;\r\n    this.api.getUsers(this.page).then((response: any) => {\r\n      let users: Array<User> = response.users;\r\n      this.totalPages = response.totalPages;\r\n      this.optionList = this.filterUsers(this.optionList.concat(users));\r\n      infiniteScroll.complete();\r\n      infiniteScroll.disabled = this.page >= this.totalPages;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n"],"sourceRoot":""}