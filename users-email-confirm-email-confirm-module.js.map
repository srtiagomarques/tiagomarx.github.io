{"version":3,"sources":["webpack:///./src/app/users/email-confirm/email-confirm.module.ts","webpack:///./src/app/users/email-confirm/email-confirm.page.html","webpack:///./src/app/users/email-confirm/email-confirm.page.scss","webpack:///./src/app/users/email-confirm/email-confirm.page.ts"],"names":[],"mappings":"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","file":"users-email-confirm-email-confirm-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EmailConfirmPage } from './email-confirm.page';\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmailConfirmPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [EmailConfirmPage]\r\n})\r\nexport class EmailConfirmPageModule {}\r\n","module.exports = \"<ion-content padding=\\\"true\\\" class='background'>\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row color=\\\"primary\\\" class=\\\"ion-justify-content-center\\\">\\r\\n        <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n          <div class=\\\"ion-text-center\\\">\\r\\n            <img src=\\\"assets/imgs/logo_pb.png\\\">\\r\\n            <span class=\\\"title\\\">\\r\\n              Venha fazer parte da nossa comunidade!\\r\\n            </span>\\r\\n            <span class=\\\"title\\\">\\r\\n              Verifique sua conta de E-mail.\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"ion-margin-top\\\" (click)=\\\"returnToLogin()\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn-mdlz\\\" block>\\r\\n              Voltar para login</button>\\r\\n          </div>\\r\\n          <div class=\\\"ion-margin-top\\\" [hidden]=\\\"confirmationSent\\\" (click)=\\\"generateConfirmationCode()\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn-mdlz\\\" block>\\r\\n              Enviar E-mail</button>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ion-margin-top\\\" *ngIf=\\\"confirmationSent\\\">\\r\\n            <span class=\\\"title\\\">\\r\\n              Seu e-mail está demorando para chegar? Verificou sua caixa de spam e não encontrou nada? Podemos\\r\\n              reenviá-lo caso precise!\\r\\n            </span>\\r\\n            <button (click)=\\\"generateConfirmationCode()\\\" type=\\\"submit\\\" class=\\\"btn-mdlz\\\" block>\\r\\n              Reenviar E-mail</button>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ion-margin-top\\\" *ngIf=\\\"confirmationSent\\\">\\r\\n            <ion-label>Código Verificador do Usuário <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-form-field class=\\\"full-width full-textarea\\\">\\r\\n              <textarea (keydown.enter)=\\\"onKeydown($event)\\\"  formControlName=\\\"code\\\" matInput></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ion-margin-top\\\" *ngIf=\\\"confirmationSent\\\">\\r\\n            <button type=\\\"submit\\\" (click)=\\\"validateConfirmationCode()\\\" class=\\\"btn-mdlz\\\" block>\\r\\n              Validar Cadastro</button>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\"","module.exports = \".ion-align-self-center {\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  padding: 0 20px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvZW1haWwtY29uZmlybS9EOlxcRGVza3RvcFxcUHJvamV0b3NcXERlc2Vudm9sdmltZW50b1xcTW9uZGVsZXpcXFBsdXNcXEdJVF9Nb25kZWxlelBsdXNcXGZyb250L3NyY1xcYXBwXFx1c2Vyc1xcZW1haWwtY29uZmlybVxcZW1haWwtY29uZmlybS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLDJCQUEyQjtFQUMzQiwwQkFBMEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2VtYWlsLWNvbmZpcm0vZW1haWwtY29uZmlybS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW9uLWFsaWduLXNlbGYtY2VudGVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgcGFkZGluZzogMCAyMHB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ErrorMessage, ToastText } from 'src/commons/Constants';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/models/User';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-email-confirm',\r\n  templateUrl: './email-confirm.page.html',\r\n  styleUrls: ['./email-confirm.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class EmailConfirmPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"EmailConfirmPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public form: FormGroup\r\n  public confirmationSent: Boolean = false;\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(private utils: Utils,\r\n    private auth: AuthenticationService,\r\n    private api: BackendApiProvider,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    this.form = this.formBuilder.group({\r\n      code: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ]))\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  generateConfirmationCode() {\r\n    const logHeader = this.logHeader + \"generateConfirmationCode>>\";\r\n    Utils.log(logHeader)\r\n    this.api.generateConfirmationCode(this.auth.loggedUser).then(() => {\r\n      this.confirmationSent = true;\r\n    }).catch((error) => {\r\n      this.confirmationSent = false;\r\n      this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n    })\r\n  }\r\n\r\n  onKeydown(event){\r\n    event.preventDefault();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  validateConfirmationCode() {\r\n    const logHeader = this.logHeader + \"validateConfirmationCode>>\";\r\n    Utils.log(logHeader)\r\n    if (Utils.isStringInvalid(this.form.value.code)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_CONFIRMATION_CODE);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_EMAIL + \">>\" + this.form.value.email);\r\n    }\r\n    this.api.validateConfirmationCode(this.auth.loggedUser, this.form.value.code).then((response) => {\r\n      if (response) {\r\n        this.api.tokenLogin().then((user:User) => {\r\n          if (user.isAdmin())\r\n            this.router.navigate(['admin', 'dashboard']);\r\n          else\r\n            this.router.navigate(['home', 'pontos']);\r\n        })\r\n      }\r\n      else {\r\n        this.utils.simpleToastError(ToastText.INVALID_CONFIRMATION_CODE);\r\n      }\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  returnToLogin(){\r\n    this.router.navigate(['login'])\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n"],"sourceRoot":""}