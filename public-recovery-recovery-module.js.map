{"version":3,"sources":["webpack:///./src/app/public/recovery/recovery.module.ts","webpack:///./src/app/public/recovery/recovery.page.html","webpack:///./src/app/public/recovery/recovery.page.scss","webpack:///./src/app/public/recovery/recovery.page.ts"],"names":[],"mappings":"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","file":"public-recovery-recovery-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RecoveryPage } from './recovery.page';\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecoveryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RecoveryPage]\r\n})\r\nexport class RecoveryPageModule {}\r\n","module.exports = \"<ion-header class=\\\"header-extrato\\\">\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\" class='background'>\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row color=\\\"primary\\\" class=\\\"ion-justify-content-center\\\">\\r\\n        <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n          <div class=\\\"ion-text-center\\\">\\r\\n            <img src=\\\"assets/imgs/logo_pb.png\\\">\\r\\n            <span class=\\\"title\\\">\\r\\n              Esqueceu sua senha? Nós te ajudamos\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\" \\\">\\r\\n\\r\\n            <ion-label>E-mail @mdlz.com <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>email</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" aria-label=\\\"\\\"\\r\\n                aria-describedby=\\\"basic-addon2\\\" formControlName=\\\"email\\\">\\r\\n\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Nº da Matrícula <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>file_copy</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"registration\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\" \\\">\\r\\n            <button type=\\\"submit\\\" (click)=\\\"recover()\\\" class=\\\"btn-mdlz\\\" block [disabled]=\\\"!form.valid\\\">\\r\\n              Recuperar Senha</button>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9yZWNvdmVyeS9yZWNvdmVyeS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\r\nimport { ToastText, AlertTitle, AlertText, ErrorType, ErrorMessage } from 'src/commons/Constants';\r\nimport { Router } from '@angular/router';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-recovery',\r\n  templateUrl: './recovery.page.html',\r\n  styleUrls: ['./recovery.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class RecoveryPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"RecoveryPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public form: FormGroup;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(public menu: MenuController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    this.form = this.formBuilder.group({\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n\r\n      registration: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ]))\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async recover() {\r\n    if (Utils.isStringInvalid(this.form.value.email)) {\r\n      this.utils.simpleToastError(ToastText.INVALID_FORM + '\\n' + ToastText.INSERT_EMAIL);\r\n      return;\r\n    }\r\n    if (Utils.isStringInvalid(this.form.value.registration)) {\r\n      this.utils.simpleToastError(ToastText.INVALID_FORM + '\\n' + ToastText.INSERT_REGISTRATION);\r\n      return;\r\n    }\r\n    this.api.recovery(this.form.value).then((response) => {\r\n      this.router.navigate(['/login']);\r\n      this.utils.simpleAlert(AlertTitle.WARNING, AlertText.RECOVER_SUCCESSFUL);\r\n    }).catch((error) => this.utils.handleErrorToast(JSON.parse(error._body).message));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n"],"sourceRoot":""}