{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5 lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/areas/fabrica/fabrica-menu/fabrica-menu.page.html","webpack:///./src/app/admin/areas/fabrica/fabrica-menu/fabrica-menu.page.scss","webpack:///./src/app/admin/areas/fabrica/fabrica-menu/fabrica-menu.page.ts","webpack:///./src/app/admin/areas/fabrica/new/new.page.html","webpack:///./src/app/admin/areas/fabrica/new/new.page.scss","webpack:///./src/app/admin/areas/fabrica/new/new.page.ts","webpack:///./src/app/admin/areas/linha/linha-menu/linha-menu.page.html","webpack:///./src/app/admin/areas/linha/linha-menu/linha-menu.page.scss","webpack:///./src/app/admin/areas/linha/linha-menu/linha-menu.page.ts","webpack:///./src/app/admin/areas/linha/new/new.page.html","webpack:///./src/app/admin/areas/linha/new/new.page.scss","webpack:///./src/app/admin/areas/linha/new/new.page.ts","webpack:///./src/app/admin/areas/secao/new/new.page.html","webpack:///./src/app/admin/areas/secao/new/new.page.scss","webpack:///./src/app/admin/areas/secao/new/new.page.ts","webpack:///./src/app/admin/areas/secao/secao-menu/secao-menu.page.html","webpack:///./src/app/admin/areas/secao/secao-menu/secao-menu.page.scss","webpack:///./src/app/admin/areas/secao/secao-menu/secao-menu.page.ts","webpack:///./src/app/admin/dashboard/dashboard.module.ts","webpack:///./src/app/admin/dashboard/dashboard.page.html","webpack:///./src/app/admin/dashboard/dashboard.page.scss","webpack:///./src/app/admin/dashboard/dashboard.page.ts","webpack:///./src/app/admin/members/members-menu/members-menu.component.html","webpack:///./src/app/admin/members/members-menu/members-menu.component.scss","webpack:///./src/app/admin/members/members-menu/members-menu.component.ts","webpack:///./src/app/admin/pontos/atividades-edit/atividades-edit.page.html","webpack:///./src/app/admin/pontos/atividades-edit/atividades-edit.page.scss","webpack:///./src/app/admin/pontos/atividades-edit/atividades-edit.page.ts","webpack:///./src/app/admin/pontos/pontos-menu/pontos-menu.page.html","webpack:///./src/app/admin/pontos/pontos-menu/pontos-menu.page.scss","webpack:///./src/app/admin/pontos/pontos-menu/pontos-menu.page.ts","webpack:///./src/app/admin/pontos/pontos-modal/pontos-modal.page.html","webpack:///./src/app/admin/pontos/pontos-modal/pontos-modal.page.scss","webpack:///./src/app/admin/pontos/pontos-modal/pontos-modal.page.ts","webpack:///./src/app/admin/pontos/pontos-remove/pontos-remove.page.html","webpack:///./src/app/admin/pontos/pontos-remove/pontos-remove.page.scss","webpack:///./src/app/admin/pontos/pontos-remove/pontos-remove.page.ts","webpack:///./src/app/admin/prize/new-reward/new-reward.page.html","webpack:///./src/app/admin/prize/new-reward/new-reward.page.scss","webpack:///./src/app/admin/prize/new-reward/new-reward.page.ts","webpack:///./src/app/admin/prize/prize-menu/prize-menu.component.html","webpack:///./src/app/admin/prize/prize-menu/prize-menu.component.scss","webpack:///./src/app/admin/prize/prize-menu/prize-menu.component.ts","webpack:///./src/app/admin/team/new/new.page.html","webpack:///./src/app/admin/team/new/new.page.scss","webpack:///./src/app/admin/team/new/new.page.ts","webpack:///./src/app/admin/team/team-menu/team-menu.page.html","webpack:///./src/app/admin/team/team-menu/team-menu.page.scss","webpack:///./src/app/admin/team/team-menu/team-menu.page.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/menu-item/menu-item.component.html","webpack:///./src/app/components/menu-item/menu-item.component.scss","webpack:///./src/app/components/menu-item/menu-item.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/public/terms-of-use/terms-of-use.page.html","webpack:///./src/app/public/terms-of-use/terms-of-use.page.scss","webpack:///./src/app/public/terms-of-use/terms-of-use.page.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/users/exchange/cart/cart.page.html","webpack:///./src/app/users/exchange/cart/cart.page.scss","webpack:///./src/app/users/exchange/cart/cart.page.ts","webpack:///./src/app/users/notification/msg-component/msg-component.component.html","webpack:///./src/app/users/notification/msg-component/msg-component.component.scss","webpack:///./src/app/users/notification/msg-component/msg-component.component.ts","webpack:///./src/app/users/popover/popover.component.html","webpack:///./src/app/users/popover/popover.component.scss","webpack:///./src/app/users/popover/popover.component.ts","webpack:///./src/app/users/teams/teams-menu/teams-menu.component.html","webpack:///./src/app/users/teams/teams-menu/teams-menu.component.scss","webpack:///./src/app/users/teams/teams-menu/teams-menu.component.ts","webpack:///./src/app/users/teams/users-modal/users-modal.page.html","webpack:///./src/app/users/teams/users-modal/users-modal.page.scss","webpack:///./src/app/users/teams/users-modal/users-modal.page.ts","webpack:///./src/commons/Constants.ts","webpack:///./src/commons/Utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/Activity.ts","webpack:///./src/models/CartItem.ts","webpack:///./src/models/ChartItem.ts","webpack:///./src/models/ExtractItem.ts","webpack:///./src/models/Factory.ts","webpack:///./src/models/Invitation.ts","webpack:///./src/models/Line.ts","webpack:///./src/models/Message.ts","webpack:///./src/models/Reward.ts","webpack:///./src/models/Schooling.ts","webpack:///./src/models/Section.ts","webpack:///./src/models/Team.ts","webpack:///./src/models/User.ts","webpack:///./src/providers/backend-api/backend-api.service.ts","webpack:///./src/providers/loader-service/loader.service.ts","webpack:///./src/providers/page-data/page-data.service.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-controller_8.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-ios.entry.js\",\n\t\t\"common\",\n\t\t13\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-md.entry.js\",\n\t\t\"common\",\n\t\t14\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-alert-ios.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-alert-md.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-app_8-ios.entry.js\",\n\t\t0,\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-app_8-md.entry.js\",\n\t\t0,\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-avatar_3-ios.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-avatar_3-md.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-back-button-ios.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-back-button-md.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-backdrop-ios.entry.js\",\n\t\t23\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-backdrop-md.entry.js\",\n\t\t24\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-button_2-ios.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-button_2-md.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-card_5-ios.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-card_5-md.entry.js\",\n\t\t\"common\",\n\t\t28\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-checkbox-ios.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-checkbox-md.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-chip-ios.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-chip-md.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-col_3.entry.js\",\n\t\t33\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-datetime_3-ios.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-datetime_3-md.entry.js\",\n\t\t\"common\",\n\t\t35\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-fab_3-ios.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-fab_3-md.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-img.entry.js\",\n\t\t38\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-infinite-scroll_2-ios.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-infinite-scroll_2-md.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-input-ios.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-input-md.entry.js\",\n\t\t\"common\",\n\t\t42\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-item-option_3-ios.entry.js\",\n\t\t\"common\",\n\t\t43\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-item-option_3-md.entry.js\",\n\t\t\"common\",\n\t\t44\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-item_8-ios.entry.js\",\n\t\t\"common\",\n\t\t45\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-item_8-md.entry.js\",\n\t\t\"common\",\n\t\t46\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-loading-ios.entry.js\",\n\t\t\"common\",\n\t\t47\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-loading-md.entry.js\",\n\t\t\"common\",\n\t\t48\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-menu_4-ios.entry.js\",\n\t\t\"common\",\n\t\t49\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-menu_4-md.entry.js\",\n\t\t\"common\",\n\t\t50\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-modal-ios.entry.js\",\n\t\t0,\n\t\t\"common\",\n\t\t51\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-modal-md.entry.js\",\n\t\t0,\n\t\t\"common\",\n\t\t52\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-nav_5.entry.js\",\n\t\t0,\n\t\t\"common\",\n\t\t53\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-popover-ios.entry.js\",\n\t\t0,\n\t\t\"common\",\n\t\t54\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-popover-md.entry.js\",\n\t\t0,\n\t\t\"common\",\n\t\t55\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-progress-bar-ios.entry.js\",\n\t\t\"common\",\n\t\t56\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-progress-bar-md.entry.js\",\n\t\t\"common\",\n\t\t57\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-radio_2-ios.entry.js\",\n\t\t\"common\",\n\t\t58\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-radio_2-md.entry.js\",\n\t\t\"common\",\n\t\t59\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-range-ios.entry.js\",\n\t\t\"common\",\n\t\t60\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-range-md.entry.js\",\n\t\t\"common\",\n\t\t61\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-refresher_2-ios.entry.js\",\n\t\t\"common\",\n\t\t62\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-refresher_2-md.entry.js\",\n\t\t\"common\",\n\t\t63\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-reorder_2-ios.entry.js\",\n\t\t\"common\",\n\t\t64\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-reorder_2-md.entry.js\",\n\t\t\"common\",\n\t\t65\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-ripple-effect.entry.js\",\n\t\t66\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t67\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-searchbar-ios.entry.js\",\n\t\t\"common\",\n\t\t68\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-searchbar-md.entry.js\",\n\t\t\"common\",\n\t\t69\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-segment_2-ios.entry.js\",\n\t\t\"common\",\n\t\t70\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-segment_2-md.entry.js\",\n\t\t\"common\",\n\t\t71\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-select_3-ios.entry.js\",\n\t\t\"common\",\n\t\t72\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-select_3-md.entry.js\",\n\t\t\"common\",\n\t\t73\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-slide_2-ios.entry.js\",\n\t\t74\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-slide_2-md.entry.js\",\n\t\t75\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t76\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-split-pane-ios.entry.js\",\n\t\t77\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-split-pane-md.entry.js\",\n\t\t78\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-tab-bar_2-ios.entry.js\",\n\t\t\"common\",\n\t\t79\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-tab-bar_2-md.entry.js\",\n\t\t\"common\",\n\t\t80\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-text.entry.js\",\n\t\t\"common\",\n\t\t81\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-textarea-ios.entry.js\",\n\t\t\"common\",\n\t\t82\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-textarea-md.entry.js\",\n\t\t\"common\",\n\t\t83\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-toast-ios.entry.js\",\n\t\t\"common\",\n\t\t84\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-toast-md.entry.js\",\n\t\t\"common\",\n\t\t85\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-toggle-ios.entry.js\",\n\t\t\"common\",\n\t\t86\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-toggle-md.entry.js\",\n\t\t\"common\",\n\t\t87\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm-es5/ion-virtual-scroll.entry.js\",\n\t\t88\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm-es5 lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"../extrato/tab2.module\": [\n\t\t\"./src/app/users/home/extrato/tab2.module.ts\",\n\t\t\"extrato-tab2-module\"\n\t],\n\t\"../pontos/tab1.module\": [\n\t\t\"./src/app/users/home/pontos/tab1.module.ts\",\n\t\t\"pontos-tab1-module\"\n\t],\n\t\"./admin/admin-routing.module\": [\n\t\t\"./src/app/admin/admin-routing.module.ts\",\n\t\t\"admin-admin-routing-module\"\n\t],\n\t\"./admin/areas/areas.module\": [\n\t\t\"./src/app/admin/areas/areas.module.ts\",\n\t\t\"admin-areas-areas-module\"\n\t],\n\t\"./admin/areas/fabrica/fabrica-menu/fabrica-menu.module\": [\n\t\t\"./src/app/admin/areas/fabrica/fabrica-menu/fabrica-menu.module.ts\",\n\t\t\"admin-areas-fabrica-fabrica-menu-fabrica-menu-module\"\n\t],\n\t\"./admin/areas/fabrica/new/new.module\": [\n\t\t\"./src/app/admin/areas/fabrica/new/new.module.ts\",\n\t\t\"admin-areas-fabrica-new-new-module\"\n\t],\n\t\"./admin/areas/linha/linha-menu/linha-menu.module\": [\n\t\t\"./src/app/admin/areas/linha/linha-menu/linha-menu.module.ts\",\n\t\t\"admin-areas-linha-linha-menu-linha-menu-module\"\n\t],\n\t\"./admin/areas/linha/new/new.module\": [\n\t\t\"./src/app/admin/areas/linha/new/new.module.ts\",\n\t\t\"admin-areas-linha-new-new-module\"\n\t],\n\t\"./admin/areas/secao/new/new.module\": [\n\t\t\"./src/app/admin/areas/secao/new/new.module.ts\",\n\t\t\"admin-areas-secao-new-new-module\"\n\t],\n\t\"./admin/areas/secao/secao-menu/secao-menu.module\": [\n\t\t\"./src/app/admin/areas/secao/secao-menu/secao-menu.module.ts\",\n\t\t\"admin-areas-secao-secao-menu-secao-menu-module\"\n\t],\n\t\"./admin/dashboard/dashboard.module\": [\n\t\t\"./src/app/admin/dashboard/dashboard.module.ts\"\n\t],\n\t\"./admin/members/members.module\": [\n\t\t\"./src/app/admin/members/members.module.ts\",\n\t\t\"admin-members-members-module\"\n\t],\n\t\"./admin/members/new/new.module\": [\n\t\t\"./src/app/admin/members/new/new.module.ts\",\n\t\t\"admin-members-new-new-module\"\n\t],\n\t\"./admin/pontos/pontos-menu/pontos-menu.module\": [\n\t\t\"./src/app/admin/pontos/pontos-menu/pontos-menu.module.ts\",\n\t\t\"admin-pontos-pontos-menu-pontos-menu-module\"\n\t],\n\t\"./admin/pontos/pontos.module\": [\n\t\t\"./src/app/admin/pontos/pontos.module.ts\",\n\t\t\"admin-pontos-pontos-module\"\n\t],\n\t\"./admin/pontos/users/zeramento/zeramento.module\": [\n\t\t\"./src/app/admin/pontos/users/zeramento/zeramento.module.ts\",\n\t\t\"admin-pontos-users-zeramento-zeramento-module\"\n\t],\n\t\"./admin/prize/prize.module\": [\n\t\t\"./src/app/admin/prize/prize.module.ts\",\n\t\t\"admin-prize-prize-module\"\n\t],\n\t\"./admin/team/team.module\": [\n\t\t\"./src/app/admin/team/team.module.ts\",\n\t\t\"admin-team-team-module\"\n\t],\n\t\"./atividades/atividades.module\": [\n\t\t\"./src/app/admin/pontos/atividades/atividades.module.ts\",\n\t\t\"atividades-atividades-module\"\n\t],\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/admin/dashboard/dashboard.module.ts\"\n\t],\n\t\"./fabrica/fabrica.module\": [\n\t\t\"./src/app/admin/areas/fabrica/fabrica.module.ts\",\n\t\t\"fabrica-fabrica-module\"\n\t],\n\t\"./grupos/grupos.module\": [\n\t\t\"./src/app/admin/pontos/grupos/grupos.module.ts\",\n\t\t\"grupos-grupos-module\"\n\t],\n\t\"./linha/linha.module\": [\n\t\t\"./src/app/admin/areas/linha/linha.module.ts\",\n\t\t\"linha-linha-module\"\n\t],\n\t\"./public/login/login.module\": [\n\t\t\"./src/app/public/login/login.module.ts\",\n\t\t\"public-login-login-module\"\n\t],\n\t\"./public/recovery/recovery.module\": [\n\t\t\"./src/app/public/recovery/recovery.module.ts\",\n\t\t\"public-recovery-recovery-module\"\n\t],\n\t\"./public/register/register.module\": [\n\t\t\"./src/app/public/register/register.module.ts\",\n\t\t\"public-register-register-module\"\n\t],\n\t\"./secao/secao.module\": [\n\t\t\"./src/app/admin/areas/secao/secao.module.ts\",\n\t\t\"secao-secao-module\"\n\t],\n\t\"./users/communication/communication.module\": [\n\t\t\"./src/app/users/communication/communication.module.ts\",\n\t\t\"users-communication-communication-module\"\n\t],\n\t\"./users/email-confirm/email-confirm.module\": [\n\t\t\"./src/app/users/email-confirm/email-confirm.module.ts\",\n\t\t\"users-email-confirm-email-confirm-module\"\n\t],\n\t\"./users/exchange/exchange.module\": [\n\t\t\"./src/app/users/exchange/exchange.module.ts\",\n\t\t\"users-exchange-exchange-module\"\n\t],\n\t\"./users/home/home/tabs.module\": [\n\t\t\"./src/app/users/home/home/tabs.module.ts\",\n\t\t\"users-home-home-tabs-module\"\n\t],\n\t\"./users/notification/notification.module\": [\n\t\t\"./src/app/users/notification/notification.module.ts\",\n\t\t\"users-notification-notification-module\"\n\t],\n\t\"./users/profile/profile.module\": [\n\t\t\"./src/app/users/profile/profile.module.ts\",\n\t\t\"users-profile-profile-module\"\n\t],\n\t\"./users/rules/rules.module\": [\n\t\t\"./src/app/users/rules/rules.module.ts\",\n\t\t\"users-rules-rules-module\"\n\t],\n\t\"./users/teams/pending/pending.module\": [\n\t\t\"./src/app/users/teams/pending/pending.module.ts\",\n\t\t\"users-teams-pending-pending-module\"\n\t],\n\t\"./users/teams/teams.module\": [\n\t\t\"./src/app/users/teams/teams.module.ts\",\n\t\t\"users-teams-teams-module\"\n\t],\n\t\"./users/tutorial/tutorial.module\": [\n\t\t\"./src/app/users/tutorial/tutorial.module.ts\",\n\t\t\"users-tutorial-tutorial-module\"\n\t],\n\t\"./users/users.module\": [\n\t\t\"./src/app/admin/pontos/users/users.module.ts\",\n\t\t\"users-users-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n  <ion-item (click)=\\\"newFabrica($event)\\\" no-lines>\\r\\n    <ion-label>Adicionar Fábrica</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FyZWFzL2ZhYnJpY2EvZmFicmljYS1tZW51L2ZhYnJpY2EtbWVudS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController, NavParams } from '@ionic/angular';\r\nimport { NewPageF } from '../new/new.page';\r\nimport { Factory } from 'src/models/Factory';\r\n\r\n@Component({\r\n  selector: 'app-fabrica-menu',\r\n  templateUrl: './fabrica-menu.page.html',\r\n  styleUrls: ['./fabrica-menu.page.scss'],\r\n})\r\nexport class FabricaMenuPage implements OnInit {\r\n\r\n  private factory: Factory;\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.factory = this.navParams.get('factory');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async newFabrica(ev: any) {\r\n    this.DismissClick()\r\n    const popover = await this.popoverController.create({\r\n      component: NewPageF,\r\n      event: ev,\r\n      animated: true,\r\n      showBackdrop: true,\r\n      translucent: true,\r\n      cssClass: 'popover_class',\r\n      componentProps: {\r\n        factory: this.factory\r\n      }\r\n    });\r\n\r\n    return await popover.present();\r\n\r\n  }\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<ion-header *ngIf=\\\"modoEdicao\\\">\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n    <i class=\\\"fas fa-times-circle ico-white only-icon\\\" (click)=\\\"closeModal()\\\" slot=\\\"end\\\"></i>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n        <mat-label>Nome da Fábrica</mat-label>\\r\\n        <input [(ngModel)]=\\\"name\\\" matInput placeholder=\\\"ex: Dry Mix\\\">\\r\\n\\r\\n      </mat-form-field>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <button class=\\\"btn btn-block btn-mdlz-clear\\\" ion-button clear item-right (click)=\\\"addNew()\\\"\\r\\n        [disabled]=\\\"name==undefined || name==''\\\">\\r\\n        Salvar\\r\\n      </button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FyZWFzL2ZhYnJpY2EvbmV3L25ldy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastText, ErrorMessage, ErrorType } from 'src/commons/Constants';\r\nimport { Factory } from 'src/models/Factory';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { PopoverController, NavParams, ModalController } from '@ionic/angular';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.page.html',\r\n  styleUrls: ['./new.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class NewPageF {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"FabricaPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public modoEdicao: boolean;\r\n  private factory: Factory;\r\n  public name: string;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private modalCtrl: ModalController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private popoverController: PopoverController,\r\n    private pageDataService: PageDataService,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.factory = this.navParams.get('factory');\r\n    this.modoEdicao = !Utils.isVarInvalid(this.factory);\r\n    if (this.modoEdicao) {\r\n      this.name = this.factory.getNome();\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  async closeModal() {\r\n    await this.modalCtrl.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  addNew() {\r\n    const logHeader = this.logHeader + \"addNew>>\";\r\n    if (Utils.isStringInvalid(this.name)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_NAME);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + this.name);\r\n    }\r\n    if (!this.modoEdicao) {\r\n      this.api.createFactory(new Factory(this.name)).then((response: Factory) => {\r\n        this.pageDataService.setData('newFactory', response);\r\n        this.pageDataService.pushUsers(response);\r\n        this.popoverController.dismiss();\r\n        this.closeModal();\r\n        this.utils.simpleToast(ToastText.CREATION_SUCCESSFUL);\r\n      }).catch((error) => {\r\n        let message = JSON.parse(error._body).message as string;\r\n        if (message.includes(ErrorType.DUPLICATED)) {\r\n          this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n        }\r\n        else {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.factory.setNome(this.name);\r\n      this.api.editFactory(this.factory).then((response: Factory) => {\r\n        this.pageDataService.setData('newFactory', response);\r\n        this.pageDataService.pushUsers(response);\r\n        this.popoverController.dismiss();\r\n        this.closeModal();\r\n        this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n      }).catch((error) => {\r\n        let message = JSON.parse(error._body).message as string;\r\n        if (message.includes(ErrorType.DUPLICATED)) {\r\n          this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n        }\r\n        else {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n  <ion-item (click)=\\\"newLinha($event)\\\" no-lines>\\r\\n    <ion-label>Adicionar Linha</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FyZWFzL2xpbmhhL2xpbmhhLW1lbnUvbGluaGEtbWVudS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController, NavParams } from '@ionic/angular';\r\nimport { NewPageL } from '../new/new.page';\r\nimport { Line } from 'src/models/Line';\r\n\r\n@Component({\r\n  selector: 'app-linha-menu',\r\n  templateUrl: './linha-menu.page.html',\r\n  styleUrls: ['./linha-menu.page.scss'],\r\n})\r\nexport class LinhaMenuPage {\r\n\r\n  private line: Line;\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.line = this.navParams.get('line');\r\n  }\r\n\r\n  async newLinha(ev: any) {\r\n    this.DismissClick()\r\n    const popover = await this.popoverController.create({\r\n      component: NewPageL,\r\n      event: ev,\r\n      animated: true,\r\n      showBackdrop: true,\r\n      cssClass: 'popover_class',\r\n      componentProps: {\r\n        line: this.line\r\n      }\r\n    });\r\n\r\n    return await popover.present();\r\n\r\n  }\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n}\r\n","module.exports = \"<ion-header *ngIf=\\\"modoEdicao\\\">\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n    <i class=\\\"fas fa-times-circle ico-white only-icon\\\" (click)=\\\"closeModal()\\\" slot=\\\"end\\\"></i>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n        <mat-label>Nome da Linha</mat-label>\\r\\n        <input [(ngModel)]=\\\"name\\\" matInput placeholder=\\\"ex: PK3000A\\\">\\r\\n\\r\\n      </mat-form-field>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n        <mat-label>Fábrica</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"factory\\\" (selectionChange)=\\\"factorySelected($event.value)\\\">\\r\\n          <mat-option *ngFor=\\\"let factory of factories\\\" [value]=\\\"factory\\\">\\r\\n            {{factory.nome}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n        <mat-label>Seção</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"section\\\" (selectionChange)=\\\"sectionSelected($event.value)\\\">\\r\\n          <mat-option *ngFor=\\\"let section of sections\\\" [value]=\\\"section\\\">\\r\\n            {{section.nome}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-block btn-mdlz-clear\\\" ion-button clear item-right (click)=\\\"addNew()\\\"\\r\\n        [disabled]=\\\"name==undefined || name=='' || factoryId==undefined || sectionId==undefined\\\">\\r\\n        Salvar\\r\\n      </button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FyZWFzL2xpbmhhL25ldy9uZXcucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Factory } from 'src/models/Factory';\r\nimport { Section } from 'src/models/Section';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { PopoverController, ModalController, NavParams } from '@ionic/angular';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { Line } from 'src/models/Line';\r\nimport { ToastText, ErrorMessage, ErrorType } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.page.html',\r\n  styleUrls: ['./new.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class NewPageL {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"NewPageL>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public modoEdicao: boolean;\r\n  private line: Line;\r\n  public name: string;\r\n  public factory: Factory;\r\n  public factoryId: number;\r\n  public factories: Array<Factory> = new Array<Factory>();\r\n  public sectionId: number;\r\n  public sections: Array<Section> = new Array<Section>();\r\n  public section: Section;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private modalCtrl: ModalController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private popoverController: PopoverController,\r\n    private pageDataService: PageDataService,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.line = this.navParams.get('line');\r\n    this.modoEdicao = !Utils.isVarInvalid(this.line);\r\n    if (this.modoEdicao) {\r\n      this.name = this.line.getNome();\r\n      this.sectionId = this.line.getSecaoId();\r\n      this.api.getSections().then((sections: Array<Section>) => {\r\n        let section = sections.filter((n) => n.getId() == this.sectionId)[0];\r\n        this.factoryId = section.getFabricaId();\r\n        this.getSections();\r\n      })\r\n    }\r\n    else {\r\n      this.getSections();\r\n\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n\r\n  async closeModal() {\r\n    await this.modalCtrl.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  compareById(o1, o2) {\r\n    if (o1 == null || o2 == null) {\r\n      return false;\r\n    }\r\n    return o1.id === o2.id;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getSections() {\r\n    this.api.getSections(this.factoryId).then((sections: Array<Section>) => {\r\n      this.sections = sections;\r\n      if (this.modoEdicao) {\r\n        this.section = this.sections.filter(n => n.getId() == this.sectionId)[0];\r\n      }\r\n      this.api.getFactories().then((factories: Array<Factory>) => {\r\n        this.factories = factories;\r\n        if (this.modoEdicao) {\r\n          this.factory = this.factories.filter(n => n.getId() == this.section.getFabricaId())[0];\r\n        }\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n      });\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  factorySelected(factory: Factory) {\r\n    this.factoryId = factory.getId();\r\n    this.api.getSections(factory.getId()).then((sections: Array<Section>) => {\r\n      this.sections = sections;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  sectionSelected(section: Section) {\r\n    this.sectionId = section.getId();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  addNew() {\r\n    const logHeader = this.logHeader + \"addNew>>\";\r\n    if (Utils.isVarInvalid(this.factoryId)) {\r\n      this.utils.simpleToast(ToastText.INSERT_FACTORY);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>FACTORY>>\" + this.factoryId);\r\n    }\r\n    if (Utils.isVarInvalid(this.sectionId)) {\r\n      this.utils.simpleToast(ToastText.INSERT_SECTION);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>SECTION>>\" + this.sectionId);\r\n    }\r\n    if (Utils.isStringInvalid(this.name)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_NAME);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + this.name);\r\n    }\r\n    if (!this.modoEdicao) {\r\n      this.api.createLine(new Line(this.sectionId, this.name)).then((response: Section) => {\r\n        this.pageDataService.setData('newLine', response);\r\n        this.pageDataService.pushUsers(response);\r\n        this.popoverController.dismiss();\r\n        this.closeModal();\r\n        this.utils.simpleToast(ToastText.CREATION_SUCCESSFUL);\r\n      }).catch((error) => {\r\n        let message = JSON.parse(error._body).message as string;\r\n        if (message.includes(ErrorType.DUPLICATED)) {\r\n          this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n        }\r\n        else {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.line.setNome(this.name);\r\n      this.line.setSecaoId(this.sectionId);\r\n      this.api.editLine(this.line).then((response: Line) => {\r\n        this.pageDataService.setData('newLine', response);\r\n        this.pageDataService.pushUsers(response);\r\n        this.popoverController.dismiss();\r\n        this.closeModal();\r\n        this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n      }).catch((error) => {\r\n        let message = JSON.parse(error._body).message as string;\r\n        if (message.includes(ErrorType.DUPLICATED)) {\r\n          this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n        }\r\n        else {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","module.exports = \"<ion-header *ngIf=\\\"modoEdicao\\\">\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n    <i class=\\\"fas fa-times-circle ico-white only-icon\\\" (click)=\\\"closeModal()\\\" slot=\\\"end\\\"></i>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n        <mat-label>Nome da Seção</mat-label>\\r\\n        <input [(ngModel)]=\\\"name\\\" matInput placeholder=\\\"ex: Bebidas\\\">\\r\\n\\r\\n      </mat-form-field>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n        <mat-label>Fábrica</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"factory\\\" (selectionChange)=\\\"factorySelected($event.value)\\\" [compareWith]=\\\"compareById\\\">\\r\\n          <mat-option *ngFor=\\\"let factory of factories\\\" [value]=\\\"factory\\\">\\r\\n            {{factory.nome}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-block btn-mdlz-clear\\\" ion-button clear item-right (click)=\\\"addNew()\\\"\\r\\n        [disabled]=\\\"name==undefined || name=='' || factoryId==undefined\\\">\\r\\n        Salvar\\r\\n      </button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FyZWFzL3NlY2FvL25ldy9uZXcucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Factory } from 'src/models/Factory';\r\nimport { ToastText, ErrorMessage, ErrorType } from 'src/commons/Constants';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { PopoverController, NavParams, ModalController } from '@ionic/angular';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { Section } from 'src/models/Section';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.page.html',\r\n  styleUrls: ['./new.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class NewPageS {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"NewPageS>>\"\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n  private section: Section;\r\n  public modoEdicao: boolean;\r\n  public name: string;\r\n  public factoryId: number;\r\n  public factories: Array<Factory> = new Array<Factory>();\r\n  public factory: Factory;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private modalCtrl: ModalController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private popoverController: PopoverController,\r\n    private pageDataService: PageDataService,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.section = this.navParams.get('section');\r\n    this.modoEdicao = !Utils.isVarInvalid(this.section);\r\n    if (this.modoEdicao) {\r\n      this.name = this.section.getNome();\r\n      this.factoryId = this.section.getFabricaId();\r\n    }\r\n    this.getFactories();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  async closeModal() {\r\n    await this.modalCtrl.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  compareById(o1, o2) {\r\n    if (o1 == null || o2 == null) {\r\n      return false;\r\n    }\r\n    return o1.id === o2.id;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  factorySelected(factory: Factory) {\r\n    this.factoryId = factory.getId();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getFactories() {\r\n    this.api.getFactories().then((factories: Array<Factory>) => {\r\n      this.factories = factories;\r\n      if (this.modoEdicao) {\r\n        this.factory = this.factories.filter(n => n.getId() == this.factoryId)[0];\r\n      }\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  addNew() {\r\n    const logHeader = this.logHeader + \"addNew>>\";\r\n    if (Utils.isVarInvalid(this.factoryId)) {\r\n      this.utils.simpleToast(ToastText.INSERT_FACTORY);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>FACTORY>>\" + this.factoryId);\r\n    }\r\n    if (Utils.isStringInvalid(this.name)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_NAME);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + this.name);\r\n    }\r\n    if (!this.modoEdicao) {\r\n      this.api.createSection(new Section(this.factoryId, this.name)).then((response: Section) => {\r\n        this.pageDataService.setData('newSection', response);\r\n        this.pageDataService.pushUsers(response);\r\n        this.popoverController.dismiss();\r\n        this.closeModal();\r\n        this.utils.simpleToast(ToastText.CREATION_SUCCESSFUL);\r\n      }).catch((error) => {\r\n        let message = JSON.parse(error._body).message as string;\r\n        if (message.includes(ErrorType.DUPLICATED)) {\r\n          this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n        }\r\n        else {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.section.setNome(this.name);\r\n      this.section.setFabricaId(this.factoryId);\r\n      this.api.editSection(this.section).then((response: Section) => {\r\n        this.pageDataService.setData('newSection', response);\r\n        this.pageDataService.pushUsers(response);\r\n        this.popoverController.dismiss();\r\n        this.closeModal();\r\n        this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n      }).catch((error) => {\r\n        let message = JSON.parse(error._body).message as string;\r\n        if (message.includes(ErrorType.DUPLICATED)) {\r\n          this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n        }\r\n        else {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n  <ion-item (click)=\\\"newSecao($event)\\\" no-lines>\\r\\n    <ion-label>Adicionar Seção</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FyZWFzL3NlY2FvL3NlY2FvLW1lbnUvc2VjYW8tbWVudS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController, NavParams } from '@ionic/angular';\r\nimport { NewPageS } from '../new/new.page';\r\nimport { Section } from 'src/models/Section';\r\n\r\n@Component({\r\n  selector: 'app-secao-menu',\r\n  templateUrl: './secao-menu.page.html',\r\n  styleUrls: ['./secao-menu.page.scss'],\r\n})\r\nexport class SecaoMenuPage implements OnInit {\r\n\r\n  private section: Section;\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.section = this.navParams.get('section')\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async newSecao(ev: any) {\r\n    this.DismissClick()\r\n    const popover = await this.popoverController.create({\r\n      component: NewPageS,\r\n      event: ev,\r\n      animated: true,\r\n      showBackdrop: true,\r\n      translucent: true,\r\n      cssClass: 'popover_class',\r\n      componentProps: {\r\n        section: this.section\r\n      }\r\n    });\r\n\r\n    return await popover.present();\r\n\r\n  }\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { DashboardPage } from './dashboard.page';\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MaterialModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [DashboardPage]\r\n})\r\nexport class DashboardPageModule {\r\n\r\n\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle auto-hide=\\\"false\\\"><i class=\\\"fas fa-align-left icon-menu\\\"></i></ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n    <span class=\\\"title_t\\\">Dashboard</span>\\r\\n    <span class=\\\"title_w\\\">do Administrador</span>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col class='swiper-slide '>\\r\\n        <ion-slides>\\r\\n          <ion-slide>\\r\\n            <div class=\\\"box_dash b_01\\\">\\r\\n              <a routerLink=\\\"/members\\\">\\r\\n                <i class=\\\"fas fa-users\\\"></i>\\r\\n                <span class=\\\"box_dash_txt\\\">Usuários</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n            <div class=\\\"box_dash b_02\\\">\\r\\n              <a routerLink=\\\"/pontos/usuarios\\\">\\r\\n                <i class=\\\"fas fa-coins\\\"></i>\\r\\n                <span class=\\\"box_dash_txt\\\">Pontos</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n            <div class=\\\"box_dash b_03\\\">\\r\\n              <a routerLink=\\\"/areas/fabrica\\\">\\r\\n                <i class=\\\"fas fa-layer-group\\\"></i>\\r\\n                <span class=\\\"box_dash_txt\\\">Áreas</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n            <div class=\\\"box_dash b_04\\\">\\r\\n              <a routerLink=\\\"/team\\\">\\r\\n                <i class=\\\"fas fa-user-friends\\\"></i>\\r\\n                <span class=\\\"box_dash_txt\\\">Equipes</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n            <div class=\\\"box_dash b_05\\\">\\r\\n              <a routerLink=\\\"/rules\\\">\\r\\n                <i class=\\\"fas fa-star\\\"></i>\\r\\n                <span class=\\\"box_dash_txt\\\">Regulamento</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n            <div class=\\\"box_dash b_06\\\">\\r\\n              <a routerLink=\\\"/notification\\\">\\r\\n                <i class=\\\"fas fa-envelope\\\"></i>\\r\\n                <span class=\\\"box_dash_txt\\\">Mensagens</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n            <div class=\\\"box_dash b_07\\\">\\r\\n              <a routerLink=\\\"/prize\\\">\\r\\n                <i class=\\\"fas fa-gift\\\"></i>\\r\\n                <span class=\\\"box_dash_txt\\\">Prêmios</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </ion-slide>\\r\\n        </ion-slides>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\" class=\\\"sm-2\\\">\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            Tipos de Reconhecimento\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <canvas #pieCanvas></canvas>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n\\r\\n      <ion-col size=\\\"12\\\" class=\\\"sm-2\\\">\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            Reconhecimentos\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <canvas #barCanvas></canvas>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row>\\r\\n\\r\\n      <ion-col size=\\\"12\\\" class=\\\"sm-2\\\">\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            Pontos por Pilar\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <canvas #lineBarCanvas></canvas>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n\\r\\n      <ion-col size=\\\"12\\\" class=\\\"sm-2\\\">\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            Top 5 Linhas\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <table class=\\\"table-normal\\\" *ngIf=\\\"linhas!=undefined && linhas!=null\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th width=\\\"50%\\\">Linhas</th>\\r\\n                  <th width=\\\"50%\\\">Pontuação</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let entry of linhas.getLabels(); let i = index\\\">\\r\\n                  <td width=\\\"50%\\\">{{linhas.getLabels()[i]}}</td>\\r\\n                  <td width=\\\"50%\\\">{{linhas.getDados()[i]}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            Nº de Usuários x Pontuação\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <canvas #lineCanvas></canvas>\\r\\n          </ion-card-content>\\r\\n          <ion-card-content>\\r\\n            <table class=\\\"table-normal\\\" *ngIf=\\\"usuarios!=undefined && usuarios!=null\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th width=\\\"33.3%\\\">Pontos</th>\\r\\n                  <th width=\\\"33.3%\\\">Pessoas</th>\\r\\n                  <th width=\\\"33.3%\\\">%</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let entry of usuarios\\\">\\r\\n                  <td width=\\\"33.3%\\\">{{entry.label}}</td>\\r\\n                  <td width=\\\"33.3%\\\">{{entry.dado}}</td>\\r\\n                  <td width=\\\"33.3%\\\">{{entry.porcentagem}}%</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\"","module.exports = \".table-normal {\\n  border-radius: 0;\\n  margin-top: 0;\\n  width: 100%; }\\n  .table-normal thead {\\n    display: block;\\n    color: #fff; }\\n  .table-normal thead tr {\\n      height: auto;\\n      padding: 10px;\\n      border-radius: 0;\\n      font-family: \\\"Montserrat\\\", sans-serif;\\n      font-size: 14px;\\n      background: #4F2170;\\n      display: block; }\\n  .table-normal thead tr th {\\n        display: inline-block !important;\\n        text-align: -internal-center; }\\n  .table-normal tbody tr {\\n    height: auto;\\n    padding: 5px 10px 5px 10px;\\n    border-bottom: 1px solid #f6f6f6; }\\n  .table-normal tbody tr td {\\n      display: inline-block !important;\\n      padding: 8px;\\n      padding-left: 8px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL0Q6XFxEZXNrdG9wXFxQcm9qZXRvc1xcRGVzZW52b2x2aW1lbnRvXFxNb25kZWxlelxcUGx1c1xcR0lUX01vbmRlbGV6UGx1c1xcZnJvbnQvc3JjXFxhcHBcXGFkbWluXFxkYXNoYm9hcmRcXGRhc2hib2FyZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLFdBQVcsRUFBQTtFQUhmO0lBTVEsY0FBYztJQUNkLFdBQVcsRUFBQTtFQVBuQjtNQVVZLFlBQVk7TUFDWixhQUFhO01BQ2IsZ0JBQWdCO01BQ2hCLHFDQUFxQztNQUNyQyxlQUFlO01BQ2YsbUJBQW1CO01BQ25CLGNBQWMsRUFBQTtFQWhCMUI7UUFtQmdCLGdDQUFnQztRQUNoQyw0QkFBNEIsRUFBQTtFQXBCNUM7SUEyQlksWUFBWTtJQUNaLDBCQUEwQjtJQUMxQixnQ0FBZ0MsRUFBQTtFQTdCNUM7TUErQmdCLGdDQUFnQztNQUNoQyxZQUFZO01BQ1osNEJBQ0osRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxlLW5vcm1hbCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgIHRoZWFkIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuXHJcbiAgICAgICAgdHIge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjNEYyMTcwO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuXHJcbiAgICAgICAgICAgIHRoIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogLWludGVybmFsLWNlbnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0Ym9keSB7XHJcbiAgICAgICAgdHIge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4IDVweCAxMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2Y2ZjZmNjtcclxuICAgICAgICAgICAgdGQgIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogOHB4O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA4cHggIWltcG9ydGFudFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIHRhYmxlIHtcclxuLy8gICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4vLyAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuLy8gICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbi8vICAgICBib3JkZXI6IDA7XHJcbi8vICAgICBtYXJnaW4tdG9wOiAwO1xyXG4vLyB9XHJcblxyXG4vLyB0aGVhZCB7XHJcbi8vICAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xyXG4vLyAgICAgZmxvYXQ6IGxlZnQ7XHJcbi8vICAgICB3aWR0aDogMzUlO1xyXG4vLyB9XHJcblxyXG4vLyB0aGVhZCB0aCB7XHJcbi8vICAgICBkaXNwbGF5OiBibG9jaztcclxuLy8gICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbi8vIH1cclxuXHJcbi8vIHRoZWFkIHRyIHtcclxuLy8gICAgIGhlaWdodDogYXV0bztcclxuLy8gICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbi8vICAgICBsaW5lLWhlaWdodDogMjtcclxuLy8gfVxyXG5cclxuLy8gdGJvZHkge1xyXG4vLyAgICAgZmxvYXQ6IGxlZnQ7XHJcbi8vICAgICB3aWR0aDogNjUlO1xyXG4vLyB9XHJcblxyXG4vLyB0Ym9keSB0ciB7XHJcbi8vICAgICBkaXNwbGF5OiBibG9jaztcclxuLy8gICAgIGZsb2F0OiBsZWZ0O1xyXG4vLyAgICAgaGVpZ2h0OiBhdXRvO1xyXG4vLyAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4vLyAgICAgd2lkdGg6IDEwMCU7XHJcbi8vIH1cclxuXHJcbi8vIHRib2R5IHRkIHtcclxuLy8gICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4vLyAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG4vLyAgICAgbGluZS1oZWlnaHQ6IDI7XHJcbi8vICAgICB3aWR0aDogMTAwJTtcclxuLy8gICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbi8vIH1cclxuXHJcbi8vIHRhYmxlIHRib2R5IHRyIHRkIHtcclxuLy8gICAgIHBhZGRpbmctbGVmdDogNSUgIWltcG9ydGFudDtcclxuLy8gICAgIG1hcmdpbi1ib3R0b206IDRweDtcclxuLy8gfVxyXG4iXX0= */\"","import { AuthenticationService } from './../../services/authentication.service';\r\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { MenuController, NavController, IonSlides } from '@ionic/angular';\r\nimport { Chart } from 'chart.js';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { AlertTitle, AlertText, MenuText, ToastText } from 'src/commons/Constants';\r\nimport { ChartItem } from 'src/models/ChartItem';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.page.html',\r\n  styleUrls: ['./dashboard.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class DashboardPage implements OnInit {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  @ViewChild('slides') slides: IonSlides;\r\n  @ViewChild(\"barCanvas\") barCanvas: ElementRef;\r\n  @ViewChild(\"pieCanvas\") pieCanvas: ElementRef;\r\n  @ViewChild(\"lineBarCanvas\") lineBarCanvas: ElementRef;\r\n  @ViewChild(\"lineCanvas\") lineCanvas: ElementRef;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  sliderTwo: any;\r\n  slideOptsTwo = {\r\n    initialSlide: 0,\r\n    slidesPerView: 1\r\n  }\r\n  private ages = 0;\r\n  private item_qty: any;\r\n  sliderThree: any;\r\n  private atividadesPontuadas: Chart;\r\n  private premiosResgatados: Chart;\r\n  private pontosPilar: Chart;\r\n  private pontosUsuarios: Chart;\r\n  public linhas: ChartItem;\r\n  public usuarios: Array<any>;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    public menu: MenuController,\r\n    private nav: NavController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils\r\n  ) {\r\n    this.item_qty = 1;\r\n    this.sliderTwo =\r\n    {\r\n      isBeginningSlide: true,\r\n      isEndSlide: false,\r\n    };\r\n    this.getDashboardData();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  ngOnInit() {\r\n    this.menu.enable(true);\r\n\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  sort(chartData: ChartItem): ChartItem {\r\n    let dados = chartData.getDados();\r\n    let labels = chartData.getLabels();\r\n    let list = [];\r\n    for (let i = 0; i < dados.length; i++) {\r\n      list.push({ dado: dados[i], label: labels[i] });\r\n    }\r\n    list.sort((a, b) => a.dado == b.dado ? 0 : (a.dado > b.dado ? -1 : 1))\r\n    for (let i = 0; i < dados.length; i++) {\r\n      dados[i] = list[i].dado;\r\n      labels[i] = list[i].label;\r\n    }\r\n    chartData.setDados(dados);\r\n    chartData.setLabels(labels);\r\n    return chartData\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getDashboardData() {\r\n    this.api.getDashboardData().then((dashboardData: Array<ChartItem>) => {\r\n      let atividades = dashboardData.filter(n => n.getNome().toLowerCase().includes(\"atividades\"))[0];\r\n      let premios = dashboardData.filter(n => n.getNome().toLowerCase().includes(\"premios\"))[0];\r\n      let pilares = dashboardData.filter(n => n.getNome().toLowerCase().includes(\"pilar\"))[0];\r\n      let linhas = dashboardData.filter(n => n.getNome().toLowerCase().includes(\"linhas\"))[0];\r\n      const usuarios = dashboardData.filter(n => n.getNome().toLowerCase().includes(\"usuarios\"))[0];\r\n\r\n      atividades = this.sort(atividades);\r\n      premios = this.sort(premios);\r\n      pilares = this.sort(pilares);\r\n      linhas = this.sort(linhas);\r\n\r\n      let total = 0;\r\n      for (let entry of usuarios.getDados()) {\r\n        total += entry;\r\n      }\r\n      this.usuarios = new Array<any>();\r\n      for (let i = 0; i < usuarios.getDados().length; i++) {\r\n        this.usuarios.push({ label: usuarios.getLabels()[i], dado: usuarios.getDados()[i], porcentagem: (usuarios.getDados()[i] / total * 100).toPrecision(2) })\r\n      }\r\n\r\n      this.linhas = linhas;\r\n\r\n      let colors = this.buildChartColors(premios);\r\n\r\n      this.premiosResgatados = new Chart(this.barCanvas.nativeElement, {\r\n        type: \"bar\",\r\n        data: {\r\n          labels: premios.getLabels(),\r\n          datasets: [\r\n            {\r\n              data: premios.getDados(),\r\n              backgroundColor: colors.background,\r\n              borderColor: colors.border,\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      });\r\n\r\n      colors = this.buildChartColors(atividades);\r\n      this.atividadesPontuadas = new Chart(this.pieCanvas.nativeElement, {\r\n        type: \"pie\",\r\n        data: {\r\n          labels: atividades.getLabels(),\r\n          datasets: [\r\n            {\r\n              data: atividades.getDados(),\r\n              backgroundColor: colors.background,\r\n              borderColor: colors.border,\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      });\r\n\r\n      colors = this.buildChartColors(pilares);\r\n      this.pontosPilar = new Chart(this.lineBarCanvas.nativeElement, {\r\n        type: \"horizontalBar\",\r\n        data: {\r\n          labels: pilares.getLabels(),\r\n          datasets: [\r\n            {\r\n              data: pilares.getDados(),\r\n              backgroundColor: colors.background,\r\n              borderColor: colors.border,\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      });\r\n\r\n      colors = this.buildChartColors(usuarios);\r\n      this.pontosUsuarios = new Chart(this.lineCanvas.nativeElement, {\r\n        type: \"line\",\r\n        mode: 'vertical',\r\n        data: {\r\n          labels: usuarios.getLabels(),\r\n          datasets: [\r\n            {\r\n              data: usuarios.getDados(),\r\n              fill: false,\r\n              steppedLine: false,\r\n              backgroundColor: colors.background,\r\n              borderColor: colors.border,\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      });\r\n\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  buildChartColors(chartItem: ChartItem) {\r\n    const backgroundColorPallete = [\r\n      \"rgba(79,33,112, 0.8)\",\r\n      \"rgba(225,135,025, 0.8)\",\r\n      \"rgba(40,120,25, 0.8)\",\r\n      \"rgba(45,110,170, 0.8)\",\r\n      \"rgba(165,35,35, 0.8)\",\r\n      \"rgba(230,175,35, 0.8)\",\r\n      \"rgba(153, 153, 153, 0.8)\"\r\n    ];\r\n    const borderColorPallete = [\r\n      \"rgba(79,33,112, 1)\",\r\n      \"rgba(225,135,025, 1)\",\r\n      \"rgba(40,120,25, 1)\",\r\n      \"rgba(45,110,170, 1)\",\r\n      \"rgba(165,35,35, 1)\",\r\n      \"rgba(230,175,35, 1)\",\r\n      \"rgba(153, 153, 153, 1)\"\r\n    ];\r\n\r\n\r\n    let index = 0;\r\n    let backgroundColor = new Array<string>();\r\n    let borderColor = new Array<string>();\r\n    for (let i = 0; i < chartItem.getDados().length; i++) {\r\n      if (index >= backgroundColorPallete.length) {\r\n        index = 0;\r\n      }\r\n      if (i == chartItem.getDados().length - 1 && backgroundColor[0] == backgroundColorPallete[index]) {\r\n        index++;\r\n      }\r\n      backgroundColor.push(backgroundColorPallete[index]);\r\n      borderColor.push(borderColorPallete[index]);\r\n      index++;\r\n    }\r\n    return { background: backgroundColor, border: borderColor };\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n    <ion-item (click)=\\\"newUser()\\\"  no-lines>\\r\\n      <ion-label>Adicionar Usuário</ion-label>\\r\\n    </ion-item>\\r\\n</ion-list>\"","module.exports = \"ion-list ion-item {\\n  text-align: center; }\\n\\nion-list.list-ios {\\n  margin-bottom: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVtYmVycy9tZW1iZXJzLW1lbnUvRDpcXERlc2t0b3BcXFByb2pldG9zXFxEZXNlbnZvbHZpbWVudG9cXE1vbmRlbGV6XFxQbHVzXFxHSVRfTW9uZGVsZXpQbHVzXFxmcm9udC9zcmNcXGFwcFxcYWRtaW5cXG1lbWJlcnNcXG1lbWJlcnMtbWVudVxcbWVtYmVycy1tZW51LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBRVEsa0JBQWtCLEVBQUE7O0FBRjFCO0VBS1EsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9tZW1iZXJzL21lbWJlcnMtbWVudS9tZW1iZXJzLW1lbnUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBub3RpZmljYXRpb25zLmNvbXBvbmVudC5zY3NzXHJcbmlvbi1saXN0IHtcclxuICAgIGlvbi1pdGVtIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICAmLmxpc3QtaW9zIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PopoverController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-members-menu',\r\n  templateUrl: './members-menu.component.html',\r\n  styleUrls: ['./members-menu.component.scss'],\r\n})\r\nexport class MembersMenuComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private popoverController: PopoverController) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  newUser() {\r\n    this.popoverController.dismiss();\r\n    this.router.navigate(['/users']);\r\n  }\r\n}\r\n","module.exports = \"<ion-content class=\\\"app-modal\\\">\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n          <mat-label>Justificativa</mat-label>\\r\\n          <input [(ngModel)]=\\\"name\\\" matInput placeholder=\\\"ex: Limpeza\\\">\\r\\n          <mat-icon matSuffix>info</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n          <mat-label>Pilar</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"pilar\\\" [compareWith]=\\\"compareById\\\">\\r\\n            <mat-option *ngFor=\\\"let pilar of pilares\\\" [value]=\\\"pilar\\\">\\r\\n              {{pilar.description}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n          <mat-label>Valor</mat-label>\\r\\n          <input [(ngModel)]=\\\"value\\\" matInput placeholder=\\\"ex: 150\\\">\\r\\n          <mat-icon matSuffix>attach_money</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\" class=\\\"text-left\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger block\\\" (click)=\\\"DismissClick()\\\">Fechar</button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\" class=\\\"text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary block\\\" (click)=\\\"edit()\\\"\\r\\n          [disabled]=\\\"name==undefined || value==undefined\\\">Salvar</button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BvbnRvcy9hdGl2aWRhZGVzLWVkaXQvYXRpdmlkYWRlcy1lZGl0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController, NavParams } from '@ionic/angular';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Activity } from 'src/models/Activity';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage, ToastText } from 'src/commons/Constants';\r\nimport { Schooling } from 'src/models/Schooling';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-atividades-edit',\r\n  templateUrl: './atividades-edit.page.html',\r\n  styleUrls: ['./atividades-edit.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class AtividadesEditPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"AtividadesEditPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public pilares: Array<Schooling> = new Array<Schooling>();\r\n  public pilar: Schooling;\r\n  private activity: Activity;\r\n  public name: string;\r\n  public value: number;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(public popoverController: PopoverController, private navParams: NavParams, private api: BackendApiProvider, private utils: Utils) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    this.activity = this.navParams.get('activity');\r\n    if (!Utils.isVarInvalid(this.activity)) {\r\n      this.activity = Activity.castFromJSON(this.activity)\r\n      this.name = this.activity.getNome();\r\n      this.value = this.activity.getValor();\r\n      switch (this.activity.getPilar()) {\r\n        case \"Liderança\":\r\n          {\r\n            this.pilar = new Schooling(1, this.activity.getPilar());\r\n            break;\r\n          }\r\n        case \"SSMA\":\r\n          {\r\n            this.pilar = new Schooling(2, this.activity.getPilar());\r\n            break;\r\n          }\r\n        case \"MF\":\r\n          {\r\n            this.pilar = new Schooling(3, this.activity.getPilar());\r\n            break;\r\n          }\r\n        case \"IIM\":\r\n          {\r\n            this.pilar = new Schooling(4, this.activity.getPilar());\r\n            break;\r\n          }\r\n        case \"MP\":\r\n          {\r\n            this.pilar = new Schooling(5, this.activity.getPilar());\r\n            break;\r\n          }\r\n        case \"MA\":\r\n          {\r\n            this.pilar = new Schooling(6, this.activity.getPilar());\r\n            break;\r\n          }\r\n        case \"QM\":\r\n          {\r\n            this.pilar = new Schooling(7, this.activity.getPilar());\r\n            break;\r\n          }\r\n        case \"WPI\":\r\n          {\r\n            this.pilar = new Schooling(8, this.activity.getPilar());\r\n            break;\r\n          }\r\n        default: {\r\n          this.pilar = new Schooling(1, \"Liderança\");\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.pilares.push(new Schooling(1, \"Liderança\"));\r\n    this.pilares.push(new Schooling(2, \"SSMA\"));\r\n    this.pilares.push(new Schooling(3, \"MF\"));\r\n    this.pilares.push(new Schooling(4, \"IIM\"));\r\n    this.pilares.push(new Schooling(5, \"MP\"));\r\n    this.pilares.push(new Schooling(6, \"MA\"));\r\n    this.pilares.push(new Schooling(7, \"QM\"));\r\n    this.pilares.push(new Schooling(8, \"WPI\"));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  compareById(o1, o2) {\r\n    if (o1 == null || o2 == null) {\r\n      return false;\r\n    }\r\n    return o1.id === o2.id;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async edit() {\r\n    const logHeader = this.logHeader + \"edit>>\";\r\n    if (Utils.isStringInvalid(this.name)) {\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + this.name)\r\n    }\r\n    if (Utils.isVarInvalid(this.pilar)) {\r\n      this.utils.simpleToast(ToastText.INSERT_NAME);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>PILAR>>\" + this.pilar);\r\n    }\r\n    if (Utils.isVarInvalid(this.value)) {\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + this.value)\r\n    }\r\n    if (Utils.isVarInvalid(this.activity)) {\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + this.activity)\r\n    }\r\n    this.activity.setNome(this.name);\r\n    this.activity.setValor(this.value);\r\n    this.activity.setPilar(this.pilar.description);\r\n    this.api.editActivity(this.activity).then(() => {\r\n      this.utils.simpleToast(ToastText.ACTIVITY_EDITED);\r\n      this.popoverController.dismiss(this.activity);\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(ToastText.SOMETHING_WENT_WRONG);\r\n      this.DismissClick();\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n  <ion-item (click)=\\\"newPontuacao()\\\"  no-lines>\\r\\n    <ion-label>Zerar Pontuação</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BvbnRvcy9wb250b3MtbWVudS9wb250b3MtbWVudS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ZeramentoPage } from '../users/zeramento/zeramento.page';\r\nimport { ModalController, PopoverController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pontos-menu',\r\n  templateUrl: './pontos-menu.page.html',\r\n  styleUrls: ['./pontos-menu.page.scss'],\r\n})\r\nexport class PontosMenuPage implements OnInit {\r\n\r\n  constructor(private router: Router,  private popoverController: PopoverController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  async newPontuacao() {\r\n    this.popoverController.dismiss();\r\n    this.router.navigateByUrl('/zeramento');\r\n  }\r\n}\r\n","module.exports = \"<ion-content class=\\\"app-modal\\\">\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\n          <mat-label>Motivo</mat-label>\\n          <mat-select (selectionChange)=\\\"activitySelected($event.value)\\\">\\n            <mat-option *ngFor=\\\"let activity of activities\\\" [value]=\\\"activity\\\">\\n              {{activity.getNome()}} ({{activity.getValor()}} Pontos)\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row>\\n      <ion-col size=\\\"6\\\" class=\\\"text-left\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger block\\\" (click)=\\\"DismissClick()\\\">Fechar</button>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\" class=\\\"text-right\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary block\\\" (click)=\\\"addPoints()\\\"\\n          [disabled]=\\\"selectedActivity==undefined\\\">Salvar</button>\\n      </ion-col>\\n    </ion-row>\\n\\n  </ion-grid>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BvbnRvcy9wb250b3MtbW9kYWwvcG9udG9zLW1vZGFsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalController, PopoverController, NavParams } from '@ionic/angular';\r\nimport { Activity } from 'src/models/Activity';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { ToastText, ErrorMessage } from 'src/commons/Constants';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-pontos-modal',\r\n  templateUrl: './pontos-modal.page.html',\r\n  styleUrls: ['./pontos-modal.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class PontosModalPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"PontosModalPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public activities: Array<Activity> = new Array<Activity>();\r\n  public selectedActivity: Activity;\r\n  private users: Array<number> = new Array<number>();\r\n  private remove: boolean = false;\r\n  private page: number = 1;\r\n  private totalPages: number;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private navParams: NavParams,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private pageData: PageDataService\r\n  ) {\r\n    this.users = this.navParams.get('users');\r\n    this.remove = this.navParams.get('remove');\r\n    this.getActivities();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getActivities() {\r\n    if (this.remove) {\r\n      this.api.getActivities(null).then((response: any) => {\r\n        let activities = response.list;\r\n        this.activities = activities.filter((n) => n.getValor() < 0);\r\n      }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n    }\r\n    else {\r\n      this.api.getActivities(null).then((response: any) => {\r\n        let activities = response.list;\r\n        this.activities = activities.filter((n) => n.getValor() > 0);\r\n      }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async addPoints() {\r\n    const logHeader = this.logHeader + \"addPoints>>\";\r\n    if (Utils.isVarInvalid(this.selectedActivity)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_REASON)\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"ACTIVITY>>\" + JSON.stringify(this.selectedActivity));\r\n    }\r\n    this.api.addPoints(this.users, this.selectedActivity).then(() => {\r\n      this.utils.simpleToast(ToastText.POINTS_ADDED);\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n    }).finally(() => {\r\n      this.pageData.listUserEvent.emit({ users: this.users, value: this.selectedActivity.getValor() });\r\n      this.popoverController.dismiss();\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  activitySelected(activity: Activity) {\r\n    this.selectedActivity = activity;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","module.exports = \"<ion-content class=\\\"app-modal\\\">\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\n          <mat-label>Justificativa</mat-label>\\n          <input [(ngModel)]=\\\"name\\\" matInput placeholder=\\\"ex: Atraso\\\">\\n          <mat-icon matSuffix>info</mat-icon>\\n        </mat-form-field>\\n      </ion-col>\\n      <ion-col>\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\n          <mat-label>Valor</mat-label>\\n          <input [(ngModel)]=\\\"value\\\" matInput placeholder=\\\"ex: Bebidas\\\">\\n          <mat-icon matSuffix>attach_money</mat-icon>\\n        </mat-form-field>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row>\\n      <ion-col size=\\\"6\\\" class=\\\"text-left\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger block\\\" (click)=\\\"DismissClick()\\\">Fechar</button>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\" class=\\\"text-right\\\">\\n        <button  type=\\\"submit\\\" class=\\\"btn btn-primary block\\\" (click)=\\\"RemovePoints()\\\">Salvar</button>\\n      </ion-col>\\n    </ion-row>\\n\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BvbnRvcy9wb250b3MtcmVtb3ZlL3BvbnRvcy1yZW1vdmUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController, NavParams } from '@ionic/angular';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Activity } from 'src/models/Activity';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage, ToastText } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-pontos-remove',\r\n  templateUrl: './pontos-remove.page.html',\r\n  styleUrls: ['./pontos-remove.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class PontosRemovePage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"PontosRemovePage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private users: Array<number> = new Array<number>();\r\n  public name: string;\r\n  public value: number;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(public popoverController: PopoverController, private navParams: NavParams, private api: BackendApiProvider, private utils:Utils) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    this.users = this.navParams.get('users');\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async RemovePoints() {\r\n    const logHeader = this.logHeader + \"RemovePoints>>\";\r\n    if (Utils.isStringInvalid(this.name)) {\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + this.name)\r\n    }\r\n    if (Utils.isVarInvalid(this.value) || this.value <= 0) {\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + this.value)\r\n    }\r\n    // TODO REMOÇÃO DE PONTOS\r\n    // this.api.addPoints(this.users, new Activity(this.value,this.name)).then(()=>{\r\n    //   this.utils.simpleToast(ToastText.POINTS_REMOVED);\r\n    // }).catch((error)=>{\r\n    //   this.utils.simpleToastError(ToastText.SOMETHING_WENT_WRONG);\r\n    // }).finally(()=>{\r\n    //   this.DismissClick();\r\n    // })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n    <i class=\\\"fas fa-times-circle ico-white only-icon\\\" (click)=\\\"dismiss()\\\" slot=\\\"end\\\"></i>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-grid>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <img [src]=\\\"photo\\\" onError=\\\"src = '../assets/imgs/no-image.png'\\\" class=\\\"reward-pic\\\">\\r\\n        <br>\\r\\n        <button class=\\\"btn btn-block btn-mdlz-clear color3\\\" ion-button clear (click)=\\\"selectImage()\\\">\\r\\n          Selecionar Imagem\\r\\n        </button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-checkbox [(ngModel)]=\\\"active\\\"></ion-checkbox><span class=\\\"user_status\\\"> Prêmio Ativo</span>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width ion-margin-top\\\">\\r\\n          <mat-label>Nome do prêmio</mat-label>\\r\\n          <input [(ngModel)]=\\\"name\\\" matInput placeholder=\\\"ex: Cesta de café da manhã\\\">\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n          <mat-label>Valor</mat-label>\\r\\n          <input [(ngModel)]=\\\"cost\\\" matInput placeholder=\\\"ex: 150\\\">\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n          <mat-label>Descrição</mat-label>\\r\\n          <input [(ngModel)]=\\\"description\\\" matInput placeholder=\\\"ex: Contém x, y e z\\\">\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n          <mat-label>Quantidade Disponível (para ilimitada deixar vazio)</mat-label>\\r\\n          <input [(ngModel)]=\\\"quantity\\\" matInput placeholder=\\\"ex: 200\\\">\\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <button type=\\\"submit\\\" (click)=\\\"save()\\\" [disabled]=\\\"isSaveDisabled()\\\" class=\\\"btn btn-block btn-mdlz-clear color2\\\"\\r\\n          ion-button clear item-right>\\r\\n          Salvar\\r\\n        </button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3ByaXplL25ldy1yZXdhcmQvbmV3LXJld2FyZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavParams, ActionSheetController, Platform } from '@ionic/angular';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { Reward } from 'src/models/Reward';\r\nimport { ToastText, ErrorMessage, MenuText, ErrorType } from 'src/commons/Constants';\r\nimport { Activity } from 'src/models/Activity';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { PictureSourceType } from '@ionic-native/camera/ngx';\r\n\r\n@Component({\r\n  selector: 'app-new-reward',\r\n  templateUrl: './new-reward.page.html',\r\n  styleUrls: ['./new-reward.page.scss'],\r\n})\r\nexport class NewRewardPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"NewRewardPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private modoEdicao: boolean = false;\r\n  private reward: Reward;\r\n  public active: boolean;\r\n  public name: string;\r\n  public cost: number;\r\n  public description: string;\r\n  public quantity: any;\r\n  public photo: string;\r\n  private imageData;\r\n  private imagePath;\r\n  private uploadImage: boolean = false;\r\n  private imageConcatString = Utils.generateRandomString();\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private navParams: NavParams,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private pageDataService: PageDataService,\r\n    private actionSheetController: ActionSheetController,\r\n    private platform: Platform\r\n  ) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    let reward = this.navParams.get('reward') as Reward;\r\n    this.modoEdicao = !Utils.isVarInvalid(reward);\r\n    if (this.modoEdicao) {\r\n      this.reward = reward;\r\n      this.photo = this.reward.getFoto() + '?' + Utils.generateRandomString();\r\n      this.active = this.reward.isAtivo();\r\n      this.name = this.reward.getNome();\r\n      this.cost = this.reward.getValor();\r\n      this.description = this.reward.getDescricao();\r\n      this.quantity = this.reward.getQuantidade();\r\n    }\r\n    else {\r\n      this.reward = new Reward();\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalController.dismiss({\r\n      'dismissed': true\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  save() {\r\n    const logHeader = this.logHeader + \"save>>\";\r\n    Utils.log(logHeader);\r\n    if (this.uploadImage && this.modoEdicao) {\r\n      const imageBlob = Utils.getImageBlob(this.imageData);\r\n      this.api.uploadRewardImage(this.reward.getId(), imageBlob).then(() => {\r\n        this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n        this.uploadImage = false;\r\n        this.pageDataService.imageChangeEvent.emit();\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.IMAGE_UPLOAD_FAILED);\r\n        throw error;\r\n      }).finally(() => this.dismiss());\r\n      return;\r\n    }\r\n    else {\r\n      if (Utils.isVarInvalid(this.active)) {\r\n        this.active = false;\r\n      }\r\n      if (Utils.isStringInvalid(this.name)) {\r\n        this.utils.simpleToastError(ToastText.INSERT_NAME);\r\n        throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + this.name);\r\n      }\r\n      if (Utils.isVarInvalid(this.cost)) {\r\n        this.utils.simpleToastError(ToastText.INSERT_VALUE);\r\n        throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>COST>>\" + this.cost);\r\n      }\r\n      if (Utils.isStringInvalid(this.description)) {\r\n        this.utils.simpleToastError(ToastText.INSERT_DESCRIPTION);\r\n        throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>DESCRIPTION>>\" + this.description);\r\n      }\r\n      if (Utils.isStringInvalid(this.quantity)) {\r\n        this.quantity = null;\r\n      }\r\n      this.reward.setAtivo(this.active)\r\n      this.reward.setNome(this.name);\r\n      this.reward.setValor(this.cost);\r\n      this.reward.setDescricao(this.description);\r\n      this.reward.setQuantidade(+this.quantity);\r\n      if (this.modoEdicao) {\r\n        this.api.editReward(this.reward).then((reward) => {\r\n          this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n          this.pageDataService.setData('rewardData', reward);\r\n          this.pageDataService.setData('rewardEdit', true);\r\n          this.pageDataService.listUserEvent.emit('data');\r\n        }).catch((error) => {\r\n          let message = JSON.parse(error._body).message as string;\r\n          if (message.includes(ErrorType.DUPLICATED)) {\r\n            this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n          }\r\n          else {\r\n            this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG)\r\n          }\r\n        }).finally(() => this.dismiss());\r\n      }\r\n      else {\r\n        this.api.createReward(this.reward).then((reward: Reward) => {\r\n          this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n          this.pageDataService.setData('rewardData', reward);\r\n          this.pageDataService.listUserEvent.emit('data');\r\n          if (this.uploadImage) {\r\n            const imageBlob = Utils.getImageBlob(this.imageData);\r\n            this.api.uploadRewardImage(reward.getId(), imageBlob).then(() => {\r\n              this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n              this.uploadImage = false;\r\n            }).catch((error) => {\r\n              this.utils.simpleToastError(error + '\\n' + ToastText.IMAGE_UPLOAD_FAILED);\r\n              throw error;\r\n            });\r\n          }\r\n        }).catch((error) => {\r\n          let message = JSON.parse(error._body).message as string;\r\n          if (message.includes(ErrorType.DUPLICATED)) {\r\n            this.utils.simpleToastError(ToastText.ALREADY_EXISTS);\r\n          }\r\n          else {\r\n            this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG)\r\n          }\r\n        }).finally(() => this.dismiss());\r\n      }\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  isSaveDisabled() {\r\n    return Utils.isStringInvalid(this.name) || Utils.isVarInvalid(this.cost) || Utils.isStringInvalid(this.description)\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  async selectImage() {\r\n    if (!(this.platform.is('desktop') || this.platform.is('mobileweb'))) {\r\n      const actionSheet = await this.actionSheetController.create({\r\n        header: MenuText.WHAT_DO_YOU_WANT_TO_DO,\r\n        buttons: [{\r\n          text: MenuText.LOAD_FILE,\r\n          handler: () => {\r\n            this.takePicture(PictureSourceType.PHOTOLIBRARY)\r\n          }\r\n        },\r\n        {\r\n          text: MenuText.TAKE_PICTURE,\r\n          handler: () => {\r\n            this.takePicture(PictureSourceType.CAMERA)\r\n          }\r\n        },\r\n        {\r\n          text: MenuText.CANCEL,\r\n          role: 'cancel'\r\n        }\r\n        ]\r\n      });\r\n      await actionSheet.present();\r\n    }\r\n    else {\r\n      this.utils.simpleToastError(ToastText.FEATURE_UNAVAILABLE_FOR_WEB);\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  takePicture(sourceType: PictureSourceType) {\r\n    this.utils.takePicture(sourceType).then((imageData) => {\r\n      this.utils.cropPicture(imageData).then((croppedImage) => {\r\n        this.photo = croppedImage;\r\n        let image: string = croppedImage as string;\r\n        this.imageData = image.substring(image.indexOf(\"base64,\") + 7, image.length);\r\n        this.uploadImage = true;\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG)\r\n      });\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG)\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n}\r\n","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n  <ion-item (click)=\\\"newPrize()\\\"  no-lines>\\r\\n    <ion-label>Adicionar Prêmio</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3ByaXplL3ByaXplLW1lbnUvcHJpemUtbWVudS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalController, PopoverController } from '@ionic/angular';\r\nimport { NewRewardPage } from '../new-reward/new-reward.page';\r\n\r\n@Component({\r\n  selector: 'app-prize-menu',\r\n  templateUrl: './prize-menu.component.html',\r\n  styleUrls: ['./prize-menu.component.scss'],\r\n})\r\nexport class PrizeMenuComponent implements OnInit {\r\n\r\n  constructor(private modalController: ModalController,\r\n    private popoverController: PopoverController) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  async newPrize() {\r\n    const modal = await this.modalController.create({\r\n      component: NewRewardPage\r\n    });\r\n    modal.present().then(()=>this.popoverController.dismiss());\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  \\r\\n  <ion-toolbar class=\\\"toolbar-searchbar-title\\\">\\r\\n    <ion-searchbar placeholder=\\\"Pesquisar\\\" animated (ionInput)=\\\"filter($event.srcElement.value)\\\"></ion-searchbar>\\r\\n    <i class=\\\"fas fa-times-circle ico-white\\\"  (click)=\\\"dismiss()\\\" slot=\\\"end\\\"></i>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content padding=\\\"true\\\" class=\\\"app-members\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <mat-form-field appearance=\\\"fill\\\" class=\\\"full_width\\\">\\r\\n          <mat-label>Nome da Equipe</mat-label>\\r\\n          <input [(ngModel)]=\\\"name\\\" matInput placeholder=\\\"ex: Equipe Tira-Gosto\\\">\\r\\n           \\r\\n        </mat-form-field>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <button class=\\\"btn btn-block btn-mdlz-clear\\\" ion-button clear item-right (click)=\\\"addNewLider()\\\">\\r\\n          Selecionar Líder de Equipe\\r\\n        </button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <!-- depois que ele selecionar o lider aparece esse row abaixo pra mostrar pro adm quem ele selecionou -->\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <div *ngIf=\\\"teamLeader!=undefined\\\">\\r\\n          <ion-item no-lines>           \\r\\n            <ion-avatar slot=\\\"start\\\">\\r\\n              <img src=\\\"{{teamLeader.getFoto()+'?'+imageConcatString}}\\\" onError=\\\"src = '../assets/imgs/user.png'\\\">\\r\\n            </ion-avatar>\\r\\n            <ion-label>\\r\\n              <p>{{teamLeader.getNome()}}</p>\\r\\n              <p class=\\\"email\\\">{{teamLeader.getEmail()}}</p>\\r\\n            </ion-label> \\r\\n            <i class=\\\"fas fa-ellipsis-v\\\" (click)=\\\"abrirActionSheet(user,true)\\\"></i>         \\r\\n          </ion-item>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n     <!-- /depois que ele selecionar o lider aparece esse row abaixo pra mostrar pro adm quem ele selecionou -->\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <button class=\\\"btn btn-block btn-mdlz-clear margin-both\\\" ion-button clear item-right (click)=\\\"addNewUser()\\\">\\r\\n          Selecionar Colaboradores\\r\\n        </button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n        <!-- depois que ele selecionar o usuario aparece esse row abaixo pra mostrar pro adm quem ele selecionou -->\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <div *ngFor=\\\"let user of userList\\\">\\r\\n              <ion-item no-lines>           \\r\\n                <ion-avatar slot=\\\"start\\\">\\r\\n                  <img src=\\\"{{user.getFoto()+'?'+imageConcatString}}\\\" onError=\\\"src = '../assets/imgs/user.png'\\\">\\r\\n                </ion-avatar>\\r\\n                <ion-label>\\r\\n                  <p>{{user.getNome()}}</p>\\r\\n                  <p class=\\\"email\\\">{{user.getEmail()}}</p>\\r\\n                </ion-label> \\r\\n                <i class=\\\"fas fa-ellipsis-v\\\" (click)=\\\"abrirActionSheet(user,false)\\\"></i>         \\r\\n              </ion-item>\\r\\n            </div>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n         <!-- /depois que ele selecionar o usuario aparece esse row abaixo pra mostrar pro adm quem ele selecionou -->\\r\\n\\r\\n         <ion-row>\\r\\n          <ion-col>\\r\\n            <button  type=\\\"submit\\\" (click)=\\\"save()\\\" [disabled]=\\\"isSaveDisabled()\\\" class=\\\"btn btn-block btn-mdlz-clear color2\\\" ion-button clear item-right>\\r\\n             Salvar\\r\\n            </button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3RlYW0vbmV3L25ldy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController, ActionSheetController, ModalController, NavParams } from '@ionic/angular';\r\nimport { UsersModalPage } from 'src/app/users/teams/users-modal/users-modal.page';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { Team } from 'src/models/Team';\r\nimport { User } from 'src/models/User';\r\nimport { ToastText, MenuText, ErrorMessage } from 'src/commons/Constants';\r\n\r\n@Component({\r\n  selector: 'app-new',\r\n  templateUrl: './new.page.html',\r\n  styleUrls: ['./new.page.scss'],\r\n})\r\nexport class NewPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"NewPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public modoEdicao: boolean = false;\r\n  private team: Team;\r\n  private users: Array<User> = new Array<User>();\r\n  public userList: Array<User> = new Array<User>();\r\n  private searchTerm: string;\r\n  public teamLeader: User;\r\n  public name: string;\r\n  public admin: boolean;\r\n  public imageConcatString = Utils.generateRandomString();\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(public popoverController: PopoverController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    public actionSheetController: ActionSheetController,\r\n    public modalController: ModalController,\r\n    private pageDataService: PageDataService,\r\n    private navParams: NavParams) {\r\n    let team = this.navParams.get('team') as Team;\r\n    let admin = this.navParams.get('admin') as Boolean;\r\n    this.admin = admin == true;\r\n    this.modoEdicao = !Utils.isVarInvalid(team);\r\n    if (this.modoEdicao) {\r\n      this.api.getTeamById(team.getId()).then((newTeam: Team) => {\r\n        this.team = newTeam;\r\n        this.name = this.team.getNome();\r\n        this.users = this.team.getMembros();\r\n        this.userList = this.users;\r\n        this.api.getUserById(team.getLiderId()).then((user: User) => {\r\n          this.teamLeader = user;\r\n        }).catch((error) => {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        });\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n      });\r\n    }\r\n    else {\r\n      this.team = new Team('mock', [], undefined, undefined)\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async addNewLider() {\r\n    const modal = await this.modalController.create({\r\n      component: UsersModalPage,\r\n      backdropDismiss: false,\r\n      componentProps: {\r\n        team: this.team,\r\n        leader: true\r\n      }\r\n    });\r\n    modal.present()\r\n    modal.onDidDismiss().then(() => {\r\n      this.imageConcatString = Utils.generateRandomString();\r\n      let data = this.pageDataService.getData('selectedUsers');\r\n      this.pageDataService.removeData('selectedUsers');\r\n      if (!Utils.isArrayInvalid(data)) {\r\n        this.teamLeader = data[0];\r\n      }\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async addNewUser() {\r\n    const modal = await this.modalController.create({\r\n      component: UsersModalPage,\r\n      componentProps: {\r\n        team: this.team,\r\n      }\r\n    });\r\n    modal.present()\r\n    modal.onDidDismiss().then(() => {\r\n      this.imageConcatString = Utils.generateRandomString();\r\n      let data = this.pageDataService.getData('selectedUsers');\r\n      this.pageDataService.removeData('selectedUsers');\r\n      if (!Utils.isArrayInvalid(data)) {\r\n        for (let user of data) {\r\n          if (this.users.indexOf(user) < 0) {\r\n            this.users.push(user);\r\n            this.filter(this.searchTerm)\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async abrirActionSheet(user: User, leader: boolean = false) {\r\n    const actionSheet = await this.actionSheetController.create({\r\n      header: MenuText.WHAT_DO_YOU_WANT_TO_DO,\r\n      buttons: [{\r\n        text: MenuText.REMOVE_FROM_TEAM,\r\n        role: 'destructive',\r\n        handler: () => {\r\n          if (!leader) {\r\n            this.users.splice(this.users.indexOf(user), 1);\r\n            this.filter(this.searchTerm);\r\n          }\r\n          else {\r\n            this.teamLeader = undefined;\r\n          }\r\n        }\r\n      },\r\n      {\r\n        text: MenuText.CANCEL, role: 'cancel',\r\n        handler: () => {\r\n        }\r\n      }]\r\n    });\r\n    await actionSheet.present();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async dismiss() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  save() {\r\n    const logHeader = this.logHeader + \"save>>\";\r\n    Utils.log(logHeader);\r\n    if (Utils.isVarInvalid(this.teamLeader) || Utils.isVarInvalid(this.teamLeader.getId()) || this.teamLeader.getId() <= 0) {\r\n      this.utils.simpleToastError(ToastText.TEAM_MUST_HAVE_LEADER);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>LEADER>>\" + this.teamLeader);\r\n    }\r\n    if (Utils.isStringInvalid(this.name)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_NAME);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + this.name);\r\n    }\r\n    this.team.setLiderId(this.teamLeader.getId());\r\n    this.team.setMembros(this.users);\r\n    this.team.setNome(this.name);\r\n    if (this.modoEdicao) {\r\n      this.api.adminEditTeam(this.team).then((team) => {\r\n        this.imageConcatString = Utils.generateRandomString();\r\n        this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n        this.pageDataService.listUserEvent.emit('newData');\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n      });\r\n    }\r\n    else {\r\n      this.api.createTeam(this.team).then((team) => {\r\n        this.imageConcatString = Utils.generateRandomString();\r\n        this.utils.simpleToast(ToastText.CREATION_SUCCESSFUL);\r\n        this.pageDataService.listUserEvent.emit('newData');\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n      });\r\n    }\r\n    this.dismiss();\r\n\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  isSaveDisabled(): Boolean {\r\n    return Utils.isVarInvalid(this.teamLeader) || Utils.isVarInvalid(this.teamLeader.getId()) || this.teamLeader.getId() <= 0 || Utils.isStringInvalid(this.name)\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  filter(evt) {\r\n    const logHeader = this.logHeader + \"filter>>\";\r\n    Utils.log(logHeader);\r\n    if (Utils.isStringInvalid(evt)) {\r\n      this.userList = this.users;\r\n      return;\r\n    }\r\n    const searchTerm = evt;\r\n    this.searchTerm = searchTerm;\r\n    if (!searchTerm) {\r\n      this.userList = this.users;\r\n      return;\r\n    }\r\n    this.userList = this.users.filter(n => n.getNome().toLowerCase().includes(searchTerm.toLowerCase()));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n  <ion-item  (click)=\\\"newTeam()\\\"  no-lines>\\r\\n    <ion-label>Adicionar Nova Equipe</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3RlYW0vdGVhbS1tZW51L3RlYW0tbWVudS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, PopoverController } from '@ionic/angular';\r\nimport { NewPage } from '../new/new.page';\r\n\r\n@Component({\r\n  selector: 'app-team-menu',\r\n  templateUrl: './team-menu.page.html',\r\n  styleUrls: ['./team-menu.page.scss'],\r\n})\r\nexport class TeamMenuPage{\r\n\r\n  constructor(private popoverController: PopoverController, public modalController: ModalController) { }\r\n\r\n  async newTeam() {\r\n    const modal = await this.modalController.create({\r\n      component: NewPage\r\n    });\r\n    modal.present().then(() => this.popoverController.dismiss());\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { MaterialModule } from './material.module';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', loadChildren: './public/login/login.module#LoginPageModule' },\r\n  { path: 'recovery', loadChildren: './public/recovery/recovery.module#RecoveryPageModule' },\r\n  { path: 'register', loadChildren: './public/register/register.module#RegisterPageModule' },\r\n  { path: 'admin', canActivate: [AuthGuard], loadChildren: './admin/admin-routing.module#AdminRoutingModule' },\r\n  { path: '', loadChildren: './users/home/home/tabs.module#TabsPageModule' },\r\n  { path: '', canActivate: [AuthGuard], loadChildren: './admin/areas/areas.module#AreasPageModule' },  \r\n  { path: '', canActivate: [AuthGuard], loadChildren: './admin/pontos/pontos.module#PontosPageModule' },\r\n  { path: 'dashboard', canActivate: [AuthGuard], loadChildren: './admin/dashboard/dashboard.module#DashboardPageModule' },\r\n  { path: 'members', canActivate: [AuthGuard], loadChildren: './admin/members/members.module#MembersPageModule' },\r\n  { path: 'users', loadChildren: './admin/members/new/new.module#RegisterUserPageModule' },\r\n  { path: 'teams', loadChildren: './users/teams/teams.module#TeamsPageModule' },\r\n  { path: 'team', canActivate: [AuthGuard], loadChildren: './admin/team/team.module#TeamPageModule' },\r\n  { path: 'prize', canActivate: [AuthGuard], loadChildren: './admin/prize/prize.module#PrizePageModule' },\r\n  { path: 'rules', loadChildren: './users/rules/rules.module#RulesPageModule' },\r\n  { path: 'pending', loadChildren: './users/teams/pending/pending.module#PendingPageModule' },\r\n  { path: 'exchange', loadChildren: './users/exchange/exchange.module#ExchangePageModule' },\r\n  { path: 'email-confirm', loadChildren: './users/email-confirm/email-confirm.module#EmailConfirmPageModule' },\r\n  { path: 'profile', loadChildren: './users/profile/profile.module#ProfilePageModule' },\r\n  { path: 'communication', loadChildren: './users/communication/communication.module#CommunicationPageModule' },\r\n  { path: 'notification', loadChildren: './users/notification/notification.module#NotificationPageModule' },\r\n  { path: 'tutorial', loadChildren: './users/tutorial/tutorial.module#TutorialPageModule' },\r\n  { path: 'new', canActivate: [AuthGuard], loadChildren: './admin/areas/fabrica/new/new.module#NewPageModule' },\r\n  { path: 'fabrica-menu', canActivate: [AuthGuard], loadChildren: './admin/areas/fabrica/fabrica-menu/fabrica-menu.module#FabricaMenuPageModule' },\r\n  { path: 'linha-menu', canActivate: [AuthGuard], loadChildren: './admin/areas/linha/linha-menu/linha-menu.module#LinhaMenuPageModule' },\r\n  { path: 'new', canActivate: [AuthGuard], loadChildren: './admin/areas/linha/new/new.module#NewPageModule' },\r\n  { path: 'new', canActivate: [AuthGuard], loadChildren: './admin/areas/secao/new/new.module#NewPageModule' },\r\n  { path: 'secao-menu', canActivate: [AuthGuard], loadChildren: './admin/areas/secao/secao-menu/secao-menu.module#SecaoMenuPageModule' },\r\n  { path: 'zeramento', canActivate: [AuthGuard], loadChildren: './admin/pontos/users/zeramento/zeramento.module#ZeramentoPageModule' },\r\n  { path: 'pontos-menu', canActivate: [AuthGuard], loadChildren: './admin/pontos/pontos-menu/pontos-menu.module#PontosMenuPageModule' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [MaterialModule,\r\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules, useHash: true })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<ion-app>\\r\\n  <ion-split-pane>\\r\\n    <ion-menu contentId=\\\"content\\\">\\r\\n      <ion-header class=\\\"bg-header\\\">\\r\\n        <ion-toolbar>\\r\\n          <img src=\\\"{{getUser().getFoto()+'?'+imageConcatString}}\\\" onError=\\\"src = '../assets/imgs/user.png'\\\" class=\\\"user-pic\\\">\\r\\n          <span class=\\\"user-name\\\">{{getUser().getNome()}}</span>\\r\\n          <span class=\\\"user-work\\\">{{getUser().getEmail()}}</span>\\r\\n        </ion-toolbar>\\r\\n      </ion-header>\\r\\n      <ion-content class=\\\"bg-menu\\\">\\r\\n        <ion-list>\\r\\n          <ion-menu-toggle auto-hide=\\\"false\\\">\\r\\n            <div *ngFor=\\\"let p of pages\\\">\\r\\n              <app-menu-item *ngIf=\\\"p.title=='Dashboard' && getUser().isAdmin() || p.title!='Dashboard'\\\" [link]=\\\"p\\\"></app-menu-item>\\r\\n            </div>\\r\\n            <ion-item>\\r\\n              <ion-icon name=\\\"log-out\\\"></ion-icon>\\r\\n              <ion-label (click)=\\\"logout()\\\">\\r\\n                Deslogar\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n          </ion-menu-toggle>\\r\\n\\r\\n        </ion-list>\\r\\n      </ion-content>\\r\\n    </ion-menu>\\r\\n    <ion-router-outlet id=\\\"content\\\" main></ion-router-outlet>\\r\\n  </ion-split-pane>\\r\\n</ion-app>\"","import { Component } from '@angular/core';\r\nimport { Platform, ToastController, LoadingController } from '@ionic/angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { ToastText, MenuText } from 'src/commons/Constants';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { User } from 'src/models/User';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class AppComponent {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  loaderToShow: any;\r\n\r\n  rootPage: any;\r\n\r\n  pages = [\r\n    {\r\n      title: 'Dashboard',\r\n      url: '/dashboard',\r\n      icon: 'analytics'\r\n    },\r\n    {\r\n      title: 'Regulamento',\r\n      url: '/rules',\r\n      icon: 'star'\r\n    },\r\n    {\r\n      title: 'Meu Perfil',\r\n      url: '/profile',\r\n      icon: 'cog'\r\n    },\r\n    {\r\n      title: 'Pontos',\r\n      url: '/home/extrato',\r\n      icon: 'ribbon'\r\n    },\r\n    {\r\n      title: 'Minha Equipe',\r\n      url: '/teams',\r\n      icon: 'trophy'\r\n    },\r\n    {\r\n      title: 'Troca de Prêmios',\r\n      url: '/exchange',\r\n      icon: 'cart'\r\n    },\r\n    {\r\n      title: 'Comunicação',\r\n      url: '/communication',\r\n      icon: 'mail'\r\n    }\r\n    ,\r\n    {\r\n      title: 'Notificação',\r\n      url: '/notification',\r\n      icon: 'alert'\r\n    }, {\r\n      title: 'Tutorial',\r\n      url: '/tutorial',\r\n      icon: 'help-circle'\r\n    }\r\n\r\n  ];\r\n  toastInstance: Promise<void>;\r\n  toast: Promise<void>;\r\n\r\n  imageConcatString = Utils.generateRandomString();\r\n\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private splashScreen: SplashScreen,\r\n    private statusBar: StatusBar,\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router,\r\n    private authService: AuthenticationService,\r\n    public toastController: ToastController,\r\n    public loadingController: LoadingController,\r\n    public api: BackendApiProvider,\r\n    public utils: Utils,\r\n    public pageDataService: PageDataService\r\n  ) {\r\n    this.initializeApp();\r\n    this.pageDataService.imageChangeEvent.subscribe(() => {\r\n      this.imageConcatString = Utils.generateRandomString();\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      this.authService.isAuthenticated().subscribe(a => {\r\n        if (!a) {\r\n          this.statusBar.styleDefault();\r\n          this.splashScreen.hide();\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          this.authenticationService.isAdmin().subscribe(isadm => {\r\n            if (this.authenticationService.loggedUser.isFinalizado()) {\r\n              if (isadm)\r\n                this.router.navigate(['admin', 'dashboard']);\r\n              else\r\n                this.router.navigate(['home', 'pontos']);\r\n            }\r\n            else {\r\n              this.router.navigate(['email-confirm'])\r\n            }\r\n\r\n            this.statusBar.styleDefault();\r\n            this.splashScreen.hide();\r\n          });\r\n        }\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((event: RouterEvent) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.pages.map(p => {\r\n          return p['active'] = (event.url === p.url);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.toast = this.toastController.create({\r\n      message: ToastText.LOGOUT_SUCCESSFUL,\r\n      showCloseButton: true,\r\n      position: 'bottom',\r\n      duration: 3000,\r\n      closeButtonText: MenuText.OK,\r\n      animated: true,\r\n      cssClass: \"toast-mdlz\"\r\n    }).then((toastData) => {\r\n      toastData.present();\r\n      this.authService.logout();\r\n      this.router.navigate(['login']);\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getUser() {\r\n    return !Utils.isVarInvalid(this.authService.loggedUser) ? this.authService.loggedUser : new User();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { MenuItemComponent } from './components/menu-item/menu-item.component';\r\nimport { TermsOfUsePage } from './public/terms-of-use/terms-of-use.page';\r\nimport { PopoverComponent } from './users/popover/popover.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { DashboardPageModule } from './admin/dashboard/dashboard.module';\r\nimport { MembersMenuComponent } from './admin/members/members-menu/members-menu.component';\r\nimport { MatFormFieldModule } from '@angular/material';\r\nimport { PontosModalPage } from './admin/pontos/pontos-modal/pontos-modal.page';\r\nimport { PontosRemovePage } from './admin/pontos/pontos-remove/pontos-remove.page';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AtividadesEditPage } from './admin/pontos/atividades-edit/atividades-edit.page';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { TeamsMenuComponent } from './users/teams/teams-menu/teams-menu.component';;\r\nimport { UsersModalPage } from './users/teams/users-modal/users-modal.page';\r\nimport { NewPage } from './admin/team/new/new.page';\r\nimport { TeamMenuPage } from './admin/team/team-menu/team-menu.page';\r\nimport { PrizeMenuComponent } from './admin/prize/prize-menu/prize-menu.component';\r\nimport { NewRewardPage } from './admin/prize/new-reward/new-reward.page';\r\nimport { CartPage } from './users/exchange/cart/cart.page';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\r\nimport { FilePath } from '@ionic-native/file-path/ngx';\r\nimport { MsgComponentComponent } from './users/notification/msg-component/msg-component.component';\r\nimport { DocumentViewer } from '@ionic-native/document-viewer/ngx';\r\nimport { FabricaMenuPage } from './admin/areas/fabrica/fabrica-menu/fabrica-menu.page';\r\nimport { NewPageF } from './admin/areas/fabrica/new/new.page';\r\nimport { NewPageL } from './admin/areas/linha/new/new.page';\r\nimport { LinhaMenuPage } from './admin/areas/linha/linha-menu/linha-menu.page';\r\nimport { NewPageS } from './admin/areas/secao/new/new.page';\r\nimport { SecaoMenuPage } from './admin/areas/secao/secao-menu/secao-menu.page';\r\nimport { PontosMenuPage } from './admin/pontos/pontos-menu/pontos-menu.page';\r\nimport { Crop } from '@ionic-native/crop/ngx';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MenuItemComponent,\r\n    // TermsOfUsePage,\r\n    PopoverComponent,\r\n    MembersMenuComponent,\r\n    // PontosModalPage,\r\n    // PontosRemovePage,\r\n    // AtividadesEditPage,\r\n    TeamsMenuComponent,\r\n    // UsersModalPage,\r\n    // NewPage,\r\n    // NewRewardPage,\r\n    // TeamMenuPage,\r\n    PrizeMenuComponent,\r\n    // CartPage,\r\n    MsgComponentComponent,\r\n    // FabricaMenuPage,\r\n    // NewPageF,\r\n    // LinhaMenuPage,\r\n    // NewPageL,\r\n    // SecaoMenuPage,\r\n    // NewPageS,\r\n    // PontosMenuPage\r\n  ],\r\n  entryComponents: [PontosMenuPage, SecaoMenuPage, NewPageS, LinhaMenuPage, NewPageL, NewPageF, NewPage, FabricaMenuPage, MsgComponentComponent, CartPage, PrizeMenuComponent, TeamMenuPage, TermsOfUsePage, MembersMenuComponent, PontosModalPage, PontosRemovePage, AtividadesEditPage, TeamsMenuComponent, UsersModalPage, NewPage, NewRewardPage],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(),\r\n    AppRoutingModule,\r\n    IonicStorageModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    DashboardPageModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    MenuItemComponent,\r\n    MatFormFieldModule\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    Utils,\r\n    PageDataService,\r\n    DocumentViewer,\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n    Camera,\r\n    File,\r\n    WebView,\r\n    FilePath,\r\n    Crop\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<ion-item detail=\\\"false\\\"  [routerLink]=\\\"link.url\\\" [class.active-item]=\\\"link.active\\\" routerDirection=\\\"root\\\">\\r\\n    <ion-icon [name]=\\\"link.icon\\\" slot=\\\"start\\\"></ion-icon>\\r\\n    <ion-label>{{link.title}}</ion-label>\\r\\n  </ion-item>\"","module.exports = \".active-item {\\n  border-left: 5px solid #2a0b40;\\n  color: #ffffff;\\n  background-color: #461a64;\\n  --background: #461a64 !important; }\\n  .active-item ion-icon {\\n    fill: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tZW51LWl0ZW0vRDpcXERlc2t0b3BcXFByb2pldG9zXFxEZXNlbnZvbHZpbWVudG9cXE1vbmRlbGV6XFxQbHVzXFxHSVRfTW9uZGVsZXpQbHVzXFxmcm9udC9zcmNcXGFwcFxcY29tcG9uZW50c1xcbWVudS1pdGVtXFxtZW51LWl0ZW0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBOEI7RUFDOUIsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixnQ0FBYSxFQUFBO0VBSmpCO0lBTVEsV0FBNEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS1pdGVtL21lbnUtaXRlbS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3RpdmUtaXRlbSB7XHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICMyYTBiNDA7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NjFhNjQ7XHJcbiAgICAtLWJhY2tncm91bmQ6ICM0NjFhNjQgIWltcG9ydGFudDtcclxuICAgIGlvbi1pY29uIHtcclxuICAgICAgICBmaWxsOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xyXG4gICAgfVxyXG4gIH0iXX0= */\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu-item',\r\n  templateUrl: './menu-item.component.html',\r\n  styleUrls: ['./menu-item.component.scss']\r\n})\r\nexport class MenuItemComponent implements OnInit {\r\n\r\n  @Input() link: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","/*import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    let userAuthenticated = false;\r\n    return userAuthenticated;\r\n  }\r\n\r\n}\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n \r\n  constructor(public auth: AuthenticationService) {}\r\n \r\n  canActivate() {\r\n    return this.auth.admin;\r\n  }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport {\r\n  MatTableModule,\r\n  MatStepperModule,\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatIconModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatCheckboxModule,\r\n  \r\n} from \"@angular/material\";\r\n \r\n@NgModule({\r\n  exports: [\r\n    MatTableModule,\r\n    MatStepperModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatCheckboxModule\r\n  ]\r\n})\r\nexport class MaterialModule {}","module.exports = \"<ion-header>\\r\\n  <ion-title>Termos de Uso</ion-title>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy90ZXJtcy1vZi11c2UvdGVybXMtb2YtdXNlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-terms-of-use',\r\n  templateUrl: './terms-of-use.page.html',\r\n  styleUrls: ['./terms-of-use.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class TermsOfUsePage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(private modalCtrl: ModalController) {\r\n\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  closeModal() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from 'src/models/User';\r\nimport { UserType } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class AuthenticationService {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  authenticationState = new BehaviorSubject(null);\r\n  loggedUser: User;\r\n  token = null;\r\n  admin = false;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(private storage: Storage) {\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  setAuthObject(user: User) {\r\n    this.storage.set(`user`, JSON.stringify(user));\r\n    this.loggedUser = user;\r\n    this.token = user.getToken();\r\n    this.admin = user.getTipo() == UserType.ADMINISTRATOR\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getToken(): Observable<any> {\r\n    return new Observable(obs => {\r\n      if (this.token != null)\r\n        return obs.next(this.token);\r\n\r\n      this.storage.get('user').then(u => {\r\n        const user = User.castFromJSON(u);\r\n        this.loggedUser = user;\r\n        this.admin = user.getTipo() == UserType.ADMINISTRATOR\r\n        return obs.next(user.getToken());\r\n      }).catch(() => {\r\n        return obs.next(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  isAdmin(): Observable<boolean> {\r\n    return new Observable(obs => {\r\n      this.storage.get('user').then(u => {\r\n        const user = User.castFromJSON(u);\r\n        this.loggedUser = user;\r\n        this.admin = user.getTipo() == UserType.ADMINISTRATOR\r\n        return obs.next(user.getTipo() == UserType.ADMINISTRATOR);\r\n      }).catch(() => {\r\n        return obs.next(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  isFinalizado(): Observable<Boolean> {\r\n    return new Observable(obs => {\r\n      this.storage.get('user').then(u => {\r\n        const user = User.castFromJSON(u);\r\n        this.loggedUser = user;\r\n        this.admin = user.getTipo() == UserType.ADMINISTRATOR\r\n        return obs.next(user.isFinalizado());\r\n      }).catch(() => {\r\n        return obs.next(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.loggedUser = null;\r\n    this.storage.clear();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  isAuthenticated(): Observable<boolean> {\r\n    return new Observable(obs => {\r\n      this.storage.get('user').then(u => {\r\n        const user = User.castFromJSON(u);\r\n        this.loggedUser = user;\r\n        return obs.next(user.getToken() != null);\r\n      }).catch(() => {\r\n        return obs.next(false);\r\n      });\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","module.exports = \"<ion-header>\\r\\n\\r\\n  <ion-toolbar class=\\\"toolbar-searchbar-title2\\\">\\r\\n    <span class=\\\"toolbar-title-white\\\">\\r\\n      Carrinho de Compra\\r\\n    </span>\\r\\n    <i class=\\\"fas fa-times-circle ico-white\\\" (click)=\\\"DismissClick()\\\" slot=\\\"end\\\"></i>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <table>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of shoppingCart\\\">\\r\\n          <td class=\\\"column1\\\">{{item.getPremio().getNome()}}</td>\\r\\n          <td class=\\\"column2\\\"><span\\r\\n              class=\\\"valor_compra\\\">-{{item.getPremio().getValor()*item.getQuantidade()}}</span></td>\\r\\n              <td class=\\\"column3\\\">\\r\\n                  <button clear (click)=\\\"decrementQty(item)\\\"><i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n                  <input class=\\\"box-qty\\\" [value]=\\\"item.getQuantidade()\\\" >\\r\\n                  <button clear (click)=\\\"incrementQty(item)\\\"><i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n              </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <td colpan=\\\"2\\\" class=\\\"column1\\\">\\r\\n            Total\\r\\n          </td>\\r\\n          <td class=\\\"column4\\\">\\r\\n            <span class=\\\"mdlz-orange\\\">{{getTotal()}}</span>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr class=\\\"saldo_atual\\\">\\r\\n          <td  colpan=\\\"2\\\" class=\\\"column1\\\">\\r\\n            Saldo atual\\r\\n          </td>\\r\\n          <td class=\\\"column4\\\">\\r\\n            {{points}}\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr class=\\\"saldo_resgate\\\">\\r\\n          <td colpan=\\\"2\\\" class=\\\"column1\\\">\\r\\n            Saldo após resgate\\r\\n          </td>\\r\\n          <td  class=\\\"column4\\\">\\r\\n            {{points-getTotal()}}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tfoot>\\r\\n    </table>\\r\\n\\r\\n    <button  type=\\\"submit\\\" class=\\\"btn btn-block btn-mdlz-clear color2 margin\\\" ion-button clear item-right [disabled]=\\\"shoppingCart.length==0\\\" (click)=\\\"save()\\\">\\r\\n      Finalizar Compra\\r\\n    </button>\\r\\n</ion-content>\"","module.exports = \"ion-content {\\n  --ion-background-color: #fff;\\n  --background: #fff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvZXhjaGFuZ2UvY2FydC9EOlxcRGVza3RvcFxcUHJvamV0b3NcXERlc2Vudm9sdmltZW50b1xcTW9uZGVsZXpcXFBsdXNcXEdJVF9Nb25kZWxlelBsdXNcXGZyb250L3NyY1xcYXBwXFx1c2Vyc1xcZXhjaGFuZ2VcXGNhcnRcXGNhcnQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNEJBQXVCO0VBQ3ZCLGtCQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9leGNoYW5nZS9jYXJ0L2NhcnQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIC0tYmFja2dyb3VuZDogI2ZmZjtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController, NavParams } from '@ionic/angular';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { CartItem } from 'src/models/CartItem';\r\nimport { isArray } from 'util';\r\nimport { ToastText, ErrorMessage } from 'src/commons/Constants';\r\nimport { Reward } from 'src/models/Reward';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.page.html',\r\n  styleUrls: ['./cart.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class CartPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"CartPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public shoppingCart: Array<CartItem> = new Array<CartItem>();\r\n  public points: number = 0;\r\n\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(public popoverController: PopoverController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private navParams: NavParams) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    this.getPoints();\r\n    let cart = this.navParams.get('cart');\r\n    if (!Utils.isArrayInvalid(cart)) {\r\n      this.shoppingCart = cart;\r\n    }\r\n    else {\r\n      this.DismissClick();\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  incrementQty(item: CartItem) {\r\n    const logHeader = this.logHeader + \"incrementQty>>\";\r\n    if (item.getPremio().getQuantidade() > item.getQuantidade() || Utils.isVarInvalid(item.getPremio().getQuantidade())) {\r\n      item.addQuantidade(1);\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  decrementQty(item: CartItem) {\r\n    const logHeader = this.logHeader + \"decrementQty>>\";\r\n    if (item.getQuantidade() > 0) {\r\n      item.addQuantidade(-1);\r\n    }\r\n    if (item.getQuantidade() == 0) {\r\n      this.shoppingCart.splice(this.shoppingCart.indexOf(this.shoppingCart.filter(n => n.getPremio().getId() == item.getPremio().getId())[0]), 1);\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getPoints() {\r\n    this.api.getPoints().then((points: number) => {\r\n      this.points = points;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n\r\n  ZerarPontos() {\r\n    const auxCart = JSON.parse(JSON.stringify(this.shoppingCart));\r\n    for (let auxItem of auxCart) {\r\n      let item = CartItem.castFromJSON(auxItem);\r\n      item.setQuantidade(0);\r\n      this.shoppingCart.splice(this.shoppingCart.indexOf(this.shoppingCart.filter(n => n.getPremio().getId() == item.getPremio().getId())[0]), 1);\r\n    }\r\n    this.popoverController.dismiss();\r\n  }\r\n\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getTotal() {\r\n    let cost = 0;\r\n    for (let item of this.shoppingCart) {\r\n      cost += item.getPremio().getValor() * item.getQuantidade();\r\n    }\r\n    return cost;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  save() {\r\n    const logHeader = this.logHeader + \"save>>\";\r\n    if (this.points - this.getTotal() < 0) {\r\n      this.utils.simpleToastError(ToastText.INSUFICIENT_FUNDS);\r\n      throw new Error(logHeader + ErrorMessage.INSUFICIENT_FUNDS);\r\n    }\r\n    if (Utils.isArrayInvalid(this.shoppingCart)) {\r\n      this.popoverController.dismiss();\r\n      throw new Error(logHeader + ErrorMessage.INVALID_ARRAY + this.shoppingCart);\r\n    }\r\n    this.api.exchange(this.shoppingCart).then(() => {\r\n      this.utils.simpleToast(ToastText.EXCHANGE_SUCCESSFUL);\r\n      this.ZerarPontos();\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.EXCHANGE_FAILED));\r\n  }\r\n\r\n}\r\n","module.exports = \"<ion-content padding=\\\"true\\\">\\r\\n  <span class=\\\"msg\\\">{{message.getMessage()}}</span>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL25vdGlmaWNhdGlvbi9tc2ctY29tcG9uZW50L21zZy1jb21wb25lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavParams } from '@ionic/angular';\r\nimport { Message } from 'src/models/Message';\r\n\r\n@Component({\r\n  selector: 'app-msg-component',\r\n  templateUrl: './msg-component.component.html',\r\n  styleUrls: ['./msg-component.component.scss'],\r\n})\r\nexport class MsgComponentComponent {\r\n\r\n  private readonly logHeader = \"MsgComponentComponent>>\"\r\n\r\n  public message: Message;\r\n\r\n  constructor(private navParams: NavParams) {\r\n    this.message = this.navParams.get('message');\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  popover works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3BvcG92ZXIvcG9wb3Zlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-popover',\r\n  templateUrl: './popover.component.html',\r\n  styleUrls: ['./popover.component.scss'],\r\n})\r\nexport class PopoverComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","module.exports = \"<ion-list class=\\\"ion-no-margin ion-no-padding\\\" *ngIf=\\\"isLeader()\\\">\\r\\n  <ion-item (click)=\\\"newUser()\\\" no-lines>\\r\\n    <ion-label>Adicionar Usuário</ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item (click)=\\\"pendingUser()\\\" no-lines>\\r\\n    <ion-label>Usuário(s) Pendentes</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\\r\\n\\r\\n<ion-list class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n  <ion-item *ngFor=\\\"let team of teams\\\">\\r\\n    <ion-label (click)=\\\"getTeamById(team.id)\\\">{{team.nome}}</ion-label>\\r\\n  </ion-item>\\r\\n</ion-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3RlYW1zL3RlYW1zLW1lbnUvdGVhbXMtbWVudS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, PopoverController, NavParams } from '@ionic/angular';\r\nimport { UsersModalPage } from '../users-modal/users-modal.page';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { Team } from 'src/models/Team';\r\nimport { User } from 'src/models/User';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { ToastText } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-teams-menu',\r\n  templateUrl: './teams-menu.component.html',\r\n  styleUrls: ['./teams-menu.component.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class TeamsMenuComponent {\r\n\r\n\r\n  private readonly logHeader = \"TeamsPage>>\";\r\n\r\n\r\n  private pending: boolean = false;\r\n  public teams: Array<Team> = new Array<Team>();\r\n  private team: Team;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(public modalController: ModalController,\r\n    private router: Router,\r\n    private api: BackendApiProvider,\r\n    private popoverController: PopoverController,\r\n    private auth: AuthenticationService,\r\n    private utils: Utils,\r\n    private pageDataService: PageDataService,\r\n    private navParams: NavParams\r\n  ) {\r\n\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    this.pageDataService.listUserEvent.subscribe(() => {\r\n      this.getTeamById(this.team.getId());\r\n    })\r\n    this.team = this.navParams.get('team');\r\n    this.teams = this.navParams.get('teams');\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async newUser() {\r\n    const modal = await this.modalController.create({\r\n      component: UsersModalPage\r\n    });\r\n    await modal.present();\r\n    this.popoverController.dismiss()\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  pendingUser() {\r\n    this.router.navigate(['/pending']);\r\n    this.popoverController.dismiss()\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  isLeader() {\r\n    return this.auth.loggedUser.getId() == this.team.getLiderId();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getTeamById(input: number) {\r\n    this.api.getTeamById(input).then((team: Team) => {\r\n      this.team = team;\r\n      this.api.getUserById(team.getLiderId()).then((leader: User) => {\r\n        this.popoverController.dismiss({ team: team, leader: leader });\r\n      }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<ion-header>\\r\\n\\r\\n  <ion-toolbar class=\\\"toolbar-searchbar-title\\\">\\r\\n    <ion-searchbar placeholder=\\\"Pesquisar\\\" animated (ionInput)=\\\"filter($event)\\\"></ion-searchbar>\\r\\n    <i class=\\\"fas fa-times-circle ico-white\\\" (click)=\\\"dismiss()\\\" slot=\\\"end\\\"></i>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content class=\\\"app-members\\\" padding=\\\"true\\\">\\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <button class=\\\"btn btn-block btn-mdlz-clear\\\" ion-button clear item-right *ngIf=\\\"multicheck\\\">\\r\\n        Adicionar todos(as) selecionados(as)\\r\\n      </button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <div *ngFor=\\\"let user of userList\\\">\\r\\n    <ion-item no-lines>\\r\\n      <ion-checkbox slot=\\\"start\\\" [(ngModel)]=\\\"user.checked\\\" (ngModelChange)=\\\"userChange(user,$event)\\\">\\r\\n      </ion-checkbox>\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"{{user.getFoto()+'?'+imageConcatString}}\\\" onError=\\\"src = '../assets/imgs/user.png'\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <p>{{user.nome}}</p>\\r\\n        <p class=\\\"email\\\">{{user.email}}</p>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </div>\\r\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\r\\n    <ion-infinite-scroll-content loadingSpinner=\\\"dots\\\" loadingText=\\\"Carregando mais...\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n\\r\\n</ion-content>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-block btn-mdlz-clear color2\\\" ion-button clear item-right (click)=\\\"save()\\\">\\r\\n  Confirmar e Adicionar\\r\\n</button>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3RlYW1zL3VzZXJzLW1vZGFsL3VzZXJzLW1vZGFsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, ActionSheetController, NavParams } from '@ionic/angular';\r\nimport { User } from 'src/models/User';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { Team } from 'src/models/Team';\r\nimport { Observable } from 'rxjs';\r\nimport { ToastText } from 'src/commons/Constants';\r\n\r\n@Component({\r\n  selector: 'app-users-modal',\r\n  templateUrl: './users-modal.page.html',\r\n  styleUrls: ['./users-modal.page.scss'],\r\n})\r\nexport class UsersModalPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"UsersModalPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public multicheck: boolean = false;\r\n  private users: Array<User>;\r\n  public userList: Array<User>;\r\n  private searchTerm: string;\r\n  private selectedUsers: Array<User> = new Array<User>();\r\n  private team: Team\r\n  private page: number = 1;\r\n  private totalPages: number;\r\n  public imageConcatString = Utils.generateRandomString();\r\n  private choosingLeader: boolean;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  constructor(public modalController: ModalController,\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private pageDataService: PageDataService,\r\n    private navParams: NavParams) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    this.team = this.navParams.get('team');\r\n    this.choosingLeader = !Utils.isVarInvalid(this.navParams.get('leader'));\r\n    if (Utils.isVarInvalid(this.team)) {\r\n      this.team = new Team(\"mock\", [], undefined, undefined)\r\n    }\r\n    else if (this.choosingLeader && !Utils.isVarInvalid(this.team.getLiderId())) {\r\n      this.api.getUserById(this.team.getLiderId()).then((leader: User) => {\r\n        this.selectedUsers.push(leader);\r\n      }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n    }\r\n    else {\r\n      this.selectedUsers = this.team.getMembros();\r\n    }\r\n    for (let user of this.selectedUsers) {\r\n      user.checked = true;\r\n    }\r\n    this.getUsers();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------// \r\n\r\n  dismiss() {\r\n    // using the injected ModalController this page\r\n    // can \"dismiss\" itself and optionally pass back data\r\n    this.modalController.dismiss({\r\n      'dismissed': true\r\n    });\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getUsers() {\r\n    const logHeader = this.logHeader + \"getUsers>>\";\r\n    Utils.log(logHeader);\r\n    this.api.getUsers(1).then((response: any) => {\r\n      this.imageConcatString = Utils.generateRandomString();\r\n      let users: Array<User> = response.users;\r\n      this.totalPages = response.totalPages\r\n      this.users = users;\r\n      this.filter(this.searchTerm);\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n\r\n  }\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  filter(evt) {\r\n    const logHeader = this.logHeader + \"filter>>\";\r\n    Utils.log(logHeader);\r\n    if (Utils.isStringInvalid(evt)) {\r\n      this.userList = this.users;\r\n      return;\r\n    }\r\n    const searchTerm = evt;\r\n    this.searchTerm = searchTerm;\r\n    if (!searchTerm) {\r\n      this.userList = this.users;\r\n      return;\r\n    }\r\n    this.userList = this.users.filter(n => n.getNome().toLowerCase().includes(searchTerm.toLowerCase()) || n.getEmail().toLowerCase().includes(searchTerm.toLowerCase()));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  userChange(user: User, checked: boolean, evt: any = undefined) {\r\n\r\n    if (checked) {\r\n      if (this.choosingLeader) {\r\n        this.selectedUsers = new Array<User>();\r\n        this.selectedUsers.push(user);\r\n      }\r\n      else if (this.selectedUsers.filter(n => n.getId() == user.getId()).length == 0) {\r\n        this.selectedUsers.push(user);\r\n      }\r\n    }\r\n    else {\r\n      this.selectedUsers.splice(this.selectedUsers.indexOf(this.selectedUsers.filter(n => n.getId() == user.getId())[0]), 1);\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  isUserInTeam(id: number) {\r\n    if (Utils.isVarInvalid(this.team)) {\r\n      return false;\r\n    }\r\n    else {\r\n      return this.team.getLiderId() == id || this.team.getMembros().filter(n => n.getId() == id).length > 0\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  save() {\r\n    this.pageDataService.setData('selectedUsers', this.selectedUsers);\r\n    this.pageDataService.pushUsers(this.selectedUsers);\r\n    this.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  loadData(event) {\r\n    this.page++;\r\n    const infiniteScroll = event.target;\r\n    this.api.getUsers(this.page).then((response: any) => {\r\n      this.imageConcatString = Utils.generateRandomString();\r\n      let users: Array<User> = response.users;\r\n      this.totalPages = response.totalPages;\r\n      this.users = this.users.concat(users);\r\n      this.filter(this.searchTerm);\r\n      infiniteScroll.complete();\r\n      infiniteScroll.disabled = this.page >= this.totalPages;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","export enum UserType {\r\n    ADMINISTRATOR,\r\n    GENERIC,\r\n    LEADER\r\n}\r\n\r\nexport class Endpoint {\r\n    static readonly URL: string = \"https://plus.azurewebsites.net\"\r\n    static readonly ADD_POINTS: string = \"api/admin/conta/conta/\"\r\n    static readonly ADD_USERS_TEAM: string = \"api/admin/equipe/batch\"\r\n    static readonly ADMIN_REGISTER_USER: string = \"api/admin/user/\"\r\n    static readonly ADMIN_TEAM_EDIT: string = \"api/admin/equipe/\"\r\n    static readonly APPROVE_USER: string = \"api/lider/equipe/aprovarConvite/\"\r\n    static readonly CREATE_ACTIVITY: string = \"api/admin/conta/atividade/\"\r\n    static readonly CREATE_FACTORY: string = \"api/admin/fabrica/\"\r\n    static readonly CREATE_LINE: string = \"api/admin/linha/\"\r\n    static readonly CREATE_REWARD: string = \"api/admin/premio/\"\r\n    static readonly CREATE_SECTION: string = \"api/admin/secao/\"\r\n    static readonly CREATE_TEAM: string = \"api/admin/equipe/\"\r\n    static readonly DISABLE_REWARD: string = \"api/admin/premio/disable/\"\r\n    static readonly DISABLE_USER: string = \"api/admin/user/disableUser/\"\r\n    static readonly DISAPPROVE_USER: string = \"api/lider/equipe/recusarConvite/\"\r\n    static readonly EDIT_ACTIVITY: string = \"api/admin/conta/atividade/\"\r\n    static readonly EDIT_FACTORY: string = \"api/admin/fabrica/\"\r\n    static readonly EDIT_LINE: string = \"api/admin/linha/\"\r\n    static readonly EDIT_REWARD: string = \"api/admin/premio/\"\r\n    static readonly EDIT_SECTION: string = \"api/admin/secao/\"\r\n    static readonly EDIT_USER: string = \"api/user/\"\r\n    static readonly ENABLE_REWARD: string = \"api/admin/premio/enable/\"\r\n    static readonly ENABLE_USER: string = \"api/admin/user/enableUser/\"\r\n    static readonly EXCHANGE: string = \"api/conta/resgate\"\r\n    static readonly FACTORIES: string = \"api/guest/fabrica/\"\r\n    static readonly GENERATE_CONFIRMATION_CODE: string = \"api/guest/user/gerarConfirmacao/\"\r\n    static readonly GET_ACTIVE_REWARDS: string = \"api/premio/ativos\"\r\n    static readonly GET_ACTIVITIES: string = \"api/admin/conta/atividade/list\"\r\n    static readonly GET_ADMINS_AND_LEADERS: string = \"api/user/listAdminLideres\"\r\n    static readonly GET_ALL_MESSAGES: string = \"api/mensagem/inbox\"\r\n    static readonly GET_DASHBOARD_DATA: string = \"api/conta/dashboard\"\r\n    static readonly GET_EXTRACT: string = \"api/conta/extrato\"\r\n    static readonly GET_POINTS: string = \"api/conta/saldo\"\r\n    static readonly GET_REWARDS: string = \"api/admin/premio/\"\r\n    static readonly GET_REWARD_BY_ID: string = \"api/admin/premio/\"\r\n    static readonly GET_REWARD_IMAGE: string = \"\"\r\n    static readonly GET_SINGLE_MESSAGE: string = \"api/mensagem/get/\"\r\n    static readonly GET_TEAMS: string = \"api/equipe/\"\r\n    static readonly GET_TEAM_BY_ID: string = \"api/equipe/\"\r\n    static readonly GET_UNREAD_MESSAGES: string = \"api/mensagem/inbox/unread\"\r\n    static readonly GET_UNREAD_MESSAGES_COUNT: string = \"api/mensagem/notificacoes\"\r\n    static readonly GET_USERS: string = \"api/admin/user/list\"\r\n    static readonly GET_USER_BY_ID: string = \"api/admin/user/\"\r\n    static readonly GET_USER_IMAGE: string = \"api/user/imagem/\"\r\n    static readonly JOIN_REQUEST: string = \"api/equipe/ingressarEquipe/\"\r\n    static readonly LEADER_GET_PENDING_USERS: string = \"api/lider/equipe/listConvites/\"\r\n    static readonly LEADER_GET_USERS: string = \"api/lider/user/\"\r\n    static readonly LEADER_GET_USER_BY_ID: string = \"api/lider/user/\"\r\n    static readonly LEADER_TEAM_EDIT: string = \"api/lider/equipe/\"\r\n    static readonly LEAVE_REQUEST: string = \"api/equipe/sair/\"\r\n    static readonly LINES: string = \"api/guest/linha/\"\r\n    static readonly LOGIN: string = \"api/auth/login\"\r\n    static readonly MANAGERS: string = \"api/managers\"\r\n    static readonly MARK_MESSAGE_AS_READ: string = \"api/mensagem/lida/\"\r\n    static readonly MODIFY_USER: string = \"api/admin/user/\"\r\n    static readonly RECOVERY: string = \"api/guest/user/recuperarSenha\"\r\n    static readonly REMOVE_ACTIVITY: string = \"api/admin/conta/atividade/\"\r\n    static readonly REMOVE_FACTORY: string = \"api/admin/fabrica/\"\r\n    static readonly REMOVE_LINE: string = \"api/admin/linha/\"\r\n    static readonly REMOVE_MESSAGE: string = \"api/mensagem/\"\r\n    static readonly REMOVE_POINTS: string = \"api/admin/conta/remove\"\r\n    static readonly REMOVE_REWARD: string = \"api/admin/premio/\"\r\n    static readonly REMOVE_SECTION: string = \"api/admin/secao/\"\r\n    static readonly REMOVE_TEAM: string = \"api/admin/equipe/\"\r\n    static readonly RESET_ALL_POINTS: string = \"api/admin/conta/conta/zerar\"\r\n    static readonly RESET_USER_PASSWORD: string = \"api/admin/user/resetSenha/\"\r\n    static readonly REWARD_UPDATE_IMAGE: string = \"api/admin/premio/updateImagem/\"\r\n    static readonly SECTIONS: string = \"api/guest/secao/\"\r\n    static readonly SEND_MESSAGE: string = \"api/mensagem/send\"\r\n    static readonly SHIFTS: string = \"api/shifts\"\r\n    static readonly USER_UPDATE_IMAGE: string = \"api/user/updateImagem\"\r\n    static readonly USER_REGISTER_USER: string = \"api/guest/user/owncreate\"\r\n    static readonly VALIDATE_CONFIRMATION_CODE: string = \"api/guest/user/validarConfirmacao/\"\r\n    static readonly WAITING_APPROVAL: string = \"api/equipe/aguardandoConvite/\"\r\n}\r\n\r\nexport class AlertTitle {\r\n    static readonly ALERT: string = \"Alerta!\"\r\n    static readonly WARNING: string = \"Aviso\"\r\n}\r\n\r\nexport class AlertText {\r\n    static readonly POINTS_RESET: string = \"Esta ação irá zerar os pontos de todos os usuários do sistema. Esta ação não poderá ser desfeita. Tem certeza que deseja continuar?\"\r\n    static readonly RECOVER_SUCCESSFUL: string = \"Nova senha enviada ao e-mail cadastrado.\"\r\n    static readonly SIGNUP_SUCCESSFUL: string = \"Cadastro bem sucedido.\"\r\n}\r\n\r\nexport class ToastText {\r\n    static readonly ACCEPT_TERMS: string = \"Aceite os termos de uso e política de privacidade e tente novamente.\"\r\n    static readonly ACTIVITY_ADDED: string = \"Atividade adicionada.\"\r\n    static readonly ACTIVITY_ALREADY_EXISTS: string = \"Atividade já cadastrada.\"\r\n    static readonly ACTIVITY_REMOVED: string = \"Atividade apagada.\"\r\n    static readonly ACTIVITY_EDITED: string = \"Atividade editada.\"\r\n    static readonly ALREADY_EXISTS: string = \"Este item já está cadastrado.\"\r\n    static readonly BAD_LOGIN: string = \"E-mail não encontrado. Tente novamente.\"\r\n    static readonly BAD_PASSWORD: string = \"Senha incorreta. Tente novamente.\"\r\n    static readonly EDIT_SUCCESSFUL: string = \"Alterações feitas com sucesso.\"\r\n    static readonly EXCHANGE_SUCCESSFUL: string = \"Resgate bem sucedido!\"\r\n    static readonly EXCHANGE_FAILED: string = \"Ocorreu um erro ao registrar seu resgate. Contate um administrador.\"\r\n    static readonly CART_EMPTY: string = \"Seu carrinho está vazio.\"\r\n    static readonly COMMUNICATION_FAILURE: string = \"Falha ao comunicar-se com o servidor.\"\r\n    static readonly CREATION_SUCCESSFUL: string = \"Criado(a) com sucesso.\"\r\n    static readonly DATE_MUST_BE_FUTURE: string = \"Data de agendamento deve ser no futuro.\"\r\n    static readonly FEATURE_UNAVAILABLE_FOR_WEB: string = \"Esta funcionalidade não está disponível para navegadores web. Para utilizá-la, acesse o aplicativo via aparelho celular.\"\r\n    static readonly IMAGE_REMOVED: string = \"Imagem removida com sucesso.\"\r\n    static readonly IMAGE_DOWNLOAD_FAILED: string = \"Houve um problema ao baixar a imagem.\"\r\n    static readonly IMAGE_UPLOAD_FAILED: string = \"Houve um problema ao enviar a imagem.\"\r\n    static readonly INSERT_CONFIRMATION_CODE: string = \"Insira o código de confirmação e tente novamente.\"\r\n    static readonly INSERT_DESCRIPTION: string = \"Insira a descrição e tente novamente.\"\r\n    static readonly INSERT_DESTINATION_USER: string = \"Insira o destinatário e tente novamente.\"\r\n    static readonly INSERT_EMAIL: string = \"Insira o email e tente novamente.\"\r\n    static readonly INSERT_FACTORY: string = \"Insira a fábrica e tente novamente.\"\r\n    static readonly INSERT_LINE: string = \"Insira e linha e tente novamente.\"\r\n    static readonly INSERT_MESSAGE: string = \"Insira a mensagem e tente novamente.\"\r\n    static readonly INSERT_MONDELEZ_EMAIL: string = \"Insira um email @mdlz e tente novamente.\"\r\n    static readonly INSERT_NAME: string = \"Insira o nome e tente novamente.\"\r\n    static readonly INSERT_PASSWORD: string = \"Insira a senha e tente novamente.\"\r\n    static readonly INSERT_PASSWORD_CONFIRM: string = \"Insira a confirmação de senha e tente novamente.\"\r\n    static readonly INSERT_PHONE: string = \"Insira o telefone e tente novamente.\"\r\n    static readonly INSERT_QUANTITY: string = \"Insira a quantidade e tente novamente.\"\r\n    static readonly INSERT_SECTION: string = \"Insira a seção e tente novamente.\"\r\n    static readonly INSERT_VALUE: string = \"Insira o valor e tente novamente.\"\r\n    static readonly INSERT_REASON: string = \"Insira o motivo e tente novamente.\"\r\n    static readonly INSERT_REGISTRATION: string = \"Insira a matrícula e tente novamente.\"\r\n    static readonly INSERT_SCHOOLING: string = \"Insira o grau de escolaridade e tente novamente.\"\r\n    static readonly INSERTED_IN_CART: string = \"Adicionado ao carrinho.\"\r\n    static readonly INSUFICIENT_FUNDS: string = \"Saldo insuficiente.\"\r\n    static readonly INVALID_CONFIRMATION_CODE: string = \"Código de confirmação inválido.\"\r\n    static readonly INVALID_FORM: string = \"Formulário inválido.\"\r\n    static readonly INVALID_PASSWORD_LENGTH: string = \"Senhas devem ter tamanho entre 6 e 30 caracteres.\"\r\n    static readonly INVALID_TOKEN: string = \"Token inválido. Faça login manualmente.\"\r\n    static readonly LOGIN_EXPIRED: string = \"Seu login expirou!\"\r\n    static readonly LOGOUT_SUCCESSFUL: string = \"Você foi deslogado com sucesso!\"\r\n    static readonly MESSAGE_SEND_SUCCESS: string = \"Envio da mensagem bem sucedido.\"\r\n    static readonly MESSAGE_SEND_FAILURE: string = \"Envio da mensagem falhou.\"\r\n    static readonly OBJECT_IN_USE: string = \"Existem itens atrelados a este objeto, por isso ele não pode ser removido. Remova os itens atrelados e tente novamente.\"\r\n    static readonly PASSWORDS_DONT_MATCH: string = \"Senhas não conferem.\"\r\n    static readonly PASSWORD_RESETED: string = \"Senha resetada.\"\r\n    static readonly PENDING_APPROVAL: string = \"Seu cadastro ainda está aguardando aprovação.\"\r\n    static readonly POINTS_ADDED: string = \"Pontos adicionados.\"\r\n    static readonly POINTS_REMOVED: string = \"Pontos removidos.\"\r\n    static readonly POINTS_RESETED: string = \"Pontuações zeradas com sucesso.\"\r\n    static readonly POINTS_RESET_SCHEDULED: string = \"Reset de pontuação agendado com sucesso.\"\r\n    static readonly REMOVE_SUCCESSFUL: string = \"Removido com sucesso.\"\r\n    static readonly REMOVED_FROM_CART: string = \"Removido do carrinho.\"\r\n    static readonly REQUEST_SUCCESSFUL: string = \"Requisição bem sucedida.\"\r\n    static readonly REWARD_ADDED: string = \"Prêmio adicionado.\"\r\n    static readonly REWARD_EDITED: string = \"Prêmio editado.\"\r\n    static readonly REWARD_REMOVED: string = \"Prêmio removido.\"\r\n    static readonly SOMETHING_WENT_WRONG: string = \"Ops! Algo deu errado. Tente novamente mais tarde.\"\r\n    static readonly TEAM_MUST_HAVE_LEADER: string = \"A equipe deve ter um líder atribuído.\"\r\n    static readonly TEAM_REMOVED: string = \"Equipe removida.\"\r\n    static readonly USER_ADDED: string = \"Usuário adicionado.\"\r\n    static readonly USER_ALREADY_ACTIVATED: string = \"Usuário já está ativo.\"\r\n    static readonly USER_DISABLED: string = \"Usuário desabilitado.\"\r\n    static readonly USER_REMOVED: string = \"Usuário removido.\"\r\n    static readonly WAIT_FOR_APPROVAL: string = \"Aguarde aprovação.\"\r\n    static readonly WELCOME: string = \"Seja bem vindo!\"\r\n}\r\n\r\nexport class LoadingText {\r\n    static readonly PLEASE_WAIT: string = \"Por favor, aguarde...\"\r\n}\r\n\r\nexport class ErrorType {\r\n    static readonly BAD_CREDENTIALS: string = \"Bad credentials\"\r\n    static readonly BAD_LOGIN: string = \"BAD_LOGIN\"\r\n    static readonly CANCELED_DURING_CROP: string = \"CANCELED_DURING_CROP\"\r\n    static readonly DUPLICATED = \"DUPLICATED\"\r\n    static readonly MANDATORY_MDLZ_EMAIL = \"MANDATORY_MDLZ_EMAIL\"\r\n    static readonly OBJECT_IN_USE = \"ERROR_OBJECT_INUSE\"\r\n    static readonly USER_ALREADY_ACTIVATED = \"USER_ALREADY_ACTIVATED\"\r\n    static readonly USER_ALREADY_PENDING = \"USER_ALREADY_WAITING\"\r\n    static readonly USER_DISABLED = \"User is disabled\"\r\n    static readonly USER_NOT_FOUND = \"ERROR_USER_NOT_FOUND\"\r\n    static readonly USER_NOTFOUND = \"USER_NOTFOUND\";\r\n}\r\n\r\nexport class ErrorMessage {\r\n    static readonly ARRAY_SIZES_DIFFER: string = \"Arrays tem tamanhos diferentes \"\r\n    static readonly FETCH_ALREADY_RUNNING: string = \"Atualização está ativa \"\r\n    static readonly FETCH_NOT_RUNNING: string = \"Atualização não está ativa \"\r\n    static readonly INSUFICIENT_FUNDS: string = \"Saldo insuficiente\"\r\n    static readonly INVALID_ARRAY: string = \"Array inválido \"\r\n    static readonly INVALID_COLOR: string = \"Cor inválida \"\r\n    static readonly INVALID_DATE: string = \"Data inválida \"\r\n    static readonly INVALID_EMAIL: string = \"E-mail inválido \"\r\n    static readonly INVALID_ENDPOINT: string = \"Endpoint inválido \"\r\n    static readonly INVALID_FACTORY: string = \"Fábrica inválida \"\r\n    static readonly INVALID_FORM: string = \"Formulário inválido \"\r\n    static readonly INVALID_FUNCTION: string = \"Função inválida \"\r\n    static readonly INVALID_ID: string = \"ID inválido \"\r\n    static readonly INVALID_INDEX: string = \"Índice inválido \"\r\n    static readonly INVALID_LINE: string = \"Linha inválida \"\r\n    static readonly INVALID_PASSWORD_LENGTH: string = \"Tamanho inválido de senha \"\r\n    static readonly INVALID_PHONE: string = \"Número de telefone inválido \"\r\n    static readonly INVALID_RESPONSE: string = \"Resposta inválida do servidor \"\r\n    static readonly INVALID_SHIFT: string = \"Turno inválido \"\r\n    static readonly INVALID_STRING: string = \"String inválida \"\r\n    static readonly INVALID_USER: string = \"Usuário inválido \"\r\n    static readonly INVALID_VARIABLE: string = \"Variável inválida \"\r\n    static readonly PASSWORDS_DONT_MATCH: string = \"Senhas não conferem \"\r\n    static readonly USER_ALREADY_ADDED: string = \"Usuário já adicionado \"\r\n    static readonly USER_NOT_FOUND: string = \"Usuário não encontrado \"\r\n    static readonly WRONG_USER_TYPE: string = \"Tipo de usuário inválido \"\r\n}\r\n\r\nexport class MenuText {\r\n    static readonly ADD_POINTS: string = \"Adicionar Pontos\"\r\n    static readonly CANCEL: string = \"Cancelar\"\r\n    static readonly CONFIRM: string = \"Confirmar\"\r\n    static readonly DELETE: string = \"Excluir\"\r\n    static readonly EDIT: string = \"Editar\"\r\n    static readonly SAVE: string = \"Salvar\"\r\n    static readonly SAVE_CHANGES: string = \"Salvar Alterações\"\r\n    static readonly IM_SURE: string = \"Tenho certeza, prosseguir.\"\r\n    static readonly LOAD_FILE: string = \"Galeria de Imagem\"\r\n    static readonly OK: string = \"Ok\";\r\n    static readonly REMOVE_FROM_TEAM: string = \"Remover da equipe\"\r\n    static readonly REMOVE_POINTS: string = \"Remover Pontos\"\r\n    static readonly REGISTER: string = \"Realizar Cadastro\"\r\n    static readonly TAKE_PICTURE: string = \"Tirar Foto\"\r\n    static readonly WHAT_DO_YOU_WANT_TO_DO: string = \"O que deseja fazer?\"\r\n}\r\n\r\nexport class Constants {\r\n    static readonly TEST: boolean = false\r\n    static readonly ISOLATED: boolean = false\r\n    static readonly DEFAULT_USER_PHOTO: string = \"../assets/imgs/user.png\"\r\n    static readonly DEFAULT_REWARD_PHOTO: string = \"../assets/imgs/no-image.png\"\r\n    static readonly RESET_CONFIRM_CODE: string = \"RESET\"\r\n}","import { Injectable } from '@angular/core';\r\nimport { Constants, ErrorMessage, ToastText, ErrorType, MenuText } from './Constants';\r\nimport { LoadingOptions, AlertOptions, ToastOptions } from '@ionic/core';\r\nimport { Camera, CameraOptions, PictureSourceType, DestinationType } from '@ionic-native/camera/ngx';\r\nimport { LoadingController, AlertController, ToastController, ModalController, Platform } from '@ionic/angular';\r\nimport { User } from 'src/models/User';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { Crop } from '@ionic-native/crop/ngx';\r\n\r\n@Injectable()\r\nexport class Utils {\r\n\r\n    private readonly logHeader = \"Utils>>\"\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(\r\n        private camera: Camera,\r\n        private loadingController: LoadingController,\r\n        private alertController: AlertController,\r\n        private toastController: ToastController,\r\n        private file: File,\r\n        private crop: Crop,\r\n        private platform: Platform\r\n    ) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        Utils.log(logHeader);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public loading(options: LoadingOptions) {\r\n        return this.loadingController.create(options);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public simpleLoading(message: string = \"\", duration: number = 3000) {\r\n        const logHeader = this.logHeader + \"simpleLoading>>\"\r\n        Utils.log(logHeader);\r\n        return this.loadingController.create({\r\n            spinner: 'bubbles',\r\n            cssClass: 'mdlz-loader-class',\r\n            message: message,\r\n            showBackdrop: true,\r\n            duration: duration,\r\n        });\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public alert(options: AlertOptions) {\r\n        return this.alertController.create(options);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public simpleAlert(title: string, message: string) {\r\n        this.alertController.create({\r\n            header: title,\r\n            message: message,\r\n            buttons: [MenuText.OK]\r\n        }).then((alert) => {\r\n            alert.present();\r\n        })\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public toast(options: ToastOptions) {\r\n        return this.toastController.create(options)\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public simpleToast(message: string, duration: number = 3000) {\r\n        const logHeader = this.logHeader + \"simpleToast>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(message)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"MESSAGE>>\" + JSON.stringify(message));\r\n        }\r\n        return this.toastController.create({\r\n            message: message,\r\n            duration: duration,\r\n            animated: true,\r\n            cssClass: \"toast-mdlz\"\r\n\r\n        }).then((toast) => {\r\n            toast.present();\r\n        })\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public simpleToastError(message: string, duration: number = 3000) {\r\n        const logHeader = this.logHeader + \"simpleToast>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(message)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"MESSAGE>>\" + JSON.stringify(message));\r\n        }\r\n        return this.toastController.create({\r\n            message: message,\r\n            duration: duration,\r\n            animated: true,\r\n            cssClass: \"toast-negativo\"\r\n\r\n        }).then((toast) => {\r\n            toast.present();\r\n        })\r\n    }\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Log message if application is in TEST mode\r\n     * \r\n     * @param message \r\n     */\r\n    static log(message: any) {\r\n        if (Constants.TEST) {\r\n            console.log(new Date().toISOString() + \">>\" + message);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Verifies if string is valid or not.\r\n     * \r\n     * @param text string - String to be verified.\r\n     * @returns {boolean} boolean - True if input string is invalid, False otherwise.\r\n     */\r\n    static isStringInvalid(text: string): boolean {\r\n        const logHeader = \"Utils>>isStringInvalid>>\";\r\n        // this.log(logHeader);\r\n        return this.isVarInvalid(text) || text.length === 0;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Verifies if array is valid or not.\r\n     * \r\n     * @param {any[]} array any[] - Array to be verified.\r\n     * @returns {boolean} boolean - True if input string is invalid, False otherwise.\r\n     */\r\n    static isArrayInvalid(array: any[]): boolean {\r\n        const logHeader = \"Utils>>isArrayInvalid>>\";\r\n        // this.log(logHeader);\r\n        return this.isVarInvalid(array) || array.length === 0;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Verifies if variable is null or undefined.\r\n     * \r\n     * @param variable any - Variable to be verified.\r\n     * @returns {boolean} boolean - True if input variable is null or undefined, False otherwise.\r\n     */\r\n    static isVarInvalid(variable: any): boolean {\r\n        const logHeader = \"Utils>>isVarInvalid>>\";\r\n        // this.log(logHeader);\r\n        return variable === null || variable === undefined;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Verifies if a given date is null, undefined or in the past.\r\n     * \r\n     * @param date date - Date to be verified\r\n     * @returns {boolean} boolean - True if input date is invalid or in the past, False otherwise.\r\n     */\r\n    static isDatePastOrInvalid(date: Date): boolean {\r\n        return this.isVarInvalid(date) || date.getTime() <= (new Date()).getTime();\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n    /**\r\n     * Verifies if a given date is null, undefined or in the future.\r\n     * \r\n     * @param date date - Date to be verified\r\n     * @returns {boolean} boolean - True if input date is invalid or in the future, False otherwise.\r\n     */\r\n    static isDateFutureOrInvalid(date: Date): boolean {\r\n        return this.isVarInvalid(date) || date.getTime() > (new Date()).getTime();\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Verifies if a given string is null, undefined or is not a valid e-mail address.\r\n     * \r\n     * @param {string} email string - E-mail to be verified\r\n     * @returns {boolean} boolean - True if input e-mail is invalid, False otherwise.\r\n     */\r\n    static isEmailInvalid(email: string): boolean {\r\n        return this.isStringInvalid(email) || !(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email));\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Verifies if a given string is null, undefined or is not a valid phone number.\r\n     * \r\n     * @param {string} phone string - Phone number to be verified\r\n     * @returns {boolean} boolean - True if input phone number is invalid, False otherwise.\r\n     */\r\n    static isPhoneInvalid(phone: string): boolean {\r\n        return this.isStringInvalid(phone) || /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\r\n    }\r\n\r\n    /**\r\n     * Returns True if given object has \"status\" field and \"status\" equals 200.\r\n     * \r\n     * @param response Object to be tested\r\n     */\r\n    static hasOkStatus(response: any): boolean {\r\n        return (!Utils.isVarInvalid(response)) && (!Utils.isVarInvalid(response.status)) && response.status == 200;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static generateUniqueId(prefix: string): string {\r\n        return prefix + \"_\" + Date.now().toString() + \"_\" + Math.random().toString(36).substr(2, 9);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Converts Date to eye-friendly string\r\n     * \r\n     * @param date Date object to be converted\r\n     */\r\n    static dateToString(date: Date): string {\r\n        const logHeader = \"Utils>>dateToString>>\";\r\n        if (Utils.isVarInvalid(date)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_DATE + \"DATE>>\" + date);\r\n        }\r\n        Utils.log(logHeader + \"DATE>>\" + JSON.stringify(date) + \"STRING>>\" + (date.getDay() < 10 ? '0' + date.getDay() : date.getDay()) + '/' + (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)) + ' ' + date.getHours() + ':' + (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()))\r\n        return (date.getDay() < 10 ? '0' + date.getDay() : date.getDay()) + '/' + (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)) + ' ' + date.getHours() + ':' + (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static dismissLoading(loading: HTMLIonLoadingElement) {\r\n        if (!Utils.isVarInvalid(loading)) {\r\n            loading.dismiss();\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static generateRandomString(): string {\r\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async takePicture(sourceType: PictureSourceType) {\r\n        var options: CameraOptions = {\r\n            quality: 100,\r\n            sourceType: sourceType,\r\n            destinationType: this.camera.DestinationType.FILE_URI,\r\n            encodingType: this.camera.EncodingType.JPEG,\r\n            mediaType: this.camera.MediaType.PICTURE,\r\n            saveToPhotoAlbum: false,\r\n            correctOrientation: true\r\n        };\r\n        return this.camera.getPicture(options);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public static getImageBlob(dataURI) {\r\n        const byteString = window.atob(dataURI);\r\n        const arrayBuffer = new ArrayBuffer(byteString.length);\r\n        const int8Array = new Uint8Array(arrayBuffer);\r\n        for (let i = 0; i < byteString.length; i++) {\r\n            int8Array[i] = byteString.charCodeAt(i);\r\n        }\r\n        const blob = new Blob([int8Array], { type: 'image/jpeg' });\r\n        return blob;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public saveImage(blob, name) {\r\n        return new Promise((resolve, reject) => {\r\n            this.file.checkDir(this.file.dataDirectory, 'pictures')\r\n                .then(_ => {\r\n                    this.file.writeFile(this.file.dataDirectory + 'pictures/', name, blob).then(response => {\r\n                        resolve(response);\r\n                    }).catch(err => {\r\n                        reject(err);\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    this.file.createDir(this.file.dataDirectory, 'pictures', false).then(result => {\r\n                        this.file.writeFile(this.file.dataDirectory + 'pictures/', name, blob).then(response => {\r\n                            resolve(response);\r\n                        }).catch(err => {\r\n                            reject(err);\r\n                        })\r\n                    })\r\n                });\r\n        })\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public resolveLocalFileSystemURL(imageURI) {\r\n        return this.file.resolveLocalFilesystemUrl(imageURI);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public cropPicture(imageURI) {\r\n        return new Promise<any>((resolve, reject) => {\r\n            if (!(this.platform.is('desktop') || this.platform.is('mobileweb'))) {\r\n                this.crop.crop(imageURI).then((imageData) => {\r\n                    let imageName;\r\n                    if (imageData.indexOf('?') > 0) {\r\n                        imageName = imageData.slice(imageData.lastIndexOf('/') + 1, imageData.indexOf('?'));\r\n                    }\r\n                    else {\r\n                        imageName = imageData.slice(imageData.lastIndexOf('/') + 1, imageData.length);\r\n                    }\r\n                    let imagePath = imageData.slice(0, imageData.lastIndexOf('/'));\r\n                    this.file.readAsDataURL(imagePath, imageName).then((base64) => {\r\n                        resolve(base64);\r\n                    }).catch((error) => reject(error));\r\n                }).catch((error) => reject(error));\r\n            }\r\n            else {\r\n                resolve(\"data:image/jpeg;base64,\" + imageURI)\r\n            }\r\n        });\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    handleErrorToast(error: Error);\r\n    handleErrorToast(error: string);\r\n    handleErrorToast(errorInput: any) {\r\n        let error: string;\r\n        if (typeof errorInput == \"string\") {\r\n            error = errorInput;\r\n        }\r\n        else if (typeof errorInput) {\r\n            error = errorInput.message;\r\n        }\r\n        if (error.includes(ErrorType.DUPLICATED)) {\r\n            this.simpleToastError(ToastText.ALREADY_EXISTS);\r\n        }\r\n        else if (error.includes(ErrorType.BAD_LOGIN)) {\r\n            this.simpleToastError(ToastText.BAD_LOGIN);\r\n        }\r\n        else if (error.includes(ErrorType.USER_ALREADY_ACTIVATED)) {\r\n            this.simpleToastError(ToastText.USER_ALREADY_ACTIVATED);\r\n        }\r\n        else if (error.includes(ErrorType.BAD_CREDENTIALS)) {\r\n            this.simpleToastError(ToastText.BAD_PASSWORD);\r\n        }\r\n        else if (error.includes(ErrorType.USER_DISABLED)) {\r\n            this.simpleToastError(ToastText.USER_DISABLED);\r\n        }\r\n        else if (error.includes(ErrorType.OBJECT_IN_USE)) {\r\n            this.simpleToastError(ToastText.OBJECT_IN_USE);\r\n        }\r\n        else if (error.includes(ErrorMessage.INVALID_DATE)) {\r\n            this.simpleToastError(ToastText.DATE_MUST_BE_FUTURE);\r\n        }\r\n        else if (error.includes(ErrorType.USER_NOT_FOUND)) {\r\n            this.simpleToast(ErrorMessage.USER_NOT_FOUND);\r\n        }\r\n        else if (error.includes(ErrorType.USER_NOT_FOUND)) {\r\n            this.simpleToast(ErrorMessage.USER_NOT_FOUND);\r\n        }\r\n        else if (error.includes(ErrorType.USER_NOTFOUND)) {\r\n            this.simpleToast(ErrorMessage.USER_NOT_FOUND);\r\n        }\r\n        else {\r\n            this.simpleToast(error + '\\n' + ToastText.SOMETHING_WENT_WRONG)\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class Activity {\r\n\r\n    private readonly logHeader = \"Activity>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Fields */\r\n\r\n    private id: number;\r\n    private valor: number;\r\n    private nome: string;\r\n    private pilar: string;\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Getters */\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $valor\r\n     * @return {number}\r\n     */\r\n    public getValor(): number {\r\n        return this.valor;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $nome\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $pilar\r\n     * @return {string}\r\n     */\r\n    public getPilar(): string {\r\n        return this.pilar;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Setters */\r\n\r\n    /**\r\n     * Setter $valor\r\n     * @param {number} value\r\n     */\r\n    public setValor(value: number) {\r\n        this.valor = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        this.nome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $motivo\r\n     * @param {string} value\r\n     */\r\n    public setPilar(value: string) {\r\n        this.pilar = value;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(valor: number, nome: string, pilar: string, id: number = undefined) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(valor)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>VALOR>>\" + valor);\r\n        }\r\n        if (Utils.isStringInvalid(nome)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>MOTIVO>>\" + nome);\r\n        }\r\n        this.id = id;\r\n        this.valor = valor;\r\n        this.nome = nome;\r\n        this.pilar = pilar;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any) {\r\n        const logHeader = \"Activity>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        return new Activity(\r\n            json.valor,\r\n            json.nome,\r\n            json.pilar,\r\n            json.id\r\n        );\r\n    }\r\n\r\n}","import { Reward } from './Reward';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\nimport { Utils } from 'src/commons/Utils';\r\n\r\nexport class CartItem {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"CartItem>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Fields */\r\n\r\n    private premio: Reward;\r\n    private id: number;\r\n    private quantity: number;\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Getters */\r\n\r\n    /**\r\n     * Getter $premio\r\n     * @return {Reward}\r\n     */\r\n    public getPremio(): Reward {\r\n        return this.premio;\r\n    }\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    /**\r\n     * Getter $quantidade\r\n     * @return {number}\r\n     */\r\n    public getQuantidade(): number {\r\n        return this.quantity;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Setters */\r\n\r\n    /**\r\n     * Setter $premio\r\n     * @param {Reward} value\r\n     */\r\n    public setPremio(value: Reward) {\r\n        this.premio = value;\r\n        this.id = this.premio.getId();\r\n    }\r\n\r\n    /**\r\n     * Setter $quantidade\r\n     * @param {number} value\r\n     */\r\n    public setQuantidade(value: number) {\r\n        const logHeader = this.logHeader + \"setQuantidade\"\r\n        if (value < 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + value);\r\n        }\r\n        this.quantity = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $quantidade\r\n     * @param {number} value\r\n     */\r\n    public addQuantidade(value: number) {\r\n        const logHeader = this.logHeader + \"addQuantidade\"\r\n        this.setQuantidade(Utils.isVarInvalid(this.getQuantidade()) ? 0 : this.getQuantidade() + value);\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(premio: Reward = undefined, quantidade: number = 1) {\r\n        this.premio = premio;\r\n        if (!Utils.isVarInvalid(premio)) {\r\n            this.id = premio.getId();\r\n        }\r\n        this.quantity = quantidade;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): CartItem {\r\n        const logHeader = \"CartItem>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        let premio = Reward.castFromJSON(json.premio);\r\n        let quantidade = json.quantidade;\r\n        return new CartItem(premio, quantidade);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class ChartItem {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"ChartItem>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Fields */\r\n\r\n    private nome: string;\r\n    private dados: Array<number>;\r\n    private labels: Array<string>;\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Getters */\r\n\r\n    /**\r\n     * Getter $name\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $dados\r\n     * @return {Array<number>}\r\n     */\r\n    public getDados(): Array<number> {\r\n        return this.dados;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $labels\r\n     * @return {Array<string>}\r\n     */\r\n    public getLabels(): Array<string> {\r\n        return this.labels;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Setters */\r\n\r\n    /**\r\n     * Setter $name\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        const logHeader = this.logHeader + \"setNome>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + value);\r\n        }\r\n        this.nome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $dados\r\n     * @param {Array<number>} value\r\n     */\r\n    public setDados(value: Array<number>) {\r\n        const logHeader = this.logHeader + \"setDados>>\";\r\n        if (Utils.isArrayInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ARRAY + \">>\" + JSON.stringify(value));\r\n        }\r\n        this.dados = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $labels\r\n     * @param {Array<number>} value\r\n     */\r\n    public setLabels(value: Array<string>) {\r\n        const logHeader = this.logHeader + \"setLabels>>\";\r\n        if (Utils.isArrayInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ARRAY + \">>\" + JSON.stringify(value));\r\n        }\r\n        this.labels = value;\r\n    }\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(\r\n        nome: string,\r\n        dados: Array<number>,\r\n        labels: Array<string>\r\n    ) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        this.nome = nome;\r\n        this.dados = dados;\r\n        this.labels = labels;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): ChartItem {\r\n        const logHeader = \"ChartItem>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        let nome = json.nome;\r\n        let dados = json.dados;\r\n        let labels = json.labels;\r\n        return new ChartItem(nome, dados, labels);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class ExtractItem {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"ExtractItem>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Fields */\r\n\r\n    private data: Date;\r\n    private valor: number;\r\n    private nome: string;\r\n    private tipo: string;\r\n\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Getters */\r\n\r\n    /**\r\n     * Getter $data\r\n     * @return {Date}\r\n     */\r\n    public getData(): Date {\r\n        return this.data;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $valor\r\n     * @return {number}\r\n     */\r\n    public getValor(): number {\r\n\r\n        return this.valor;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $nome\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $tipo\r\n     * @return {string}\r\n     */\r\n    public getTipo(): string {\r\n        return this.tipo;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Setters */\r\n\r\n    /**\r\n     * Setter $data\r\n     * @param {Date} value\r\n     */\r\n    public setData(value: Date) {\r\n        this.data = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $valor\r\n     * @param {number} value\r\n     */\r\n    public setValor(value: number) {\r\n        this.valor = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        this.nome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $tipo\r\n     * @param {string} value\r\n     */\r\n    public setTipo(value: string) {\r\n        this.tipo = value;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(data: Date, valor: number, nome: string) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(data)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_DATE + \">>\" + data);\r\n        }\r\n        if (Utils.isVarInvalid(valor)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + valor);\r\n        }\r\n        if (Utils.isStringInvalid(nome)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + nome);\r\n        }\r\n        this.data = data;\r\n        this.valor = valor;\r\n        this.nome = nome;\r\n        if (this.nome.includes('Resgate')) {\r\n            this.nome = this.nome.replace('Resgate prêmio', '');\r\n            this.tipo = 'Resgate de Prêmio'\r\n        }\r\n        else {\r\n            this.tipo = 'Atividade';\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any) {\r\n        const logHeader = \"ExtractItem>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        return new ExtractItem(\r\n            new Date(json.data),\r\n            json.valor,\r\n            json.descricao,\r\n        );\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class Factory {\r\n    private readonly logHeader = \"Factory>>\";\r\n    private id: number;\r\n    private nome: string;\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $nome\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $id\r\n     * @param {number} value\r\n     */\r\n    public setId(value: number) {\r\n        const logHeader = this.logHeader + \"setId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + value);\r\n        }\r\n        this.id = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        const logHeader = this.logHeader + \"setNome>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + value);\r\n        }\r\n        this.nome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public constructor(nome: string, id: number = undefined) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(nome)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"NOME>>\" + nome);\r\n        }\r\n        this.id = id;\r\n        this.nome = nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): Factory {\r\n        const logHeader = \"User>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        if (Utils.isVarInvalid(json)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"JSON>>\" + JSON.stringify(json));\r\n        }\r\n        let id = json.id;\r\n        let nome = json.nome;\r\n        return new Factory(nome, id);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage, Constants } from 'src/commons/Constants';\r\n\r\nexport class Invitation {\r\n\r\n    private readonly logHeader = \"Invitation>>\";\r\n\r\n    private id: number;\r\n    private equipeId: number;\r\n    private userId: number;\r\n    private userNome: string;\r\n    private fabricaNome: string;\r\n    private secaoNome: string;\r\n    private linhaNome: string;\r\n    private foto: string;\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    /**\r\n     * Getter $equipeId\r\n     * @return {number}\r\n     */\r\n    public getEquipeId(): number {\r\n        return this.equipeId;\r\n    }\r\n\r\n    /**\r\n     * Getter $userId\r\n     * @return {number}\r\n     */\r\n    public getUserId(): number {\r\n        return this.userId;\r\n    }\r\n\r\n    /**\r\n     * Getter $userNome\r\n     * @return {string}\r\n     */\r\n    public getUserNome(): string {\r\n        return this.userNome;\r\n    }\r\n\r\n    /**\r\n     * Getter $fabricaNome\r\n     * @return {string}\r\n     */\r\n    public getFabricarNome(): string {\r\n        return this.fabricaNome;\r\n    }\r\n\r\n    /**\r\n     * Getter $secaoNome\r\n     * @return {string}\r\n     */\r\n    public getSecaoNome(): string {\r\n        return this.secaoNome;\r\n    }\r\n\r\n    /**\r\n     * Getter $linhaNome\r\n     * @return {string}\r\n     */\r\n    public getLinhaNome(): string {\r\n        return this.linhaNome;\r\n    }\r\n\r\n    /**\r\n     * Getter $foto\r\n     * @return {string}\r\n     */\r\n    public getFoto(): string {\r\n        return this.foto;\r\n    }\r\n\r\n    /**\r\n     * Setter $id\r\n     * @param {number} value\r\n     */\r\n    public setId(value: number) {\r\n        this.id = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $equipeId\r\n     * @param {number} value\r\n     */\r\n    public setEquipeId(value: number) {\r\n        this.equipeId = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $userId\r\n     * @param {number} value\r\n     */\r\n    public setUserId(value: number) {\r\n        this.userId = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $userNome\r\n     * @param {string} value\r\n     */\r\n    public setUserNome(value: string) {\r\n        this.userNome = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $fabricaNome\r\n     * @param {string} value\r\n     */\r\n    public setFabricaNome(value: string) {\r\n        this.fabricaNome = value;\r\n    }\r\n    /**\r\n     * Setter $secaoNome\r\n     * @param {string} value\r\n     */\r\n    public setSecaoNome(value: string) {\r\n        this.secaoNome = value;\r\n    }\r\n    /**\r\n     * Setter $linhaNome\r\n     * @param {string} value\r\n     */\r\n    public setLinhaNome(value: string) {\r\n        this.linhaNome = value;\r\n    }\r\n    /**\r\n     * Setter $foto\r\n     * @param {string} value\r\n     */\r\n    public setFoto(value: string) {\r\n        this.foto = value;\r\n    }\r\n\r\n\r\n    constructor(equipeId: number = undefined,\r\n        id: number = undefined,\r\n        userId: number = undefined,\r\n        userNome: string = undefined,\r\n        fabricaNome: string = undefined,\r\n        secaoNome: string = undefined,\r\n        linhaNome: string = undefined,\r\n        foto: string = undefined) {\r\n        this.equipeId = equipeId;\r\n        this.id = id;\r\n        this.userId = userId;\r\n        this.userNome = userNome;\r\n        this.fabricaNome = fabricaNome;\r\n        this.secaoNome = secaoNome;\r\n        this.linhaNome = linhaNome;\r\n        if (Utils.isStringInvalid(foto)) {\r\n            foto = Constants.DEFAULT_USER_PHOTO;\r\n        }\r\n        this.foto = \"https://mdlzplusstorage.blob.core.windows.net/user/\" + id;\r\n    }\r\n\r\n    static castFromJSON(input: any): Invitation {\r\n        const logHeader = \"Invitation>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n\r\n        let equipeId = json.equipeId;\r\n        let id = json.id;\r\n        let userId = json.userId;\r\n        let userNome = json.userNome;\r\n        let fabricaNome = json.fabricaNome;\r\n        let secaoNome = json.secaoNome;\r\n        let linhaNome = json.linhaNome;\r\n        let foto = json.foto;\r\n        return new Invitation(equipeId, id, userId, userNome, fabricaNome, secaoNome, linhaNome, foto);\r\n    }\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\nimport { Factory } from './Factory';\r\n\r\nexport class Line {\r\n    \r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"Line>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private id: number;\r\n    private secaoId: number;\r\n    private nome: string;\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $secaoId\r\n     * @return {number}\r\n     */\r\n    public getSecaoId(): number {\r\n        return this.secaoId;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $nome\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $id\r\n     * @param {number} value\r\n     */\r\n    public setId(value: number) {\r\n        const logHeader = this.logHeader + \"setId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + value);\r\n        }\r\n        this.id = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $secaoId\r\n     * @param {number} value\r\n     */\r\n    public setSecaoId(value: number) {\r\n        const logHeader = this.logHeader + \"setSecaoId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + value);\r\n        }\r\n        this.secaoId = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        const logHeader = this.logHeader + \"setNome>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + value);\r\n        }\r\n        this.nome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public constructor(secaoId: number, nome: string,id: number=undefined) {\r\n        const logHeader = this.logHeader + \"castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n        // if (Utils.isVarInvalid(secaoId) || secaoId <= 0) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>SECAO>>\" + secaoId);\r\n        // }\r\n        // if (Utils.isStringInvalid(nome)) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"NOME>>\" + nome);\r\n        // }\r\n        this.id = id;\r\n        this.secaoId = secaoId;\r\n        this.nome = nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): Line {\r\n        const logHeader = \"Line>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        let id = json.id;\r\n        let secaoId = json.secaoId;\r\n        let nome = json.nome;\r\n        return new Line(secaoId, nome, id);\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { ErrorMessage, Constants } from 'src/commons/Constants';\r\nimport { Utils } from 'src/commons/Utils';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class Message {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"Message>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private id: number;\r\n    private message: string;\r\n    private data: Date;\r\n    private lida: boolean;\r\n    private fromUser: number;\r\n    private fromUsernome: string;\r\n    private toUser: number;\r\n    private toUsernome: string;\r\n    private fromUserFoto: string;\r\n    private fromUserFabricaNome: string;\r\n\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Getters */\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $message\r\n     * @return {string}\r\n     */\r\n    public getMessage(): string {\r\n        return this.message;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $data\r\n     * @return {Date}\r\n     */\r\n    public getData(): Date {\r\n        return this.data;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $lida\r\n     * @return {boolean}\r\n     */\r\n    public getLida(): boolean {\r\n        return this.lida;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $fromUser\r\n     * @return {number}\r\n     */\r\n    public getFromUser(): number {\r\n        return this.fromUser;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $fromUserNome\r\n     * @return {string}\r\n     */\r\n    public getFromUserNome(): string {\r\n        return this.fromUsernome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $fromUserFoto\r\n     * @return {string}\r\n     */\r\n    public getFromUserFoto(): string {\r\n        return this.fromUserFoto;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $toUser\r\n     * @return {number}\r\n     */\r\n    public getToUser(): number {\r\n        return this.toUser;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $toUserNome\r\n     * @return {string}\r\n     */\r\n    public getToUserNome(): string {\r\n        return this.toUsernome;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Setters */\r\n\r\n    /**\r\n     * Setter $id\r\n     * @param {number} value\r\n     */\r\n    public setId(value: number) {\r\n        const logHeader = this.logHeader + \"setId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.id = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $message\r\n     * @param {string} value\r\n     */\r\n    public setMessage(value: string) {\r\n        const logHeader = this.logHeader + \"setMessage>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.message = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $data\r\n     * @param {Date} value\r\n     */\r\n    public setData(value: Date) {\r\n        const logHeader = this.logHeader + \"setData>>\";\r\n        if (Utils.isVarInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.data = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $lida\r\n     * @param {boolean} value\r\n     */\r\n    public setLida(value: boolean) {\r\n        const logHeader = this.logHeader + \"setLida>>\";\r\n        if (Utils.isVarInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.lida = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $fromUser\r\n     * @param {number} value\r\n     */\r\n    public setFromUser(value: number) {\r\n        const logHeader = this.logHeader + \"setFromUser>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.fromUser = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $fromUserNome\r\n     * @param {string} value\r\n     */\r\n    public setFromUserNome(value: string) {\r\n        const logHeader = this.logHeader + \"setFromUserNome>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.fromUsernome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $toUser\r\n     * @param {number} value\r\n     */\r\n    public setToUser(value: number) {\r\n        const logHeader = this.logHeader + \"setFromUser>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.toUser = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $toUserNome\r\n     * @param {string} value\r\n     */\r\n    public setToUserNome(value: string) {\r\n        const logHeader = this.logHeader + \"setToUserNome>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE)\r\n        }\r\n        this.toUsernome = value;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n\r\n    constructor(\r\n        id: number = undefined,\r\n        message: string = undefined,\r\n        data: Date = undefined,\r\n        lida: boolean = undefined,\r\n        fromUser: number = undefined,\r\n        fromUsernome: string = undefined,\r\n        toUser: number = undefined,\r\n        toUsernome: string = undefined,\r\n        fromUserFoto: string = undefined,\r\n    ) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        if (Utils.isVarInvalid(id) || id <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>ID>>\" + id);\r\n        }\r\n        if (Utils.isStringInvalid(message)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>MESSAGE>>\" + message);\r\n        }\r\n        if (Utils.isVarInvalid(data)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>DATA>>\" + data);\r\n        }\r\n        if (Utils.isVarInvalid(lida)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>LIDA>>\" + lida);\r\n        }\r\n        if (Utils.isVarInvalid(fromUser) || fromUser <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>FROM_USER>>\" + fromUser);\r\n        }\r\n        if (Utils.isStringInvalid(fromUsernome)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>FROM_USER_NOME>>\" + fromUsernome);\r\n        }\r\n        if (Utils.isVarInvalid(toUser) || toUser <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>TO_USER>>\" + toUser);\r\n        }\r\n        if (Utils.isStringInvalid(toUsernome)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>TO_USER_NOME>>\" + toUsernome);\r\n        }\r\n        if (Utils.isStringInvalid(fromUserFoto)) {\r\n            fromUserFoto = Constants.DEFAULT_USER_PHOTO;\r\n        }\r\n        this.id = id;\r\n        this.message = message;\r\n        this.data = data;\r\n        this.lida = lida;\r\n        this.fromUser = fromUser;\r\n        this.fromUsernome = fromUsernome;\r\n        this.toUser = toUser;\r\n        this.toUsernome = toUsernome;\r\n        this.fromUserFoto = fromUserFoto;\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): Message {\r\n        const logHeader = \"User>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        return new Message(\r\n            json.id,\r\n            json.message,\r\n            new Date(json.data),\r\n            json.lida,\r\n            json.fromUser,\r\n            json.fromUsernome,\r\n            json.toUser,\r\n            json.toUsernome,\r\n            json.fromUserFoto\r\n        );\r\n    }\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage, Constants } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class Reward {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"Reward>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Fields */\r\n\r\n    private id: number;\r\n    private valor: number;\r\n    private nome: string;\r\n    private foto: string;\r\n    private descricao: string;\r\n    private quantidade: number;\r\n    private ativo: boolean;\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Getters */\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {string}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    /**\r\n     * Getter $cost\r\n     * @return {number}\r\n     */\r\n    public getValor(): number {\r\n        return this.valor;\r\n    }\r\n\r\n    /**\r\n     * Getter $name\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    /**\r\n     * Getter $image\r\n     * @return {string}\r\n     */\r\n    public getFoto(): string {\r\n        return this.foto;\r\n    }\r\n\r\n    /**\r\n     * Getter $description\r\n     * @return {string}\r\n     */\r\n    public getDescricao(): string {\r\n        return this.descricao;\r\n    }\r\n\r\n    /**\r\n     * Getter $quantidade\r\n     * @return {number}\r\n     */\r\n    public getQuantidade(): number {\r\n        return this.quantidade;\r\n    }\r\n\r\n    /**\r\n     * Getter $ativo\r\n     * @return {boolean}\r\n     */\r\n    public isAtivo(): boolean {\r\n        return this.ativo;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Setters */\r\n\r\n\r\n    /**\r\n     * Setter $ativo\r\n     * @param {boolean} value\r\n     */\r\n    public setAtivo(value: boolean) {\r\n        this.ativo = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $id\r\n     * @param {number} value\r\n     */\r\n    public setId(value: number) {\r\n        this.id = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $valor\r\n     * @param {number} value\r\n     */\r\n    public setValor(value: number) {\r\n        this.valor = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        this.nome = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $foto\r\n     * @param {string} value\r\n     */\r\n    public setFoto(value: string) {\r\n        this.foto = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $descricao\r\n     * @param {string} value\r\n     */\r\n    public setDescricao(value: string) {\r\n        this.descricao = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $quantidade\r\n     * @param {number} value\r\n     */\r\n    public setQuantidade(value: number) {\r\n        this.quantidade = value;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public constructor(\r\n        id: number = undefined,\r\n        valor: number = undefined,\r\n        nome: string = undefined,\r\n        descricao: string = undefined,\r\n        foto: string = undefined,\r\n        quantidade: number = undefined,\r\n        ativo: boolean = undefined) {\r\n        if (Utils.isVarInvalid(foto)) {\r\n            foto = Constants.DEFAULT_REWARD_PHOTO;\r\n        }\r\n        this.id = id;\r\n        this.valor = valor;\r\n        this.nome = nome;\r\n        this.descricao = descricao;\r\n        this.foto = \"https://mdlzplusstorage.blob.core.windows.net/premio/\" + id;\r\n        this.quantidade = quantidade;\r\n        this.ativo = ativo;\r\n\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): Reward {\r\n        const logHeader = \"Reward>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        let id = json.id;\r\n        let nome = json.nome;\r\n        let valor = json.valor;\r\n        let descricao = json.descricao;\r\n        let foto = json.foto;\r\n        let quantidade = json.quantidade;\r\n        let ativo = json.ativo\r\n        return new Reward(id, valor, nome, descricao, foto, quantidade, ativo);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorType, ErrorMessage } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class Schooling {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"Schooling>>\"\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public description: string;\r\n    public id: number;\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(id: number = undefined, description: string = undefined) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        if (Utils.isVarInvalid(id) || id <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + id);\r\n        }\r\n        if (Utils.isStringInvalid(description)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + description);\r\n        }\r\n        this.id = id;\r\n        this.description = description;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\nimport { Factory } from './Factory';\r\n\r\nexport class Section {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"Section>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private id: number;\r\n    private fabricaId: number;\r\n    private nome: string;\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $secaoId\r\n     * @return {number}\r\n     */\r\n    public getFabricaId(): number {\r\n        return this.fabricaId;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $nome\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $id\r\n     * @param {number} value\r\n     */\r\n    public setId(value: number) {\r\n        const logHeader = this.logHeader + \"setId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + value);\r\n        }\r\n        this.id = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $fabricaId\r\n     * @param {number} value\r\n     */\r\n    public setFabricaId(value: number) {\r\n        const logHeader = this.logHeader + \"setFabricaId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + value);\r\n        }\r\n        this.fabricaId = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        const logHeader = this.logHeader + \"setNome>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + value);\r\n        }\r\n        this.nome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public constructor(fabricaId: number, nome: string, id: number = undefined) {\r\n        const logHeader = this.logHeader + \"castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(fabricaId) || fabricaId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>FABRICA>>\" + fabricaId);\r\n        }\r\n        if (Utils.isStringInvalid(nome)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"NOME>>\" + nome);\r\n        }\r\n        this.id = id;\r\n        this.fabricaId = fabricaId;\r\n        this.nome = nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): Section {\r\n        const logHeader = \"Section>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        let id = json.id;\r\n        let fabricaId = json.fabricaId;\r\n        let nome = json.nome;\r\n        return new Section(fabricaId, nome, id);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { User } from './User';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage } from 'src/commons/Constants';\r\nimport { isArray } from 'util';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class Team {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader = \"Team>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Fields */\r\n\r\n    private id: number;\r\n    private liderId: number;\r\n    private nome: string;\r\n    private membros: Array<User>;\r\n    private numMembros: number;\r\n    private liderNome\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Getters */\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    /**\r\n     * Getter $liderId\r\n     * @return {number}\r\n     */\r\n    public getLiderId(): number {\r\n        return this.liderId;\r\n    }\r\n\r\n    /**\r\n     * Getter $nome\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    /**\r\n     * Getter $liderNome\r\n     * @return {string}\r\n     */\r\n    public getLiderNome(): string {\r\n        return this.liderNome;\r\n    }\r\n\r\n    /**\r\n     * Getter $membros\r\n     * @return {Array<User>}\r\n     */\r\n    public getMembros(): Array<User> {\r\n        return this.membros;\r\n    }\r\n\r\n    public getMembrosCount(): number {\r\n        if(Utils.isVarInvalid(this.numMembros)){\r\n            let membros: Array<number> = new Array<number>();\r\n            for (let membro of this.membros) {\r\n                membros.push(membro.getId());\r\n            }\r\n            return membros.length;\r\n        }\r\n        else{\r\n            return this.numMembros;\r\n        }\r\n    }\r\n\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Setters */\r\n\r\n    /**\r\n     * Setter $id\r\n     * @param {number} value\r\n     */\r\n    public setId(value: number) {\r\n        this.id = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $liderId\r\n     * @param {number} value\r\n     */\r\n    public setLiderId(value: number) {\r\n        this.liderId = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {string} value\r\n     */\r\n    public setNome(value: string) {\r\n        this.nome = value;\r\n    }\r\n\r\n    /**\r\n     * Setter $membros\r\n     * @param {Array<User>} value\r\n     */\r\n    public setMembros(value: Array<User>) {\r\n        this.membros = value;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public constructor(\r\n        nome: string = undefined,\r\n        membros: Array<User> = undefined,\r\n        liderId: number = undefined,\r\n        numMembros: number = undefined,\r\n        liderNome: string = undefined,\r\n        id: number = undefined\r\n        ) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        Utils.log(logHeader);\r\n        \r\n        this.nome = nome;\r\n        this.id = id;\r\n        this.liderId = liderId;\r\n        this.membros = membros;\r\n        this.numMembros = numMembros;\r\n        this.liderNome = liderNome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): Team {\r\n        const logHeader = \"Team>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        let id = json.id;\r\n        let nome = json.nome;\r\n        let liderId = json.liderId;\r\n        let membros: Array<User> = new Array<User>();\r\n        let numMembros = json.numMembros;\r\n        let liderNome = json.liderNome\r\n        if (json.membros != null) {\r\n            for (let stringUser of json.membros) {\r\n                membros.push(User.castFromJSON(stringUser));\r\n            }\r\n        }\r\n        return new Team(nome, membros, liderId, numMembros, liderNome, id);\r\n    }\r\n\r\n\r\n}","import { UserType, ErrorMessage, Constants } from 'src/commons/Constants';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { stringify } from '@angular/core/src/util';\r\nimport { Line } from './Line';\r\nimport { Factory } from './Factory';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class User {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader: string = \"User>>\"\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Fields */\r\n\r\n    private admin: Boolean;\r\n    private ativo: Boolean;\r\n    private email: string;\r\n    private finalizado: Boolean;\r\n    private id: number;\r\n    private linhaId: number;\r\n    private linha: Line;\r\n    private matricula: string;\r\n    private nome: string;\r\n    private senha: string;\r\n    private token: string;\r\n    private saldo: number;\r\n    private foto: string;\r\n    public checked: Boolean;\r\n    private linhaNome: string;\r\n    private secaoNome: string;\r\n    private fabricaNome: string;\r\n    private equipeId: number;\r\n    private equipeNome: string;\r\n    private telefoneCelular: string;\r\n    private grauEscolaridade: string;\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Getters */\r\n\r\n    /**\r\n     * Getter $ativo\r\n     * @return {Boolean}\r\n     */\r\n    public isAtivo(): Boolean {\r\n        return this.ativo;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $admin\r\n     * @return {Boolean}\r\n     */\r\n    public isAdmin(): Boolean {\r\n        return this.admin;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $finalizado\r\n     * @return {Boolean}\r\n     */\r\n    public isFinalizado(): Boolean {\r\n        return this.finalizado;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $id\r\n     * @return {number}\r\n     */\r\n    public getId(): number {\r\n        return this.id;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $token\r\n     * @return {string}\r\n     */\r\n    public getToken(): string {\r\n        return this.token;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $tipo\r\n     * @return {UserType}\r\n     */\r\n    public getTipo(): UserType {\r\n        if (this.admin) {\r\n            return UserType.ADMINISTRATOR;\r\n        }\r\n        else {\r\n            return UserType.GENERIC;\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $nome\r\n     * @return {string}\r\n     */\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $senha\r\n     * @return {string}\r\n     */\r\n    public getSenha(): string {\r\n        return this.senha;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $linhaNome\r\n     * @return {string}\r\n     */\r\n    public getLinhaNome(): string {\r\n        return this.linhaNome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $secaoNome\r\n     * @return {string}\r\n     */\r\n    public getSecaoNome(): string {\r\n        return this.secaoNome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $fabricaNome\r\n     * @return {string}\r\n     */\r\n    public getFabricaNome(): string {\r\n        return this.fabricaNome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $matricula\r\n     * @return {string}\r\n     */\r\n    public getMatricula(): string {\r\n        return this.matricula;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $linhaId\r\n     * @return {number}\r\n     */\r\n    public getLinhaId(): number {\r\n        return this.linhaId;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $email\r\n     * @return {string}\r\n     */\r\n    public getEmail(): string {\r\n        return this.email;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $saldo\r\n     * @return {number}\r\n     */\r\n    public getSaldo(): number {\r\n        return this.saldo;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $foto\r\n     * @return {string}\r\n     */\r\n    public getFoto(): string {\r\n        return this.foto;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $equipeId\r\n     * @return {number}\r\n     */\r\n    public getEquipeId(): number {\r\n        return this.equipeId;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $equipeNome\r\n     * @return {string}\r\n     */\r\n    public getEquipeNome(): string {\r\n        return this.equipeNome;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $telefone\r\n     * @return {string}\r\n     */\r\n    public getTelefone(): string {\r\n        return this.telefoneCelular;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Getter $escolaridade\r\n     * @return {string}\r\n     */\r\n    public getEscolaridade(): string {\r\n        return this.grauEscolaridade;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region  Setters */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $admin\r\n     * @param {Boolean} value\r\n     */\r\n    public setAdmin(value: Boolean) {\r\n        const logHeader = this.logHeader + \"setAdmin>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + value)\r\n        }\r\n        this.admin = value;\r\n    }\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $ativo\r\n     * @param {Boolean} value\r\n     */\r\n    public setAtivo(value: Boolean) {\r\n        const logHeader = this.logHeader + \"setAtivo>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + value)\r\n        }\r\n        this.ativo = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $nome\r\n     * @param {String} value\r\n     */\r\n    public setNome(value: string) {\r\n        const logHeader = this.logHeader + \"setNome>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + value)\r\n        }\r\n        this.nome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $linhaId\r\n     * @param {number} value\r\n     */\r\n    public setLinhaId(value: number) {\r\n        const logHeader = this.logHeader + \"setLinhaId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"LINHA_ID>>\" + value);\r\n        }\r\n        this.linhaId = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $email\r\n     * @param {string} value\r\n     */\r\n    public setEmail(value: string) {\r\n        const logHeader = this.logHeader + \"setEmail>>\";\r\n        if (Utils.isEmailInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_EMAIL + \"EMAIL>>\" + JSON.stringify(value));\r\n        }\r\n        this.email = value.toLowerCase();\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $matricula\r\n     * @param {string} value\r\n     */\r\n    public setMatricula(value: string) {\r\n        const logHeader = this.logHeader + \"setMatricula>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"MATRICULA>>\" + JSON.stringify(value));\r\n        }\r\n        this.matricula = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $saldo\r\n     * @param {number} value\r\n     */\r\n    public setSaldo(value: number) {\r\n        const logHeader = this.logHeader + \"setSaldo>>\";\r\n        if (Utils.isVarInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"SALDO>>\" + JSON.stringify(value));\r\n        }\r\n        this.saldo = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $saldo\r\n     * @param {number} value\r\n     */\r\n    public addSaldo(value: number) {\r\n        const logHeader = this.logHeader + \"addSaldo>>\";\r\n        if (Utils.isVarInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"SALDO>>\" + JSON.stringify(value));\r\n        }\r\n        this.saldo += value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $saldo\r\n     * @param {number} value\r\n     */\r\n    public removeSaldo(value: number) {\r\n        const logHeader = this.logHeader + \"removeSaldo>>\";\r\n        if (Utils.isVarInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"SALDO>>\" + JSON.stringify(value));\r\n        }\r\n        this.saldo -= value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $foto\r\n     * @param {string} value\r\n     */\r\n    public setFoto(value: string) {\r\n        const logHeader = this.logHeader + \"setFoto>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            value = Constants.DEFAULT_USER_PHOTO;\r\n        }\r\n        this.foto = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $equipeId\r\n     * @param {number} value\r\n     */\r\n    public setEquipeId(value: number) {\r\n        const logHeader = this.logHeader + \"setEquipeId>>\";\r\n        if (Utils.isVarInvalid(value) || value <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + JSON.stringify(value));\r\n        }\r\n        this.equipeId = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $equipeNome\r\n     * @param {string} value\r\n     */\r\n    public setEquipeNome(value: string) {\r\n        const logHeader = this.logHeader + \"setEquipeNome>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + JSON.stringify(value));\r\n        }\r\n        this.equipeNome = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $telefone\r\n     * @param {string} value\r\n     */\r\n    public setTelefone(value: string) {\r\n        const logHeader = this.logHeader + \"setTelefone>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + JSON.stringify(value));\r\n        }\r\n        this.telefoneCelular = value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $senha\r\n     * @param {string} value\r\n     */\r\n    public setSenha(value: string) {\r\n        const logHeader = this.logHeader + \"setSenha>>\";\r\n        this.senha = value;\r\n    }\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /**\r\n     * Setter $escolaridade\r\n     * @param {string} value\r\n     */\r\n    public setEscolaridade(value: string) {\r\n        const logHeader = this.logHeader + \"setEscolaridade>>\";\r\n        if (Utils.isStringInvalid(value)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>\" + JSON.stringify(value));\r\n        }\r\n        this.grauEscolaridade = value;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(\r\n        admin: Boolean = undefined,\r\n        ativo: Boolean = undefined,\r\n        email: string = undefined,\r\n        finalizado: Boolean = undefined,\r\n        id: number = undefined,\r\n        linhaId: number = undefined,\r\n        matricula: string = undefined,\r\n        nome: string = undefined,\r\n        senha: string = undefined,\r\n        token: string = undefined,\r\n        saldo: number = undefined,\r\n        foto: string = undefined,\r\n        linhaNome: string = undefined,\r\n        secaoNome: string = undefined,\r\n        fabricaNome: string = undefined,\r\n        equipeId: number = undefined,\r\n        equipeNome: string = undefined,\r\n        telefone: string = undefined,\r\n        escolaridade: string = undefined,\r\n    ) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        if (Utils.isVarInvalid(admin)) {\r\n            this.admin = false;\r\n        }\r\n        else {\r\n            this.admin = admin;\r\n        }\r\n\r\n        if (Utils.isVarInvalid(ativo)) {\r\n            this.ativo = false;\r\n        }\r\n        else {\r\n            this.ativo = ativo;\r\n        }\r\n\r\n        // if (Utils.isStringInvalid(email)) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"EMAIL>>\" + email);\r\n        // }\r\n\r\n        if (!Utils.isStringInvalid(email)) {\r\n            email = email.toLowerCase();\r\n        }\r\n\r\n        if (Utils.isVarInvalid(finalizado)) {\r\n            this.finalizado = false;\r\n        }\r\n        else {\r\n            this.finalizado = finalizado;\r\n        }\r\n\r\n        // if (Utils.isVarInvalid(id)) {\r\n        //     throw new Error(logHeader + ErrorType.INVALID_STRING + \"ID>>\" + id);\r\n        // }\r\n\r\n        // if (Utils.isVarInvalid(linhaId)) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"LINHA_ID>>\" + linhaId);\r\n        // }\r\n\r\n        // if (Utils.isStringInvalid(matricula)) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"MATRICULA>>\" + matricula);\r\n        // }\r\n\r\n        // if (Utils.isStringInvalid(nome)) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"NOME>>\" + nome);\r\n        // }\r\n\r\n        // if (Utils.isStringInvalid(senha)) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_STRING + \"SENHA>>\" + senha);\r\n        // }\r\n\r\n        // if (Utils.isStringInvalid(token)) {\r\n        //     throw new Error(logHeader + ErrorType.INVALID_STRING + \"TOKEN>>\" + token);\r\n        // }\r\n\r\n        // if (Utils.isVarInvalid(saldo)) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"SALDO>>\" + saldo);\r\n        // }\r\n        if (Utils.isStringInvalid(foto)) {\r\n            foto = Constants.DEFAULT_USER_PHOTO;\r\n        }\r\n\r\n        this.email = email;\r\n        this.id = id;\r\n        this.linhaId = linhaId;\r\n        this.matricula = matricula;\r\n        this.nome = nome;\r\n        this.senha = senha;\r\n        this.token = token;\r\n        this.saldo = saldo;\r\n        this.foto = \"https://mdlzplusstorage.blob.core.windows.net/user/\" + id;\r\n        this.linhaNome = linhaNome;\r\n        this.secaoNome = secaoNome;\r\n        this.fabricaNome = fabricaNome;\r\n        this.equipeId = equipeId;\r\n        this.equipeNome = equipeNome;\r\n        this.telefoneCelular = telefone;\r\n        this.grauEscolaridade = escolaridade;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static castFromJSON(input: any): User {\r\n        const logHeader = \"User>>castFromJSON>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(input)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"INPUT>>\" + input);\r\n        }\r\n        let json: any;\r\n        if (input.constructor.name === \"string\" || input.constructor.name === \"String\") {\r\n            json = JSON.parse(input);\r\n        }\r\n        else {\r\n            json = input\r\n        }\r\n        return new User(\r\n            json.admin,\r\n            json.ativo,\r\n            json.email,\r\n            json.finalizado,\r\n            json.id,\r\n            json.linhaId,\r\n            json.matricula,\r\n            json.nome,\r\n            json.senha,\r\n            json.token,\r\n            json.saldo,\r\n            json.foto,\r\n            json.linhaNome,\r\n            json.secaoNome,\r\n            json.fabricaNome,\r\n            json.equipeId,\r\n            json.equipeNome,\r\n            json.telefoneCelular,\r\n            json.grauEscolaridade\r\n        );\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { User } from 'src/models/User';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { ErrorMessage, Endpoint, Constants, ErrorType, ToastText } from 'src/commons/Constants';\r\nimport { Reward } from 'src/models/Reward';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { IfStmt } from '@angular/compiler';\r\nimport { Factory } from 'src/models/Factory';\r\nimport { Line } from 'src/models/Line';\r\nimport { Section } from 'src/models/Section';\r\nimport { ExtractItem } from 'src/models/ExtractItem';\r\nimport { Activity } from 'src/models/Activity';\r\nimport { Team } from 'src/models/Team';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoaderService } from '../loader-service/loader.service';\r\nimport { CartItem } from 'src/models/CartItem';\r\nimport { Invitation } from 'src/models/Invitation';\r\nimport { Message } from 'src/models/Message';\r\nimport { ChartItem } from 'src/models/ChartItem';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class BackendApiProvider {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private readonly logHeader: string = \"BackendApiProvider>>\";\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Fields */\r\n\r\n    private url: string = Endpoint.URL;\r\n    private loggedUser: User;\r\n    private pageSize: number = 20;\r\n\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Getters */\r\n\r\n    public getLoggedUser(): User {\r\n        const logHeader = this.logHeader + \"getLoggedUser>>\";\r\n        Utils.log(logHeader);\r\n        return this.loggedUser\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Setters */\r\n\r\n    public setLoggedUser(user: User) {\r\n        const logHeader = this.logHeader + \"setLoggedUser>>\";\r\n        Utils.log(logHeader);\r\n        this.authService.logout();\r\n        this.loggedUser = user;\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    constructor(\r\n        public http: Http,\r\n        private authService: AuthenticationService,\r\n        private router: Router,\r\n        private loader: LoaderService,\r\n        private utils: Utils\r\n    ) {\r\n        const logHeader = this.logHeader + \"constructor>>\";\r\n        Utils.log(logHeader);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Utils */\r\n\r\n    private getHeaders(needsToken: boolean = true): Observable<any> {\r\n        return new Observable(obs => {\r\n            let headers = new Headers;\r\n            headers.append('Content-Type', 'application/json');\r\n            if (needsToken) {\r\n                this.authService.getToken().subscribe(token => {\r\n                    if (token)\r\n                        headers.append(`token`, token);\r\n\r\n                    return obs.next(headers);\r\n                });\r\n            }\r\n            else {\r\n                return obs.next(headers);\r\n            }\r\n        });\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region HTTP Methods */\r\n\r\n    private put(endpoint: Endpoint, data: any, needsToken: boolean = true): Promise<any> {\r\n        const logHeader = this.logHeader + \"put>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(endpoint as string)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ENDPOINT + endpoint);\r\n        }\r\n        if (Utils.isVarInvalid(this.loggedUser)) {\r\n            this.loggedUser = this.authService.loggedUser;\r\n        }\r\n        this.loader.present();\r\n        return new Promise((resolve, reject) => {\r\n            this.getHeaders(needsToken).subscribe(headers => {\r\n                const options = {\r\n                    headers: headers\r\n                };\r\n                if (!Utils.isVarInvalid(data) && data.constructor.name === \"FormData\") {\r\n                    options.headers.delete('Content-Type');\r\n                }\r\n                this.http.put(this.url + '/' + endpoint, data, options).subscribe(\r\n                    (result: any) => {\r\n                        resolve(result);\r\n                    },\r\n                    (error) => {\r\n                        if (error.status == 403 || error.status == 401) {\r\n                            this.utils.simpleToastError(ToastText.LOGIN_EXPIRED);\r\n                            this.setLoggedUser(undefined);\r\n                            this.router.navigate([`/login`]);\r\n                        }\r\n                        else if (error.status == 0) {\r\n                            this.utils.simpleToastError(ToastText.COMMUNICATION_FAILURE);\r\n                        }\r\n                        else {\r\n                            reject(error);\r\n                        }\r\n                    }, () => this.loader.dismiss());\r\n            });\r\n        });\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private post(endpoint: Endpoint, data: any, needsToken: boolean = true): Promise<any> {\r\n        const logHeader = this.logHeader + \"post>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(endpoint as string)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ENDPOINT + endpoint);\r\n        }\r\n        if (Utils.isVarInvalid(this.loggedUser)) {\r\n            this.loggedUser = this.authService.loggedUser;\r\n        }\r\n        this.loader.present();\r\n        return new Promise((resolve, reject) => {\r\n            this.getHeaders(needsToken).subscribe(headers => {\r\n                const options = {\r\n                    headers: headers\r\n                };\r\n                this.http.post(this.url + '/' + endpoint, data, options).subscribe(\r\n                    (result: any) => {\r\n                        resolve(result);\r\n                    },\r\n                    (error) => {\r\n                        if (error.status == 403 || error.status == 401) {\r\n                            this.utils.simpleToastError(ToastText.LOGIN_EXPIRED);\r\n                            this.setLoggedUser(undefined);\r\n                            this.router.navigate([`/login`]);\r\n                        }\r\n                        else if (error.status == 0) {\r\n                            this.utils.simpleToastError(ToastText.COMMUNICATION_FAILURE);\r\n                        }\r\n                        else {\r\n                            reject(error);\r\n                        }\r\n                    }, () => this.loader.dismiss());\r\n            });\r\n        });\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private get(endpoint: Endpoint, needsToken: boolean = true) {\r\n        const logHeader = this.logHeader + \"get>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(endpoint as string)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ENDPOINT + endpoint);\r\n        }\r\n        if (Utils.isVarInvalid(this.loggedUser)) {\r\n            this.loggedUser = this.authService.loggedUser;\r\n        }\r\n        this.loader.present();\r\n        return new Promise((resolve, reject) => {\r\n            this.getHeaders(needsToken).subscribe(headers => {\r\n                const options = {\r\n                    headers: headers\r\n                };\r\n\r\n                this.http.get(this.url + '/' + endpoint, options).subscribe(\r\n                    (result: any) => {\r\n                        resolve(result);\r\n                    },\r\n                    (error) => {\r\n                        if (error.status == 403 || error.status == 401) {\r\n                            this.utils.simpleToastError(ToastText.LOGIN_EXPIRED);\r\n                            this.setLoggedUser(undefined);\r\n                            this.router.navigate([`/login`]);\r\n                        }\r\n                        else if (error.status == 0) {\r\n                            this.utils.simpleToastError(ToastText.COMMUNICATION_FAILURE);\r\n                        }\r\n                        else {\r\n                            reject(error);\r\n                        }\r\n                    }, () => this.loader.dismiss());\r\n            });\r\n        });\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    private delete(endpoint: Endpoint, needsToken: boolean = true) {\r\n        const logHeader = this.logHeader + \"delete>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(endpoint as string)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ENDPOINT + endpoint);\r\n        }\r\n        if (Utils.isVarInvalid(this.loggedUser)) {\r\n            this.loggedUser = this.authService.loggedUser;\r\n        }\r\n        this.loader.present();\r\n        return new Promise((resolve, reject) => {\r\n            this.getHeaders(needsToken).subscribe(headers => {\r\n                const options = {\r\n                    headers: headers\r\n                };\r\n\r\n                this.http.delete(this.url + '/' + endpoint, options).subscribe(\r\n                    (result: any) => {\r\n                        resolve(result);\r\n                    },\r\n                    (error) => {\r\n                        if (error.status == 403 || error.status == 401) {\r\n                            this.utils.simpleToastError(ToastText.LOGIN_EXPIRED);\r\n                            this.setLoggedUser(undefined);\r\n                            this.router.navigate([`/login`]);\r\n                        }\r\n                        else if (error.status == 0) {\r\n                            this.utils.simpleToastError(ToastText.COMMUNICATION_FAILURE);\r\n                        }\r\n                        else {\r\n                            reject(error);\r\n                        }\r\n                    }, () => this.loader.dismiss());\r\n            });\r\n        });\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Registration Methods */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async generateConfirmationCode(user: User) {\r\n        const logHeader = this.logHeader + \"generateConfirmationCode>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(user)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_USER + JSON.stringify(user));\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve({ status: 200 });\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.GENERATE_CONFIRMATION_CODE + user.getId(), null);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async validateConfirmationCode(user: User, code: string) {\r\n        const logHeader = this.logHeader + \"validateConfirmationCode>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(user)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_USER + \">>\" + JSON.stringify(user));\r\n        }\r\n        if (Utils.isStringInvalid(code)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>CODE>>\" + code);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve({ status: 200 });\r\n            })\r\n        }\r\n        else {\r\n            return JSON.parse((await this.put(Endpoint.VALIDATE_CONFIRMATION_CODE + user.getId() + '/' + code, null) as any)._body);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async userRegister(form: any) {\r\n        const logHeader = this.logHeader + \"userRegister>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(form) || Utils.isStringInvalid(form.name) || Utils.isStringInvalid(form.email) || Utils.isStringInvalid(form.registration) || Utils.isStringInvalid(form.factory) || Utils.isStringInvalid(form.line) || Utils.isStringInvalid(form.password)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_FORM + JSON.stringify(form));\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve({ status: 200 });\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.USER_REGISTER_USER, new User(false, true, form.email.toLowerCase(), false, null, form.line, form.registration, form.name, form.password, null, null));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async adminRegister(form: any) {\r\n        const logHeader = this.logHeader + \"adminRegister>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(form) || Utils.isVarInvalid(form.userIsAdmin) || Utils.isVarInvalid(form.userActive) || Utils.isStringInvalid(form.name) || Utils.isStringInvalid(form.email) || Utils.isStringInvalid(form.registration) || Utils.isStringInvalid(form.factory) || Utils.isStringInvalid(form.line)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_FORM + JSON.stringify(form));\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve({ status: 200 });\r\n            })\r\n        }\r\n        else {\r\n            return this.post(Endpoint.ADMIN_REGISTER_USER, new User(form.userIsAdmin, form.userActive, form.email.toLowerCase(), false, null, form.line.getId(), form.registration, form.name, null, null, null));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getFactories() {\r\n        const logHeader = this.logHeader + \"getFactories>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([new Factory(\"Chocolate\"), new Factory(\"Balas e Gomas\"), new Factory(\"Dry Mix\"), new Factory(\"Queijo\"), new Factory(\"Administrativo\"), new Factory(\"R&D\")]);\r\n            })\r\n        }\r\n        else {\r\n            let response = (await this.get(Endpoint.FACTORIES, false)) as any;\r\n            if (!Utils.isVarInvalid(response)) {\r\n                let factories: Array<Factory> = new Array<Factory>();\r\n                for (let factory of JSON.parse(response._body)) {\r\n                    factories.push(Factory.castFromJSON(factory))\r\n                }\r\n                return factories;\r\n            }\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getSections(factory: number = undefined) {\r\n        const logHeader = this.logHeader + \"getSections>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([new Section(1, \"Chocolate\"), new Section(2, \"Balas e Gomas\"), new Section(3, \"Dry Mix\"), new Section(4, \"Queijo\"), new Section(5, \"Administrativo\"), new Section(6, \"R&D\")]);\r\n            })\r\n        }\r\n        else {\r\n            let response = (await this.get(Endpoint.SECTIONS, false)) as any;\r\n            if (!Utils.isVarInvalid(response)) {\r\n                let sections: Array<Section> = new Array<Section>();\r\n                for (let section of JSON.parse(response._body)) {\r\n                    if (section.fabricaId == factory || Utils.isVarInvalid(factory)) {\r\n                        sections.push(Section.castFromJSON(section))\r\n                    }\r\n                }\r\n                return sections;\r\n            }\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getLines(section: number = undefined) {\r\n        const logHeader = this.logHeader + \"getLine>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([new Line(1, 'Linha 1'), new Line(2, 'Linha 1'), new Line(3, 'Linha 1'), new Line(4, 'Linha 1'), new Line(5, 'Linha 1'), new Line(6, 'Linha 1')]);\r\n            })\r\n        }\r\n        else {\r\n            let response = (await this.get(Endpoint.LINES, false)) as any;\r\n            if (!Utils.isVarInvalid(response)) {\r\n                let lines: Array<Line> = new Array<Line>();\r\n                for (let line of JSON.parse(response._body)) {\r\n                    if (line.secaoId == section || Utils.isVarInvalid(section)) {\r\n                        lines.push(Line.castFromJSON(line))\r\n                    }\r\n                }\r\n                return lines;\r\n            }\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getShifts(factory: string, line: string) {\r\n        const logHeader = this.logHeader + \"getShift>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(factory)) {\r\n            throw new Error(this.logHeader + ErrorMessage.INVALID_FACTORY + factory);\r\n        }\r\n        if (Utils.isStringInvalid(line)) {\r\n            throw new Error(this.logHeader + ErrorMessage.INVALID_LINE + line);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(['1º Turno', '2º Turno', '3º Turno']);\r\n            })\r\n        }\r\n        else {\r\n            return this.post(Endpoint.SHIFTS, { factory: factory, line: line });\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getManagers(factory: string, line: string) {\r\n        const logHeader = this.logHeader + \"getManagers>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(factory)) {\r\n            throw new Error(this.logHeader + ErrorMessage.INVALID_FACTORY + factory);\r\n        }\r\n        if (Utils.isStringInvalid(line)) {\r\n            throw new Error(this.logHeader + ErrorMessage.INVALID_LINE + line);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(['Douglas Schmitz', 'Jeferson Melchioretto', 'Alexandre Silva', 'João Oliveira']);\r\n            })\r\n        }\r\n        else {\r\n            return this.post(Endpoint.MANAGERS, { factory: factory, line: line });\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Login Methods */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public login(login: string, password: string) {\r\n        const logHeader = this.logHeader + \"login>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(login)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>LOGIN>>\" + login);\r\n        }\r\n        if (Utils.isStringInvalid(password)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>PASSWORD>>\" + password);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Observable((observer) => {\r\n                let user = new User(true, true, login, true, 1, 1, \"123456\", \"Nome do usuário logado\", \"senha\", \"token\", 0, null, \"Linha\", \"Seção\", \"Fábrica\", 1, \"Equipe\", \"987456312654\", \"Ensino superior completo\");\r\n                observer.next({ status: 200, _body: user });\r\n                observer.complete();\r\n            })\r\n        }\r\n        login = login.toLowerCase();\r\n        let headers = new Headers;\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Authorization', 'Basic ' + window.btoa(login + ':' + password));\r\n        const options = {\r\n            headers: headers\r\n        };\r\n\r\n        return this.http.get(this.url + '/' + Endpoint.LOGIN, options);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public tokenLogin() {\r\n        const logHeader = this.logHeader + \"tokenLogin>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(this.authService.loggedUser)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_USER + \">>\" + this.authService.loggedUser);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            this.get(Endpoint.LOGIN).then((response: any) => {\r\n                let user = User.castFromJSON(response._body);\r\n                this.authService.loggedUser = user;\r\n                this.authService.setAuthObject(user);\r\n                this.setLoggedUser(user);\r\n                resolve(user);\r\n            }).catch((error) => reject(error));\r\n        })\r\n\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async recovery(form: any) {\r\n        const logHeader = this.logHeader + \"recoverPassword>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(form) || Utils.isStringInvalid(form.email) || Utils.isStringInvalid(form.registration)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"FORM>>\" + JSON.stringify(form));\r\n        }\r\n        return this.put(Endpoint.RECOVERY + '?email=' + form.email.toLowerCase() + '&matricula=' + form.registration.toLowerCase(), null, false);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Members Methods */\r\n\r\n    public async resetUserPassword(user: User) {\r\n        const logHeader = this.logHeader + \"resetUserPassword>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(user)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_USER + \">>\" + JSON.stringify(user));\r\n        }\r\n        return this.put(Endpoint.RESET_USER_PASSWORD + user.getId(), null);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async modifyUser(user: User) {\r\n        const logHeader = this.logHeader + \"modifyUser>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve({ status: 200 });\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.MODIFY_USER + user.getId(), user);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getUsersWithoutPhoto(page: number) {\r\n        const logHeader = this.logHeader + \"getUsersWithoutPhoto>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(page) || page <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>PAGE>>\" + page);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new User(false, true, \"teste1@mdlz.com\", false, 1, 1, \"1\", \"João Schmitz\", \"123456\", null, 800, null),\r\n                    new User(false, false, \"teste2@mdlz.com\", false, 2, 1, \"2\", \"João Silva\", \"123456\", null, 850, null),\r\n                    new User(true, true, \"teste3@mdlz.com\", false, 3, 1, \"3\", \"Roberto Schmitz\", \"123456\", null, 900, null),\r\n                    new User(false, true, \"teste4@mdlz.com\", false, 4, 1, \"4\", \"Roberto Silva\", \"123456\", null, 950, null),\r\n                    new User(false, false, \"teste5@mdlz.com\", false, 5, 1, \"5\", \"Fernando Schmitz\", \"123456\", null, 1000, null)\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let users: Array<User> = new Array<User>();\r\n            let response = JSON.parse(((await this.post(Endpoint.GET_USERS,\r\n                {\r\n                    \"pageNumber\": page,\r\n                    \"pageSize\": this.pageSize\r\n                }\r\n            )) as any)._body);\r\n            const totalPages = response.totalPages;\r\n            for (let rawUser of response.list) {\r\n                let user = User.castFromJSON(rawUser);\r\n                users.push(user);\r\n            }\r\n            return { users: users, totalPages: totalPages };\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getUsers(page: number) {\r\n        const logHeader = this.logHeader + \"getUsers>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(page) || page <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>PAGE>>\" + page);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new User(false, true, \"teste1@mdlz.com\", false, 1, 1, \"1\", \"João Schmitz\", \"123456\", null, 800, null),\r\n                    new User(false, false, \"teste2@mdlz.com\", false, 2, 1, \"2\", \"João Silva\", \"123456\", null, 850, null),\r\n                    new User(true, true, \"teste3@mdlz.com\", false, 3, 1, \"3\", \"Roberto Schmitz\", \"123456\", null, 900, null),\r\n                    new User(false, true, \"teste4@mdlz.com\", false, 4, 1, \"4\", \"Roberto Silva\", \"123456\", null, 950, null),\r\n                    new User(false, false, \"teste5@mdlz.com\", false, 5, 1, \"5\", \"Fernando Schmitz\", \"123456\", null, 1000, null)\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let users: Array<User> = new Array<User>();\r\n            let response = JSON.parse(((await this.post(Endpoint.GET_USERS,\r\n                {\r\n                    \"pageNumber\": page,\r\n                    \"pageSize\": this.pageSize\r\n                }\r\n            )) as any)._body);\r\n            const totalPages = response.totalPages;\r\n            for (let rawUser of response.list) {\r\n                let user = User.castFromJSON(rawUser);\r\n                users.push(user);\r\n            }\r\n            return { users: users, totalPages: totalPages };\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async changeUserEnabled(user: User) {\r\n        const logHeader = this.logHeader + \"changeUserEnabled>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve({ status: 200 });\r\n            })\r\n        }\r\n        else {\r\n            if (user.isAtivo()) {\r\n                Utils.log(logHeader + \"DESATIVAR\");\r\n                return this.put(Endpoint.DISABLE_USER + user.getId(), null);\r\n            }\r\n            else {\r\n                Utils.log(logHeader + \"ATIVAR\")\r\n                return this.put(Endpoint.ENABLE_USER + user.getId(), null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Home Methods */\r\n\r\n    public async getPoints(user: User = undefined) {\r\n        const logHeader = this.logHeader + \"getPoints>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(user)) {\r\n            user = this.loggedUser;\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(9753);\r\n            })\r\n        }\r\n        else {\r\n            return Number(((await this.get(Endpoint.GET_POINTS/* + user.getId() */)) as any)._body);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getExtract(page: number) {\r\n        const logHeader = this.logHeader + \"getExtract>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new ExtractItem(new Date(2019, 11, 13, 10, 0, 0, 0), 25, \"Registro correto de ponto\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 15, 30, 0, 0), 100, \"Limpeza de estação de trabalho\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 12, 45, 0, 0), -50, \"Quebrou ferramenta\"),\r\n                    new ExtractItem(new Date(2019, 11, 13, 10, 0, 0, 0), 25, \"Registro correto de ponto\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 15, 30, 0, 0), 100, \"Limpeza de estação de trabalho\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 12, 45, 0, 0), -50, \"Quebrou ferramenta\"),\r\n                    new ExtractItem(new Date(2019, 11, 13, 10, 0, 0, 0), 25, \"Registro correto de ponto\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 15, 30, 0, 0), 100, \"Limpeza de estação de trabalho\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 12, 45, 0, 0), -50, \"Quebrou ferramenta\"),\r\n                    new ExtractItem(new Date(2019, 11, 13, 10, 0, 0, 0), 25, \"Registro correto de ponto\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 15, 30, 0, 0), 100, \"Limpeza de estação de trabalho\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 12, 45, 0, 0), -50, \"Quebrou ferramenta\"),\r\n                    new ExtractItem(new Date(2019, 11, 13, 10, 0, 0, 0), 25, \"Registro correto de ponto\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 15, 30, 0, 0), 100, \"Limpeza de estação de trabalho\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 12, 45, 0, 0), -50, \"Quebrou ferramenta\"),\r\n                    new ExtractItem(new Date(2019, 11, 13, 10, 0, 0, 0), 25, \"Registro correto de ponto\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 15, 30, 0, 0), 100, \"Limpeza de estação de trabalho\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 12, 45, 0, 0), -50, \"Quebrou ferramenta\"),\r\n                    new ExtractItem(new Date(2019, 11, 13, 10, 0, 0, 0), 25, \"Registro correto de ponto\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 15, 30, 0, 0), 100, \"Limpeza de estação de trabalho\"),\r\n                    new ExtractItem(new Date(2019, 11, 10, 12, 45, 0, 0), -50, \"Quebrou ferramenta\")\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let extract: Array<ExtractItem> = new Array<ExtractItem>();\r\n            let response = JSON.parse(((await this.post(Endpoint.GET_EXTRACT,\r\n                {\r\n                    \"pageNumber\": page,\r\n                    \"pageSize\": this.pageSize\r\n                }\r\n            )) as any)._body);\r\n            const totalPages = response.totalPages;\r\n            for (let item of response.list) {\r\n                let extractItem = ExtractItem.castFromJSON(item);\r\n                extract.push(extractItem)\r\n            }\r\n            return { list: extract, totalPages: totalPages };\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Areas Methods */\r\n\r\n    public async createFactory(factory: Factory) {\r\n        const logHeader = this.logHeader + \"createFactory>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(factory.getNome())) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + factory.getNome());\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(factory);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse((await this.post(Endpoint.CREATE_FACTORY, factory) as any)._body);\r\n            return Factory.castFromJSON(response);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async editFactory(factory: Factory) {\r\n        const logHeader = this.logHeader + \"editFactory>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(factory.getNome())) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + factory.getNome());\r\n        }\r\n        if (Utils.isVarInvalid(factory.getId()) || factory.getId() <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>ID>>\" + factory.getId());\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(factory);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse((await this.put(Endpoint.EDIT_FACTORY + factory.getId(), factory) as any)._body);\r\n            return Factory.castFromJSON(response);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async removeFactory(factoryId: number) {\r\n        const logHeader = this.logHeader + \"editFactory>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(factoryId) || factoryId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>ID>>\" + factoryId);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.delete(Endpoint.REMOVE_FACTORY + factoryId);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async createSection(section: Section) {\r\n        const logHeader = this.logHeader + \"createSection>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(section.getNome())) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + section.getNome());\r\n        }\r\n        if (Utils.isVarInvalid(section.getFabricaId()) || section.getFabricaId() <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>FACTORY>>\" + section.getFabricaId());\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(section);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse((await this.post(Endpoint.CREATE_SECTION, section) as any)._body);\r\n            return Section.castFromJSON(response);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async editSection(section: Section) {\r\n        const logHeader = this.logHeader + \"editSection>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(section.getNome())) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + section.getNome());\r\n        }\r\n        if (Utils.isVarInvalid(section.getId()) || section.getId() <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>ID>>\" + section.getId());\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(section);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse((await this.put(Endpoint.EDIT_SECTION + section.getId(), section) as any)._body);\r\n            return Section.castFromJSON(response);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async removeSection(sectionId: number) {\r\n        const logHeader = this.logHeader + \"removeSection>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(sectionId) || sectionId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>ID>>\" + sectionId);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.delete(Endpoint.REMOVE_SECTION + sectionId);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async createLine(line: Line) {\r\n        const logHeader = this.logHeader + \"createLine>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(line.getNome())) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + line.getNome());\r\n        }\r\n        if (Utils.isVarInvalid(line.getSecaoId()) || line.getSecaoId() <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>SECTION>>\" + line.getSecaoId());\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(line);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse((await this.post(Endpoint.CREATE_LINE, line) as any)._body);\r\n            return Line.castFromJSON(response);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async editLine(line: Line) {\r\n        const logHeader = this.logHeader + \"editLine>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(line.getNome())) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + line.getNome());\r\n        }\r\n        if (Utils.isVarInvalid(line.getId()) || line.getId() <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>ID>>\" + line.getId());\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(line);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse((await this.put(Endpoint.EDIT_LINE + line.getId(), line) as any)._body);\r\n            return Line.castFromJSON(response);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async removeLine(lineId: number) {\r\n        const logHeader = this.logHeader + \"removeLine>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(lineId) || lineId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>ID>>\" + lineId);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.delete(Endpoint.REMOVE_LINE + lineId);\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Points Methods */\r\n\r\n    public async getPointsResetSchedule() {\r\n        const logHeader = this.logHeader + \"getPointsResetSchedule>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(new Date(2020, 1, 1, 0, 0, 0, 0));\r\n            })\r\n        }\r\n        else {\r\n            return JSON.parse(((await this.get(Endpoint.RESET_ALL_POINTS)) as any)._body);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async schedulePointsReset(date: Date) {\r\n        const logHeader = this.logHeader + \"schedulePointsReset>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isDatePastOrInvalid(date)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_DATE + \">>\" + date.toUTCString());\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.RESET_ALL_POINTS, date.getTime());\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getActivities(page: number) {\r\n        const logHeader = this.logHeader + \"getActivities>>\";\r\n        Utils.log(logHeader);\r\n        // if (Utils.isVarInvalid(page) || page <= 0) {\r\n        //     throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>PAGE>>\" + page);\r\n        // }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new Activity(150, \"Motivo 1\", \"Liderança\"),\r\n                    new Activity(151, \"Motivo 2\", \"SSMA\"),\r\n                    new Activity(152, \"Motivo 3\", \"MF\"),\r\n                    new Activity(153, \"Motivo 4\", \"IIM\"),\r\n                    new Activity(154, \"Motivo 5\", \"MP\"),\r\n                    new Activity(155, \"Motivo 6\", \"MA\"),\r\n                    new Activity(156, \"Motivo 7\", \"QM\"),\r\n                    new Activity(157, \"Motivo 8\", \"WPI\")\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let activities: Array<Activity> = new Array<Activity>();\r\n            if (Utils.isVarInvalid(page) || page <= 0) {\r\n                let totalPages = 999;\r\n                let currentPage = 1;\r\n                while (currentPage <= totalPages) {\r\n                    let response = JSON.parse(((await this.post(Endpoint.GET_ACTIVITIES,\r\n                        {\r\n                            \"pageNumber\": currentPage,\r\n                            \"pageSize\": 999,\r\n                            \"totalElements\": 999,\r\n                            \"totalPages\": 999\r\n                        }\r\n                    )) as any)._body);\r\n                    totalPages = response.totalPages;\r\n                    for (let activity of response.list) {\r\n                        activities.push(Activity.castFromJSON(activity))\r\n                    }\r\n                    currentPage++\r\n                }\r\n                return { list: activities, totalPages: 1 };\r\n            }\r\n            else {\r\n                let response = JSON.parse(((await this.post(Endpoint.GET_ACTIVITIES,\r\n                    {\r\n                        \"pageNumber\": page,\r\n                        \"pageSize\": this.pageSize\r\n                    }\r\n                )) as any)._body);\r\n                const totalPages = response.totalPages;\r\n                for (let activity of response.list) {\r\n                    activities.push(Activity.castFromJSON(activity))\r\n                }\r\n                return { list: activities, totalPages: totalPages };\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async createActivity(activity: Activity) {\r\n        const logHeader = this.logHeader + \"createActivity>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(activity)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>ACTIVITY>>\" + activity);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(activity);\r\n            })\r\n        }\r\n        else {\r\n            return Activity.castFromJSON((await this.post(Endpoint.CREATE_ACTIVITY, activity) as any)._body);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async removeActivity(activity: Activity) {\r\n        const logHeader = this.logHeader + \"removeActivity>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(activity)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>ACTIVITY>>\" + activity);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return await this.delete(Endpoint.REMOVE_ACTIVITY + activity.getId());\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async editActivity(activity: Activity) {\r\n        const logHeader = this.logHeader + \"editActivity>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(activity)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>ACTIVITY>>\" + activity);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(activity);\r\n            })\r\n        }\r\n        else {\r\n            return JSON.parse((await this.put(Endpoint.EDIT_ACTIVITY + activity.getId(), activity) as any)._body) as Activity;\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async addPoints(users: Array<number>, activity: Activity) {\r\n        const logHeader = this.logHeader + \"addPoints>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isArrayInvalid(users)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ARRAY + \">>USERS>>\" + users);\r\n        }\r\n        else {\r\n            for (let user of users) {\r\n                if (Utils.isVarInvalid(user) || user <= 0) {\r\n                    throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>USER>>\" + user);\r\n                }\r\n            }\r\n        }\r\n        if (Utils.isVarInvalid(activity)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>ACTIVITY>>\" + activity);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.post(Endpoint.ADD_POINTS, { atividadeId: activity.getId(), users: users });\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Team Methods */\r\n\r\n    public async getTeams() {\r\n        const logHeader = this.logHeader + \"getTeams>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([new Team(\"Equipe 1\", [], 1, 1, null, 1), new Team(\"Equipe 2\", [User.castFromJSON({ id: 2, nome: \"Arthur\", ativo: true })], 2, 2, 'Arthur', 2), new Team(\"Equipe 3\", [User.castFromJSON({ id: 2, nome: \"Arthur\", ativo: true })], 1, 3, 'Arthur', 3), new Team(\"Equipe 4\", [User.castFromJSON({ id: 1, nome: \"Felipe\", ativo: true })], 2, 4, 'Felipe', 4)]);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse(((await this.get(Endpoint.GET_TEAMS)) as any)._body);\r\n            if (!Utils.isVarInvalid(response)) {\r\n                let teams: Array<Team> = new Array<Team>();\r\n                for (let team of response) {\r\n                    teams.push(Team.castFromJSON(team));\r\n                }\r\n                return teams;\r\n            }\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getTeamById(id: number) {\r\n        const logHeader = this.logHeader + \"getTeamById>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(id) || id <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + id)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(new Team(\"Equipe 1\", [\r\n                    new User(false, true, \"teste1@mdlz.com\", false, 1, 1, \"1\", \"João Schmitz\", \"123456\", null, 800, null),\r\n                    new User(false, false, \"teste2@mdlz.com\", false, 2, 1, \"2\", \"João Silva\", \"123456\", null, 850, null),\r\n                    new User(true, true, \"teste3@mdlz.com\", false, 3, 1, \"3\", \"Roberto Schmitz\", \"123456\", null, 900, null),\r\n                    new User(false, true, \"teste4@mdlz.com\", false, 4, 1, \"4\", \"Roberto Silva\", \"123456\", null, 950, null),\r\n                    new User(false, false, \"teste5@mdlz.com\", false, 5, 1, \"5\", \"Fernando Schmitz\", \"123456\", null, 1000, null)\r\n                ], this.authService.loggedUser.getId(), 5, this.authService.loggedUser.getNome(), id));\r\n            });\r\n        }\r\n        else {\r\n            return Team.castFromJSON(JSON.parse(((await this.get(Endpoint.GET_TEAM_BY_ID + id)) as any)._body));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async createTeam(team: Team) {\r\n        const logHeader = this.logHeader + \"createTeam>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(team)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>TEAM>>\" + team);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(team);\r\n            })\r\n        }\r\n        else {\r\n            return JSON.parse((await this.post(Endpoint.CREATE_TEAM, team) as any)._body) as Team;\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async removeTeam(team: Team) {\r\n        const logHeader = this.logHeader + \"removeTeam>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(team)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>TEAM>>\" + team);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return await this.delete(Endpoint.REMOVE_TEAM + team.getId());\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async adminEditTeam(team: Team) {\r\n        const logHeader = this.logHeader + \"adminEditTeam>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(team)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>TEAM>>\" + team);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(team);\r\n            })\r\n        }\r\n        else {\r\n            return Team.castFromJSON(JSON.parse((await this.put(Endpoint.ADMIN_TEAM_EDIT + team.getId(), team) as any)._body));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async leaderEditTeam(team: Team) {\r\n        const logHeader = this.logHeader + \"leaderEditTeam>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(team)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>TEAM>>\" + team);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(team);\r\n            })\r\n        }\r\n        else {\r\n            return Team.castFromJSON(JSON.parse((await this.put(Endpoint.LEADER_TEAM_EDIT + team.getId(), team) as any)._body));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getUserById(id: number) {\r\n        const logHeader = this.logHeader + \"getUserById>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(id) || id <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + id)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(new User(false, true, \"teste1@mdlz.com\", false, 1, 1, \"1\", \"João Schmitz\", \"123456\", null, 800, null));\r\n            })\r\n        }\r\n        else {\r\n            return User.castFromJSON(JSON.parse(((await this.get(Endpoint.GET_USER_BY_ID + id)) as any)._body));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async leaderGetUserById(id: number) {\r\n        const logHeader = this.logHeader + \"leaderGetUserById>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(id) || id <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + id)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(new User(false, true, \"teste1@mdlz.com\", false, 1, 1, \"1\", \"João Schmitz\", \"123456\", null, 800, null));\r\n            })\r\n        }\r\n        else {\r\n            return User.castFromJSON(JSON.parse(((await this.get(Endpoint.LEADER_GET_USER_BY_ID + id)) as any)._body));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async leaderGetUsers(page: number) {\r\n        const logHeader = this.logHeader + \"leaderGetUsers>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(page) || page <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>PAGE>>\" + page);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new User(false, true, \"teste1@mdlz.com\", false, 1, 1, \"1\", \"João Schmitz\", \"123456\", null, 800, null),\r\n                    new User(false, false, \"teste2@mdlz.com\", false, 2, 1, \"2\", \"João Silva\", \"123456\", null, 850, null),\r\n                    new User(true, true, \"teste3@mdlz.com\", false, 3, 1, \"3\", \"Roberto Schmitz\", \"123456\", null, 900, null),\r\n                    new User(false, true, \"teste4@mdlz.com\", false, 4, 1, \"4\", \"Roberto Silva\", \"123456\", null, 950, null),\r\n                    new User(false, false, \"teste5@mdlz.com\", false, 5, 1, \"5\", \"Fernando Schmitz\", \"123456\", null, 1000, null)\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let users: Array<User> = new Array<User>();\r\n            let response = JSON.parse(((await this.post(Endpoint.LEADER_GET_USERS,\r\n                {\r\n                    \"pageNumber\": page,\r\n                    \"pageSize\": this.pageSize\r\n                }\r\n            )) as any)._body);\r\n            const totalPages = response.totalPages;\r\n            for (let user of response.list) {\r\n                users.push(User.castFromJSON(user))\r\n            }\r\n            return { list: users, totalPages: totalPages };\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getTeamPendingUsers(id: number) {\r\n        const logHeader = this.logHeader + \"getTeamPendingUsers>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(id) || id <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + id);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new Invitation(id, 1, 1, 'Arthur Hauer'),\r\n                    new Invitation(id, 2, 2, 'Felipe Amaral'),\r\n                    new Invitation(id, 3, 3, 'Eloise Monteiro'),\r\n                    new Invitation(id, 4, 4, 'Jessica Nascimento')\r\n                ]);\r\n            });\r\n        }\r\n        else {\r\n            let users = new Array<Invitation>();\r\n            let response = JSON.parse(((await this.get(Endpoint.LEADER_GET_PENDING_USERS + id)) as any)._body);\r\n            for (let user of response) {\r\n                users.push(Invitation.castFromJSON(user));\r\n            }\r\n            return users;\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async joinRequest(teamId: number) {\r\n        const logHeader = this.logHeader + \"joinRequest>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(teamId) || teamId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + teamId)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.post(Endpoint.JOIN_REQUEST + teamId, null);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    // public async leaveRequest(teamId: number) {\r\n    //     const logHeader = this.logHeader + \"leaveRequest>>\";\r\n    //     Utils.log(logHeader);\r\n    //     if (Utils.isVarInvalid(teamId) || teamId <= 0) {\r\n    //         throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + teamId)\r\n    //     }\r\n    //     if (Constants.TEST && Constants.ISOLATED) {\r\n    //         return new Promise((resolve, reject) => {\r\n    //             resolve();\r\n    //         })\r\n    //     }\r\n    //     else {\r\n    //         return this.get(Endpoint.LEAVE_REQUEST + teamId);\r\n    //     }\r\n    // }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async approveUser(userId: number) {\r\n        const logHeader = this.logHeader + \"approveUser>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(userId) || userId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + userId)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.APPROVE_USER + userId, null);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async disapproveUser(userId: number) {\r\n        const logHeader = this.logHeader + \"disapproveUser>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(userId) || userId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + userId)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.DISAPPROVE_USER + userId, null);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async isWaitingApproval(teamId: number) {\r\n        const logHeader = this.logHeader + \"disapproveUser>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(teamId) || teamId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + teamId)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(true);\r\n            })\r\n        }\r\n        else {\r\n            return JSON.parse(((await this.get(Endpoint.WAITING_APPROVAL + teamId)) as any)._body);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Reward Methods */\r\n\r\n    public async getRewardImage(rewardId: number) {\r\n        const logHeader = this.logHeader + \"getRewardImage>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(rewardId) || rewardId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + rewardId)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            });\r\n        }\r\n        else {\r\n            return this.get(Endpoint.GET_REWARD_IMAGE + rewardId);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async uploadRewardImage(rewardId: number, image) {\r\n        const logHeader = this.logHeader + \"uploadRewardImage>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(rewardId) || rewardId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>ID>>\" + rewardId)\r\n        }\r\n        if (Utils.isVarInvalid(image)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>IMAGE>>\" + JSON.stringify(image))\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            });\r\n        }\r\n        else {\r\n            let formData = new FormData();\r\n            formData.append('file', image);\r\n            return this.put(Endpoint.REWARD_UPDATE_IMAGE + rewardId, formData);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getRewards() {\r\n        const logHeader = this.logHeader + \"getRewards>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([new Reward(1, 100, \"Amandita\", \"200 peças\", \"../../../assets/imgs/amandita.png\", 200, true), new Reward(2, 50, \"Amandita\", \"100 peças\", \"../../../assets/imgs/amandita.png\", 100, true), new Reward(3, 25, \"Amandita\", \"50 peças\", \"../../../assets/imgs/amandita.png\", 50, true)]);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse(((await this.get(Endpoint.GET_REWARDS)) as any)._body);\r\n            if (!Utils.isVarInvalid(response)) {\r\n                let rewards: Array<Reward> = new Array<Reward>();\r\n                for (let reward of response) {\r\n                    rewards.push(Reward.castFromJSON(reward));\r\n                }\r\n                return rewards;\r\n            }\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getActiveRewards() {\r\n        const logHeader = this.logHeader + \"getActiveRewards>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([new Reward(1, 100, \"Amandita\", \"200 peças\", \"../../../assets/imgs/amandita.png\", 200, true), new Reward(2, 50, \"Amandita\", \"100 peças\", \"../../../assets/imgs/amandita.png\", 100, true), new Reward(3, 25, \"Amandita\", \"50 peças\", \"../../../assets/imgs/amandita.png\", 50, true)]);\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse(((await this.get(Endpoint.GET_ACTIVE_REWARDS)) as any)._body);\r\n            if (!Utils.isVarInvalid(response)) {\r\n                let rewards: Array<Reward> = new Array<Reward>();\r\n                for (let reward of response) {\r\n                    rewards.push(Reward.castFromJSON(reward));\r\n                }\r\n                return rewards;\r\n            }\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async createReward(rewardAux: Reward) {\r\n        const logHeader = this.logHeader + \"createReward>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(rewardAux)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>REWARD>>\" + rewardAux);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(rewardAux);\r\n            })\r\n        }\r\n        else {\r\n            let reward = Reward.castFromJSON(JSON.stringify(rewardAux)); //clonar por valor\r\n            if (reward.getQuantidade() == null) {\r\n                reward.setQuantidade(-1);\r\n            }\r\n            return Reward.castFromJSON(JSON.parse((await this.post(Endpoint.CREATE_REWARD, reward) as any)._body));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async editReward(rewardAux: Reward) {\r\n        const logHeader = this.logHeader + \"editReward>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(rewardAux)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>REWARD>>\" + rewardAux);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(rewardAux);\r\n            })\r\n        }\r\n        else {\r\n            let reward = Reward.castFromJSON(JSON.stringify(rewardAux)); //clonar por valor\r\n            if (Utils.isVarInvalid(reward.getQuantidade())) {\r\n                reward.setQuantidade(-1);\r\n            }\r\n            return Reward.castFromJSON(JSON.parse((await this.put(Endpoint.EDIT_REWARD + reward.getId(), reward) as any)._body));\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async enableReward(reward: Reward) {\r\n        const logHeader = this.logHeader + \"enableReward>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(reward)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>REWARD>>\" + reward);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(reward);\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.ENABLE_REWARD + reward.getId(), null);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async disableReward(reward: Reward) {\r\n        const logHeader = this.logHeader + \"disableReward>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(reward)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>REWARD>>\" + reward);\r\n        }\r\n\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(reward);\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.DISABLE_REWARD + reward.getId(), null);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async removeReward(reward: Reward) {\r\n        const logHeader = this.logHeader + \"removeTeam>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(reward)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>REWARD>>\" + reward);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return await this.delete(Endpoint.REMOVE_REWARD + reward.getId());\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async exchange(cart: Array<CartItem>) {\r\n        const logHeader = this.logHeader + \"removeTeam>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isArrayInvalid(cart)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>CART>>\" + cart);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            let shoppingCart = new Array<any>();\r\n            for (let item of cart) {\r\n                shoppingCart.push({ id: item.getId(), quantity: item.getQuantidade() })\r\n            }\r\n            return await this.post(Endpoint.EXCHANGE, shoppingCart);\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Profile Methods */\r\n\r\n    public async editUser(user: User) {\r\n        const logHeader = this.logHeader + \"editUser>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(user)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_USER + \">>\" + JSON.stringify(user))\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            });\r\n        }\r\n        else {\r\n            return this.put(Endpoint.EDIT_USER + user.getId(), user);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async uploadUserImage(image: any) {\r\n        const logHeader = this.logHeader + \"uploadUserImage>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(image)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + JSON.stringify(image))\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            });\r\n        }\r\n        else {\r\n            let formData = new FormData();\r\n            formData.append('file', image);\r\n            return this.put(Endpoint.USER_UPDATE_IMAGE, formData);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getUserImage(userId: number) {\r\n        const logHeader = this.logHeader + \"getUserImage>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(userId) || userId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + userId)\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            });\r\n        }\r\n        else {\r\n            return this.get(Endpoint.GET_USER_IMAGE + userId);\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Communication Methods */\r\n\r\n    public async sendMessage(message: string, userIds: Array<number>) {\r\n        const logHeader = this.logHeader + \"sendMessage>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isStringInvalid(message)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>MESSAGE>>\" + JSON.stringify(message));\r\n        }\r\n        if (Utils.isArrayInvalid(userIds)) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ARRAY + \">>DESTINATIONS>>\" + JSON.stringify(userIds));\r\n        } if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.post(Endpoint.SEND_MESSAGE, { message: message, userIds: userIds });\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getMessage(messageId: number) {\r\n        const logHeader = this.logHeader + \"getAllMessages>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(messageId) || messageId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(new Message(messageId, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 1, \"Felipe Schmitz\", this.loggedUser.getId(), this.loggedUser.getNome()));\r\n            })\r\n        }\r\n        else {\r\n            return Message.castFromJSON((await this.get(Endpoint.GET_SINGLE_MESSAGE + messageId) as any)._body);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getAllMessages() {\r\n        const logHeader = this.logHeader + \"getAllMessages>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new Message(1, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 1, \"Felipe Schmitz\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(2, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 2, \"João Schmitz\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(3, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), true, 3, \"Beatriz Melchioretto\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(4, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), true, 4, \"Pedro Barros\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(5, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), true, 5, \"Fernanda Silva\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let messages: Array<Message> = new Array<Message>();\r\n            let response = JSON.parse((await this.get(Endpoint.GET_ALL_MESSAGES) as any)._body);\r\n            for (let message of response) {\r\n                messages.push(Message.castFromJSON(message));\r\n            }\r\n            return messages;\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getUnreadMessages() {\r\n        const logHeader = this.logHeader + \"getUnreadMessages>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new Message(1, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 1, \"Felipe Schmitz\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(2, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 2, \"João Schmitz\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(3, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 3, \"Beatriz Melchioretto\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(4, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 4, \"Pedro Barros\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                    new Message(5, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", new Date(), false, 5, \"Fernanda Silva\", this.loggedUser.getId(), this.loggedUser.getNome()),\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let messages: Array<Message> = new Array<Message>();\r\n            let response = JSON.parse((await this.get(Endpoint.GET_UNREAD_MESSAGES) as any)._body);\r\n            for (let message of response) {\r\n                messages.push(Message.castFromJSON(message));\r\n            }\r\n            return messages;\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getUnreadMessagesCount() {\r\n        const logHeader = this.logHeader + \"getUnreadMessagesCount>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(5);\r\n            })\r\n        }\r\n        else {\r\n            return (await this.get(Endpoint.GET_UNREAD_MESSAGES_COUNT) as any)._body;\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async deleteMessage(messageId) {\r\n        const logHeader = this.logHeader + \"deleteMessage>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(messageId) || messageId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + messageId);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.delete(Endpoint.REMOVE_MESSAGE + messageId);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async markMessageAsRead(messageId) {\r\n        const logHeader = this.logHeader + \"deleteMessage>>\";\r\n        Utils.log(logHeader);\r\n        if (Utils.isVarInvalid(messageId) || messageId <= 0) {\r\n            throw new Error(logHeader + ErrorMessage.INVALID_ID + \">>\" + messageId);\r\n        }\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve();\r\n            })\r\n        }\r\n        else {\r\n            return this.put(Endpoint.MARK_MESSAGE_AS_READ + messageId, null);\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    public async getAdminsAndLeaders() {\r\n        const logHeader = this.logHeader + \"getAdminsAndLeaders>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve([\r\n                    new User(true, true, \"teste1@mdlz.com\", false, 1, 1, \"1\", \"João Schmitz\", \"123456\", null, 800, null),\r\n                    new User(true, false, \"teste2@mdlz.com\", false, 2, 1, \"2\", \"João Silva\", \"123456\", null, 850, null),\r\n                    new User(true, true, \"teste3@mdlz.com\", false, 3, 1, \"3\", \"Roberto Schmitz\", \"123456\", null, 900, null),\r\n                    new User(true, true, \"teste4@mdlz.com\", false, 4, 1, \"4\", \"Roberto Silva\", \"123456\", null, 950, null),\r\n                    new User(true, false, \"teste5@mdlz.com\", false, 5, 1, \"5\", \"Fernando Schmitz\", \"123456\", null, 1000, null)\r\n                ]);\r\n            })\r\n        }\r\n        else {\r\n            let users: Array<User> = new Array<User>();\r\n            let response = JSON.parse(((await this.get(Endpoint.GET_ADMINS_AND_LEADERS)) as any)._body);\r\n            for (let user of response) {\r\n                users.push(User.castFromJSON(user));\r\n            }\r\n            return users;\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    /* #region Dashboard Methods */\r\n\r\n    public async getDashboardData() {\r\n        const logHeader = this.logHeader + \"getDashboardData>>\";\r\n        Utils.log(logHeader);\r\n        if (Constants.TEST && Constants.ISOLATED) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(\r\n                    [\r\n                        new ChartItem(\"Atividades\", [\r\n                            24000,\r\n                            23434,\r\n                            13560,\r\n                            10860,\r\n                            8825,\r\n                            8400,\r\n                            5660,\r\n                            5520,\r\n                            4130,\r\n                            1937,\r\n                            1638,\r\n                            1497,\r\n                            320\r\n                        ], [\r\n                            \"Linhas Seguras (6 meses)\",\r\n                            \"Linha Verde\",\r\n                            \"Kobetsu Kaizen\",\r\n                            \"Zero Quebras\",\r\n                            \"Passo MA\",\r\n                            \"Feira de Inovação\",\r\n                            \"Consistência Yield\",\r\n                            \"Projeto Prazo\",\r\n                            \"Maior Evolução Yield\",\r\n                            \"Zero Defeitos (6 meses)\",\r\n                            \"Áreas Verdes\",\r\n                            \"Zero Defeitos (9 meses)\",\r\n                            \"Desafio War on Waste\"\r\n                        ]),\r\n                        new ChartItem(\"Premios\", [\r\n                            11,\r\n                            19,\r\n                            3,\r\n                            1\r\n                        ], [\r\n                            \"Joy Tour\",\r\n                            \"KF Grill\",\r\n                            \"Cinema\",\r\n                            \"Cesta Produtos\"\r\n                        ]),\r\n                        new ChartItem(\"PontosPilar\", [\r\n                            24931,\r\n                            24350,\r\n                            23370,\r\n                            13920,\r\n                            10860,\r\n                            8825,\r\n                            4592,\r\n                            320\r\n                        ], [\r\n                            \"Liderança\",\r\n                            \"SSMA\",\r\n                            \"MF\",\r\n                            \"IIM\",\r\n                            \"MP\",\r\n                            \"MA\",\r\n                            \"QM\",\r\n                            \"WPI\"\r\n\r\n                        ]),\r\n                        new ChartItem(\"Linhas\", [\r\n                            248,\r\n                            189,\r\n                            170,\r\n                            147,\r\n                            137\r\n                        ], [\r\n                            \"PK3A&3B&A\",\r\n                            \"Linha 29\",\r\n                            \"RBP100G\",\r\n                            \"Linha 31\",\r\n                            \"Philadelphia\"\r\n                        ]),\r\n                        new ChartItem(\"UsuariosPontuacao\", [\r\n                            1212,\r\n                            279,\r\n                            38,\r\n                            28,\r\n                            9,\r\n                            12,\r\n                            12,\r\n                            1\r\n                        ], [\r\n                            \"01 a 99\",\r\n                            \"100 a 199\",\r\n                            \"200 a 300\",\r\n                            \"300 a 400\",\r\n                            \"400 a 500\",\r\n                            \"500 a 600\",\r\n                            \"600 a 700\",\r\n                            \">700\"\r\n                        ]),\r\n                    ]\r\n                );\r\n            })\r\n        }\r\n        else {\r\n            let response = JSON.parse((await this.get(Endpoint.GET_DASHBOARD_DATA) as any)._body);\r\n            let chartItems: Array<ChartItem> = new Array<ChartItem>();\r\n            for (let item of response) {\r\n                chartItems.push(ChartItem.castFromJSON(item));\r\n            }\r\n            return chartItems;\r\n        }\r\n    }\r\n\r\n    /* #endregion */\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Utils } from 'src/commons/Utils';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class LoaderService {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private loader;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(private utils: Utils) {\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public present(message: string = undefined, duration: number = undefined) {\r\n    this.utils.simpleLoading(message, duration).then((loader) => {\r\n      this.loader = loader;\r\n      this.loader.present();\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public dismiss() {\r\n    this.loader.dismiss();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Utils } from 'src/commons/Utils';\r\n\r\nInjectable({\r\n  providedIn: 'root'\r\n})\r\n\r\ninterface IDictionary {\r\n  [index: string]: string;\r\n}\r\n\r\nexport class PageDataService {\r\n\r\n  private readonly logHeader = \"PageDataService>>\";\r\n\r\n  private data: IDictionary = {};\r\n\r\n  public listUserEvent : EventEmitter<any> = new EventEmitter;\r\n\r\n  public imageChangeEvent : EventEmitter<any> = new EventEmitter;\r\n\r\n  pushUsers(list){\r\n    this.listUserEvent.emit(list);\r\n  }\r\n\r\n  constructor() {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n  }\r\n\r\n  setData(id: string, data: any):void {\r\n    const logHeader=this.logHeader+\"setData>>\";\r\n    Utils.log(logHeader+\">>ID>>\"+id+\">>DATA>>\"+JSON.stringify(data));\r\n    this.data[id] = data;\r\n  }\r\n\r\n  getData(id:string):any{\r\n    const logHeader=this.logHeader+\"getData>>\";\r\n    Utils.log(logHeader);\r\n    Utils.log(logHeader+\">>ID>>\"+id);\r\n    let returnValue=this.data[id];\r\n    return returnValue;\r\n  }\r\n\r\n  removeData(id:string):void{\r\n    const logHeader=this.logHeader+\"getData>>\";\r\n    Utils.log(logHeader);\r\n    Utils.log(logHeader+\">>ID>>\"+id);\r\n    delete this.data[id];\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}