{"version":3,"sources":["webpack:///./node_modules/ngx-mask/fesm5/ngx-mask.js","webpack:///./src/app/users/profile/profile.module.ts","webpack:///./src/app/users/profile/profile.page.html","webpack:///./src/app/users/profile/profile.page.scss","webpack:///./src/app/users/profile/profile.page.ts","webpack:///./src/app/validators/CustomValidators.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAC0E;AACpF;AACvB;;AAE3C;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EA+BV;AACD,WAAW,EAAE;AACb,iBAAiB,4DAAc;AAC/B,WAAW,EAAE;AACb,qBAAqB,4DAAc;AACnC,WAAW,EAAE;AACb,yBAAyB,4DAAc;AACvC,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,qGAAqG,kBAAkB;AACvH,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iBAAiB,oDAAM;AACvB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B;AAC5B,oBAAoB;AACpB;AACA,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,kBAAkB,EAAE;AAC9C;AACA;AACA;AACA,uFAAuF,OAAO;AAC9F;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,kDAAkD,aAAa;AAC/D;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,4BAA4B,EAAE;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,iDAAiD,EAAE;AACzE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,qDAAqD;AACrD,SAAS,gCAAgC,OAAO,oDAAM,mBAAmB;AACzE,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAqEV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B;AAC5B,oBAAoB;AACpB;AACA,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,qCAAqC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B;AAC5B,oBAAoB;AACpB;AACA,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,qCAAqC,EAAE;AAChE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,oBAAoB,EAAE;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,8CAA8C;AAC9C,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,gCAAgC,OAAO,oDAAM,mBAAmB,GAAG;AAC5E,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,CAAC;AACD,WAAW,EA0CV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,sCAAsC,kBAAkB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,oGAAoG,cAAc;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,8CAA8C,EAAE,4CAA4C,EAAE;AAC9F;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,EAAE;AAC/B,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE,0CAA0C,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA,iEAAiE,EAAE;AACnE,qCAAqC,EAAE;AACvC,6FAA6F,EAAE;AAC/F,sEAAsE,EAAE;AACxE;AACA,8DAA8D,EAAE,4CAA4C,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,4EAA4E,EAAE;AAC9E;AACA;AACA,qFAAqF,EAAE;AACvF,kDAAkD,EAAE,4CAA4C,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,6CAA6C;AAC7C,kCAAkC;AAClC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,kBAAkB,EAAE;AAC1C;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,qCAAqC,gEAAiB;AACtD,yCAAyC,gEAAU;AACnD,wCAAwC;AACxC;AACA,yCAAyC,sBAAsB,EAAE;AACjE;AACA,yBAAyB;AACzB;AACA,qCAAqC,4DAAa;AAClD,yCAAyC,gEAAU;AACnD,wCAAwC;AACxC;AACA,yCAAyC,sBAAsB,EAAE;AACjE;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,oBAAoB;AAC7B,SAAS,gCAAgC,OAAO,oDAAM,mBAAmB;AACzE,MAAM;AACN;AACA,0BAA0B,OAAO,mDAAK,mBAAmB;AACzD,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,uBAAuB,OAAO,mDAAK,EAAE;AACrC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,wBAAwB,OAAO,mDAAK,EAAE;AACtC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,kBAAkB,OAAO,0DAAY,mBAAmB;AACxD,mBAAmB,OAAO,0DAAY,gCAAgC;AACtE,qBAAqB,OAAO,0DAAY,kCAAkC;AAC1E,yBAAyB,OAAO,0DAAY,wCAAwC;AACpF;AACA;AACA,CAAC;AACD,WAAW,EAkFV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2CAA2C;AAC3C,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,6CAA6C,sDAAQ,GAAG,+BAA+B,sDAAQ,GAAG;AAClG;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY,EAAE;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sCAAsC,EAAE;AACxC;AACA,CAAC;;;AAGD;;AAEA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEoL;AACpL;;;;;;;;;;;;;;;;;;;;;;;;;AChlEyC;AACM;AACmB;AACX;AAEV;AAEA;AACY;AACjB;AAGxC,IAAM,MAAM,GAAW;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","file":"users-profile-profile-module.js","sourcesContent":["import { __read, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { InjectionToken, Injectable, Inject, ElementRef, Renderer2, Directive, forwardRef, Input, HostListener, Pipe, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IConfig() { }\nif (false) {\n    /** @type {?} */\n    IConfig.prototype.suffix;\n    /** @type {?} */\n    IConfig.prototype.prefix;\n    /** @type {?} */\n    IConfig.prototype.thousandSeparator;\n    /** @type {?} */\n    IConfig.prototype.decimalMarker;\n    /** @type {?} */\n    IConfig.prototype.clearIfNotMatch;\n    /** @type {?} */\n    IConfig.prototype.showTemplate;\n    /** @type {?} */\n    IConfig.prototype.showMaskTyped;\n    /** @type {?} */\n    IConfig.prototype.placeHolderCharacter;\n    /** @type {?} */\n    IConfig.prototype.shownMaskExpression;\n    /** @type {?} */\n    IConfig.prototype.dropSpecialCharacters;\n    /** @type {?} */\n    IConfig.prototype.specialCharacters;\n    /** @type {?} */\n    IConfig.prototype.hiddenInput;\n    /** @type {?} */\n    IConfig.prototype.validation;\n    /** @type {?} */\n    IConfig.prototype.separatorLimit;\n    /** @type {?} */\n    IConfig.prototype.patterns;\n}\n/** @type {?} */\nvar config = new InjectionToken('config');\n/** @type {?} */\nvar NEW_CONFIG = new InjectionToken('NEW_CONFIG');\n/** @type {?} */\nvar INITIAL_CONFIG = new InjectionToken('INITIAL_CONFIG');\n/** @type {?} */\nvar initialConfig = {\n    suffix: '',\n    prefix: '',\n    thousandSeparator: ' ',\n    decimalMarker: '.',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    placeHolderCharacter: '_',\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    separatorLimit: '',\n    validation: true,\n    // tslint:disable-next-line: quotemark\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\n/** @type {?} */\nvar timeMasks = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\n/** @type {?} */\nvar withoutValidation = [\n    'percent',\n    'Hh',\n    's0',\n    'm0',\n    'separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MaskApplierService = /** @class */ (function () {\n    function MaskApplierService(_config) {\n        var _this = this;\n        this._config = _config;\n        this.maskExpression = '';\n        this.actualValue = '';\n        this.shownMaskExpression = '';\n        this._formatWithSeparators = (/**\n         * @param {?} str\n         * @param {?} thousandSeparatorChar\n         * @param {?} decimalChar\n         * @param {?} precision\n         * @return {?}\n         */\n        function (str, thousandSeparatorChar, decimalChar, precision) {\n            /** @type {?} */\n            var x = str.split(decimalChar);\n            /** @type {?} */\n            var decimals = x.length > 1 ? \"\" + decimalChar + x[1] : '';\n            /** @type {?} */\n            var res = x[0];\n            /** @type {?} */\n            var separatorLimit = _this.separatorLimit.replace(/\\s/g, '');\n            if (separatorLimit && +separatorLimit) {\n                res = res.slice(0, separatorLimit.length);\n            }\n            /** @type {?} */\n            var rgx = /(\\d+)(\\d{3})/;\n            while (rgx.test(res)) {\n                res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\n            }\n            if (precision === undefined) {\n                return res + decimals;\n            }\n            else if (precision === 0) {\n                return res;\n            }\n            return res + decimals.substr(0, precision + 1);\n        });\n        this.percentage = (/**\n         * @param {?} str\n         * @return {?}\n         */\n        function (str) {\n            return Number(str) >= 0 && Number(str) <= 100;\n        });\n        this.getPrecision = (/**\n         * @param {?} maskExpression\n         * @return {?}\n         */\n        function (maskExpression) {\n            /** @type {?} */\n            var x = maskExpression.split('.');\n            if (x.length > 1) {\n                return Number(x[x.length - 1]);\n            }\n            return Infinity;\n        });\n        this.checkInputPrecision = (/**\n         * @param {?} inputValue\n         * @param {?} precision\n         * @param {?} decimalMarker\n         * @return {?}\n         */\n        function (inputValue, precision, decimalMarker) {\n            if (precision < Infinity) {\n                /** @type {?} */\n                var precisionRegEx = new RegExp(_this._charToRegExpExpression(decimalMarker) + (\"\\\\d{\" + precision + \"}.*$\"));\n                /** @type {?} */\n                var precisionMatch = inputValue.match(precisionRegEx);\n                if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n                else if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            return inputValue;\n        });\n        this._shift = new Set();\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.thousandSeparator = this._config.thousandSeparator;\n        this.decimalMarker = this._config.decimalMarker;\n        this.hiddenInput = this._config.hiddenInput;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.placeHolderCharacter = this._config.placeHolderCharacter;\n        this.validation = this._config.validation;\n        this.separatorLimit = this._config.separatorLimit;\n    }\n    /**\n     * @param {?} inputValue\n     * @param {?} maskAndPattern\n     * @return {?}\n     */\n    MaskApplierService.prototype.applyMaskWithPattern = /**\n     * @param {?} inputValue\n     * @param {?} maskAndPattern\n     * @return {?}\n     */\n    function (inputValue, maskAndPattern) {\n        var _a = __read(maskAndPattern, 2), mask = _a[0], customPattern = _a[1];\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    };\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    MaskApplierService.prototype.applyMask = /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    function (inputValue, maskExpression, position, cb) {\n        if (position === void 0) { position = 0; }\n        if (cb === void 0) { cb = (/**\n         * @return {?}\n         */\n        function () { }); }\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        /** @type {?} */\n        var cursor = 0;\n        /** @type {?} */\n        var result = '';\n        /** @type {?} */\n        var multi = false;\n        /** @type {?} */\n        var backspaceShift = false;\n        /** @type {?} */\n        var shift = 1;\n        /** @type {?} */\n        var stepBack = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        if (!!this.suffix && inputValue.endsWith(this.suffix)) {\n            inputValue = inputValue.slice(0, inputValue.length - this.suffix.length);\n        }\n        /** @type {?} */\n        var inputArray = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            this.ipError = !!(inputArray.filter((/**\n             * @param {?} i\n             * @return {?}\n             */\n            function (i) { return i === '.'; })).length < 3 && inputArray.length < 7);\n            maskExpression = '099.099.099.099';\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)) {\n                inputValue = this._stripToDecimal(inputValue);\n                /** @type {?} */\n                var precision = this.getPrecision(maskExpression);\n                inputValue = this.checkInputPrecision(inputValue, precision, '.');\n            }\n            if (inputValue.indexOf('.') > 0 && !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\n                /** @type {?} */\n                var base = inputValue.substring(0, inputValue.indexOf('.') - 1);\n                inputValue = \"\" + base + inputValue.substring(inputValue.indexOf('.'), inputValue.length);\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            }\n            else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        else if (maskExpression.startsWith('separator')) {\n            if (inputValue.match('[wа-яА-Я]') ||\n                inputValue.match('[ЁёА-я]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\[\\]:\";<>.?\\/]/) ||\n                inputValue.match('[^A-Za-z0-9,]')) {\n                inputValue = this._stripToDecimal(inputValue);\n            }\n            inputValue =\n                inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== this.decimalMarker\n                    ? inputValue.slice(1, inputValue.length)\n                    : inputValue;\n            // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\n            //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\n            /** @type {?} */\n            var thousandSeperatorCharEscaped = this._charToRegExpExpression(this.thousandSeparator);\n            /** @type {?} */\n            var decimalMarkerEscaped = this._charToRegExpExpression(this.decimalMarker);\n            /** @type {?} */\n            var invalidChars = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\";<>?\\\\/'\n                .replace(thousandSeperatorCharEscaped, '')\n                .replace(decimalMarkerEscaped, '');\n            /** @type {?} */\n            var invalidCharRegexp = new RegExp('[' + invalidChars + ']');\n            if (inputValue.match(invalidCharRegexp)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            /** @type {?} */\n            var precision = this.getPrecision(maskExpression);\n            inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            /** @type {?} */\n            var strForSep = inputValue.replace(new RegExp(thousandSeperatorCharEscaped, 'g'), '');\n            result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\n            /** @type {?} */\n            var commaShift = result.indexOf(',') - inputValue.indexOf(',');\n            /** @type {?} */\n            var shiftStep = result.length - inputValue.length;\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                /** @type {?} */\n                var _shift = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            }\n            else if ((commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                position += shiftStep;\n                this._shift.add(position);\n            }\n            else {\n                this._shift.clear();\n            }\n        }\n        else {\n            for (\n            // tslint:disable-next-line\n            var i = 0, inputSymbol = inputArray[0]; i < inputArray.length; i++, inputSymbol = inputArray[i]) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                }\n                else if (maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                }\n                else if (maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) ||\n                    (this.hiddenInput &&\n                        this.maskAvailablePatterns[maskExpression[cursor]] &&\n                        this.maskAvailablePatterns[maskExpression[cursor]].symbol === inputSymbol)) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    /** @type {?} */\n                    var daysCount = 31;\n                    if (maskExpression[cursor] === 'd') {\n                        if (Number(inputValue.slice(cursor, cursor + 2)) > daysCount || inputValue[cursor + 1] === '/') {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        /** @type {?} */\n                        var monthsCount = 12;\n                        // mask without day\n                        /** @type {?} */\n                        var withoutDays = cursor === 0 &&\n                            (Number(inputSymbol) > 2 ||\n                                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for input\n                        /** @type {?} */\n                        var day1monthInput = inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            ((inputValue[cursor - 2] === '/' &&\n                                (Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount && inputValue[cursor] !== '/')) ||\n                                inputValue[cursor] === '/' ||\n                                ((inputValue[cursor - 3] === '/' &&\n                                    (Number(inputValue.slice(cursor - 2, cursor)) > monthsCount && inputValue[cursor - 1] !== '/')) ||\n                                    inputValue[cursor - 1] === '/'));\n                        // 10<day<31 && month<12 for input\n                        /** @type {?} */\n                        var day2monthInput = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] === '/' &&\n                            (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount || inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for paste whole data\n                        /** @type {?} */\n                        var day1monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            (!inputValue.slice(cursor - 2, cursor).includes('/') &&\n                                Number(inputValue.slice(cursor - 2, cursor)) > monthsCount);\n                        // 10<day<31 && month<12 for paste whole data\n                        /** @type {?} */\n                        var day2monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] !== '/' &&\n                            Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\n                        if (withoutDays || day1monthInput || day2monthInput || day1monthPaste || day2monthPaste) {\n                            cursor += 1;\n                            /** @type {?} */\n                            var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    /** @type {?} */\n                    var shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n                    this._shift.add(shiftStep + this.prefix.length || 0);\n                    i--;\n                }\n                else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor]] &&\n                    this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n                    if (!!inputArray[cursor] && maskExpression !== '099.099.099.099') {\n                        result += inputArray[cursor];\n                    }\n                    cursor++;\n                    i--;\n                }\n                else if (this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.showMaskTyped && this.maskSpecialCharacters.indexOf(inputSymbol) < 0 && inputSymbol !== this.placeHolderCharacter) {\n                    stepBack = true;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n        /** @type {?} */\n        var newPosition = position + 1;\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n        /** @type {?} */\n        var actualShift = this._shift.has(position) ? shift : 0;\n        if (stepBack) {\n            actualShift--;\n        }\n        cb(actualShift, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        /** @type {?} */\n        var res = \"\" + this.prefix + result + this.suffix;\n        if (result.length === 0) {\n            res = \"\" + this.prefix + result;\n        }\n        return res;\n    };\n    /**\n     * @param {?} inputSymbol\n     * @return {?}\n     */\n    MaskApplierService.prototype._findSpecialChar = /**\n     * @param {?} inputSymbol\n     * @return {?}\n     */\n    function (inputSymbol) {\n        return this.maskSpecialCharacters.find((/**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { return val === inputSymbol; }));\n    };\n    /**\n     * @protected\n     * @param {?} inputSymbol\n     * @param {?} maskSymbol\n     * @return {?}\n     */\n    MaskApplierService.prototype._checkSymbolMask = /**\n     * @protected\n     * @param {?} inputSymbol\n     * @param {?} maskSymbol\n     * @return {?}\n     */\n    function (inputSymbol, maskSymbol) {\n        this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\n        return (this.maskAvailablePatterns[maskSymbol] &&\n            this.maskAvailablePatterns[maskSymbol].pattern &&\n            this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol));\n    };\n    /**\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    MaskApplierService.prototype._stripToDecimal = /**\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        return str\n            .split('')\n            .filter((/**\n         * @param {?} i\n         * @return {?}\n         */\n        function (i) { return i.match('\\\\d') || i === '.' || i === ','; }))\n            .join('');\n    };\n    /**\n     * @private\n     * @param {?} char\n     * @return {?}\n     */\n    MaskApplierService.prototype._charToRegExpExpression = /**\n     * @private\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        /** @type {?} */\n        var charsToEscape = '[\\\\^$.|?*+()';\n        return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? '\\\\' + char : char;\n    };\n    MaskApplierService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    MaskApplierService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n    ]; };\n    return MaskApplierService;\n}());\nif (false) {\n    /** @type {?} */\n    MaskApplierService.prototype.dropSpecialCharacters;\n    /** @type {?} */\n    MaskApplierService.prototype.hiddenInput;\n    /** @type {?} */\n    MaskApplierService.prototype.showTemplate;\n    /** @type {?} */\n    MaskApplierService.prototype.clearIfNotMatch;\n    /** @type {?} */\n    MaskApplierService.prototype.maskExpression;\n    /** @type {?} */\n    MaskApplierService.prototype.actualValue;\n    /** @type {?} */\n    MaskApplierService.prototype.shownMaskExpression;\n    /** @type {?} */\n    MaskApplierService.prototype.maskSpecialCharacters;\n    /** @type {?} */\n    MaskApplierService.prototype.maskAvailablePatterns;\n    /** @type {?} */\n    MaskApplierService.prototype.prefix;\n    /** @type {?} */\n    MaskApplierService.prototype.suffix;\n    /** @type {?} */\n    MaskApplierService.prototype.thousandSeparator;\n    /** @type {?} */\n    MaskApplierService.prototype.decimalMarker;\n    /** @type {?} */\n    MaskApplierService.prototype.customPattern;\n    /** @type {?} */\n    MaskApplierService.prototype.ipError;\n    /** @type {?} */\n    MaskApplierService.prototype.showMaskTyped;\n    /** @type {?} */\n    MaskApplierService.prototype.placeHolderCharacter;\n    /** @type {?} */\n    MaskApplierService.prototype.validation;\n    /** @type {?} */\n    MaskApplierService.prototype.separatorLimit;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype._shift;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype._formatWithSeparators;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype.percentage;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype.getPrecision;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskApplierService.prototype.checkInputPrecision;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskApplierService.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MaskService = /** @class */ (function (_super) {\n    __extends(MaskService, _super);\n    function MaskService(document, _config, _elementRef, _renderer) {\n        var _this = _super.call(this, _config) || this;\n        _this.document = document;\n        _this._config = _config;\n        _this._elementRef = _elementRef;\n        _this._renderer = _renderer;\n        _this.maskExpression = '';\n        _this.isNumberValue = false;\n        _this.showMaskTyped = false;\n        _this.placeHolderCharacter = '_';\n        _this.maskIsShown = '';\n        _this.selStart = null;\n        _this.selEnd = null;\n        _this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        _this._formElement = _this._elementRef.nativeElement;\n        return _this;\n    }\n    // tslint:disable-next-line:cyclomatic-complexity\n    // tslint:disable-next-line:cyclomatic-complexity\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    MaskService.prototype.applyMask = \n    // tslint:disable-next-line:cyclomatic-complexity\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    function (inputValue, maskExpression, position, cb) {\n        var _this = this;\n        if (position === void 0) { position = 0; }\n        if (cb === void 0) { cb = (/**\n         * @return {?}\n         */\n        function () { }); }\n        if (!maskExpression) {\n            return inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        /** @type {?} */\n        var getSymbol = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\n        /** @type {?} */\n        var newInputValue = '';\n        if (this.hiddenInput !== undefined) {\n            /** @type {?} */\n            var actualResult = this.actualValue.split('');\n            // tslint:disable no-unused-expression\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                            ? actualResult.length - inputValue.length === 1\n                                ? actualResult.splice(this.selStart - 1, 1)\n                                : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                            : null\n                    : null\n                : (actualResult = []);\n            // tslint:enable no-unused-expression\n            newInputValue = this.actualValue.length ? this.shiftTypedSymbols(actualResult.join('')) : inputValue;\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        /** @type {?} */\n        var result = _super.prototype.applyMask.call(this, newInputValue, maskExpression, position, cb);\n        this.actualValue = this.getActualValue(result);\n        // handle some separator implications:\n        // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\n        if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\n            this.decimalMarker = ',';\n        }\n        // b) remove decimal marker from list of special characters to mask\n        if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) { return item !== _this.decimalMarker; }));\n        }\n        this.formControlResult(result);\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length ? this.hideInput(result, this.maskExpression) : result;\n            }\n            return result;\n        }\n        /** @type {?} */\n        var resLen = result.length;\n        /** @type {?} */\n        var prefNmask = this.prefix + this.maskIsShown;\n        return result + (this.maskExpression === 'IP' ? prefNmask : prefNmask.slice(resLen));\n    };\n    /**\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    MaskService.prototype.applyValueChanges = /**\n     * @param {?=} position\n     * @param {?=} cb\n     * @return {?}\n     */\n    function (position, cb) {\n        if (position === void 0) { position = 0; }\n        if (cb === void 0) { cb = (/**\n         * @return {?}\n         */\n        function () { }); }\n        this._formElement.value = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\n        if (this._formElement === this.document.activeElement) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    };\n    /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @return {?}\n     */\n    MaskService.prototype.hideInput = /**\n     * @param {?} inputValue\n     * @param {?} maskExpression\n     * @return {?}\n     */\n    function (inputValue, maskExpression) {\n        var _this = this;\n        return inputValue\n            .split('')\n            .map((/**\n         * @param {?} curr\n         * @param {?} index\n         * @return {?}\n         */\n        function (curr, index) {\n            if (_this.maskAvailablePatterns &&\n                _this.maskAvailablePatterns[maskExpression[index]] &&\n                _this.maskAvailablePatterns[maskExpression[index]].symbol) {\n                return _this.maskAvailablePatterns[maskExpression[index]].symbol;\n            }\n            return curr;\n        }))\n            .join('');\n    };\n    // this function is not necessary, it checks result against maskExpression\n    // this function is not necessary, it checks result against maskExpression\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    MaskService.prototype.getActualValue = \n    // this function is not necessary, it checks result against maskExpression\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        var _this = this;\n        /** @type {?} */\n        var compare = res\n            .split('')\n            .filter((/**\n         * @param {?} symbol\n         * @param {?} i\n         * @return {?}\n         */\n        function (symbol, i) {\n            return _this._checkSymbolMask(symbol, _this.maskExpression[i]) ||\n                (_this.maskSpecialCharacters.includes(_this.maskExpression[i]) && symbol === _this.maskExpression[i]);\n        }));\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    };\n    /**\n     * @param {?} inputValue\n     * @return {?}\n     */\n    MaskService.prototype.shiftTypedSymbols = /**\n     * @param {?} inputValue\n     * @return {?}\n     */\n    function (inputValue) {\n        var _this = this;\n        /** @type {?} */\n        var symbolToReplace = '';\n        /** @type {?} */\n        var newInputValue = (inputValue &&\n            inputValue.split('').map((/**\n             * @param {?} currSymbol\n             * @param {?} index\n             * @return {?}\n             */\n            function (currSymbol, index) {\n                if (_this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\n                    inputValue[index + 1] !== _this.maskExpression[index + 1]) {\n                    symbolToReplace = currSymbol;\n                    return inputValue[index + 1];\n                }\n                if (symbolToReplace.length) {\n                    /** @type {?} */\n                    var replaceSymbol = symbolToReplace;\n                    symbolToReplace = '';\n                    return replaceSymbol;\n                }\n                return currSymbol;\n            }))) ||\n            [];\n        return newInputValue.join('');\n    };\n    /**\n     * @param {?=} inputVal\n     * @return {?}\n     */\n    MaskService.prototype.showMaskInInput = /**\n     * @param {?=} inputVal\n     * @return {?}\n     */\n    function (inputVal) {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            }\n            else {\n                return this.shownMaskExpression;\n            }\n        }\n        else if (this.showMaskTyped) {\n            if (inputVal) {\n                return this._checkForIp(inputVal);\n            }\n            return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\n        }\n        return '';\n    };\n    /**\n     * @return {?}\n     */\n    MaskService.prototype.clearIfNotMatchFn = /**\n     * @return {?}\n     */\n    function () {\n        if (this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !==\n                this._formElement.value.replace(/_/g, '').length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(this._formElement.value, this.maskExpression);\n        }\n    };\n    Object.defineProperty(MaskService.prototype, \"formElementProperty\", {\n        set: /**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 2), name = _b[0], value = _b[1];\n            this._renderer.setProperty(this._formElement, name, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} mask\n     * @return {?}\n     */\n    MaskService.prototype.checkSpecialCharAmount = /**\n     * @param {?} mask\n     * @return {?}\n     */\n    function (mask) {\n        var _this = this;\n        /** @type {?} */\n        var chars = mask.split('').filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return _this._findSpecialChar(item); }));\n        return chars.length;\n    };\n    /**\n     * @private\n     * @param {?} inputVal\n     * @return {?}\n     */\n    MaskService.prototype._checkForIp = /**\n     * @private\n     * @param {?} inputVal\n     * @return {?}\n     */\n    function (inputVal) {\n        if (inputVal === '#') {\n            return this.placeHolderCharacter + \".\" + this.placeHolderCharacter + \".\" + this.placeHolderCharacter + \".\" + this.placeHolderCharacter;\n        }\n        /** @type {?} */\n        var arr = [];\n        for (var i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return this.placeHolderCharacter + \".\" + this.placeHolderCharacter + \".\" + this.placeHolderCharacter;\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return this.placeHolderCharacter + \".\" + this.placeHolderCharacter;\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return this.placeHolderCharacter;\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    };\n    /**\n     * @private\n     * @param {?} inputValue\n     * @return {?}\n     */\n    MaskService.prototype.formControlResult = /**\n     * @private\n     * @param {?} inputValue\n     * @return {?}\n     */\n    function (inputValue) {\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters));\n        }\n        else if (this.dropSpecialCharacters) {\n            this.onChange(this._checkSymbols(inputValue));\n        }\n        else {\n            this.onChange(this._removeSuffix(this._removePrefix(inputValue)));\n        }\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    MaskService.prototype._removeMask = /**\n     * @private\n     * @param {?} value\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    function (value, specialCharactersForRemove) {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MaskService.prototype._removePrefix = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MaskService.prototype._removeSuffix = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    };\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    MaskService.prototype._retrieveSeparatorValue = /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    function (result) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\n    };\n    /**\n     * @private\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    MaskService.prototype._regExpForRemove = /**\n     * @private\n     * @param {?} specialCharactersForRemove\n     * @return {?}\n     */\n    function (specialCharactersForRemove) {\n        return new RegExp(specialCharactersForRemove.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return \"\\\\\" + item; })).join('|'), 'gi');\n    };\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    MaskService.prototype._checkSymbols = /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    function (result) {\n        if (result === '') {\n            return result;\n        }\n        /** @type {?} */\n        var separatorPrecision = this._retrieveSeparatorPrecision(this.maskExpression);\n        /** @type {?} */\n        var separatorValue = this._retrieveSeparatorValue(result);\n        if (this.decimalMarker !== '.') {\n            separatorValue = separatorValue.replace(this.decimalMarker, '.');\n        }\n        if (this.isNumberValue) {\n            if (separatorPrecision) {\n                if (result === this.decimalMarker) {\n                    return null;\n                }\n                return this._checkPrecision(this.maskExpression, separatorValue);\n            }\n            else {\n                return Number(separatorValue);\n            }\n        }\n        else {\n            return separatorValue;\n        }\n    };\n    // TODO should think about helpers or separting decimal precision to own property\n    // TODO should think about helpers or separting decimal precision to own property\n    /**\n     * @private\n     * @param {?} maskExpretion\n     * @return {?}\n     */\n    MaskService.prototype._retrieveSeparatorPrecision = \n    // TODO should think about helpers or separting decimal precision to own property\n    /**\n     * @private\n     * @param {?} maskExpretion\n     * @return {?}\n     */\n    function (maskExpretion) {\n        /** @type {?} */\n        var matcher = maskExpretion.match(new RegExp(\"^separator\\\\.([^d]*)\"));\n        return matcher ? Number(matcher[1]) : null;\n    };\n    /**\n     * @private\n     * @param {?} separatorExpression\n     * @param {?} separatorValue\n     * @return {?}\n     */\n    MaskService.prototype._checkPrecision = /**\n     * @private\n     * @param {?} separatorExpression\n     * @param {?} separatorValue\n     * @return {?}\n     */\n    function (separatorExpression, separatorValue) {\n        if (separatorExpression.indexOf('2') > 0) {\n            return Number(separatorValue).toFixed(2);\n        }\n        return Number(separatorValue);\n    };\n    MaskService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    MaskService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [config,] }] },\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    return MaskService;\n}(MaskApplierService));\nif (false) {\n    /** @type {?} */\n    MaskService.prototype.maskExpression;\n    /** @type {?} */\n    MaskService.prototype.isNumberValue;\n    /** @type {?} */\n    MaskService.prototype.showMaskTyped;\n    /** @type {?} */\n    MaskService.prototype.placeHolderCharacter;\n    /** @type {?} */\n    MaskService.prototype.maskIsShown;\n    /** @type {?} */\n    MaskService.prototype.selStart;\n    /** @type {?} */\n    MaskService.prototype.selEnd;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskService.prototype._formElement;\n    /** @type {?} */\n    MaskService.prototype.onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskService.prototype.document;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskService.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskService.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskService.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable deprecation\nvar MaskDirective = /** @class */ (function () {\n    function MaskDirective(document, _maskService, _config) {\n        this.document = document;\n        this._maskService = _maskService;\n        this._config = _config;\n        this.maskExpression = '';\n        this.specialCharacters = [];\n        this.patterns = {};\n        this.prefix = '';\n        this.suffix = '';\n        this.thousandSeparator = ' ';\n        this.decimalMarker = '.';\n        this.dropSpecialCharacters = null;\n        this.hiddenInput = null;\n        this.showMaskTyped = null;\n        this.placeHolderCharacter = null;\n        this.shownMaskExpression = null;\n        this.showTemplate = null;\n        this.clearIfNotMatch = null;\n        this.validation = null;\n        this.separatorLimit = null;\n        this._maskValue = '';\n        this._position = null;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.onTouch = (/**\n         * @return {?}\n         */\n        function () { });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaskDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var maskExpression = changes.maskExpression, specialCharacters = changes.specialCharacters, patterns = changes.patterns, prefix = changes.prefix, suffix = changes.suffix, thousandSeparator = changes.thousandSeparator, decimalMarker = changes.decimalMarker, dropSpecialCharacters = changes.dropSpecialCharacters, hiddenInput = changes.hiddenInput, showMaskTyped = changes.showMaskTyped, placeHolderCharacter = changes.placeHolderCharacter, shownMaskExpression = changes.shownMaskExpression, showTemplate = changes.showTemplate, clearIfNotMatch = changes.clearIfNotMatch, validation = changes.validation, separatorLimit = changes.separatorLimit;\n        if (maskExpression) {\n            this._maskValue = changes.maskExpression.currentValue || '';\n        }\n        if (specialCharacters) {\n            if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\n                return;\n            }\n            else {\n                this._maskService.maskSpecialCharacters = changes.specialCharacters.currentValue || [];\n            }\n        }\n        // Only overwrite the mask available patterns if a pattern has actually been passed in\n        if (patterns && patterns.currentValue) {\n            this._maskService.maskAvailablePatterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator.currentValue;\n        }\n        if (decimalMarker) {\n            this._maskService.decimalMarker = decimalMarker.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (placeHolderCharacter) {\n            this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        if (separatorLimit) {\n            this._maskService.separatorLimit = separatorLimit.currentValue;\n        }\n        this._applyMask();\n    };\n    // tslint:disable-next-line: cyclomatic-complexity\n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    MaskDirective.prototype.validate = \n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var value = _a.value;\n        if (!this._maskService.validation) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return { 'Mask error': true };\n        }\n        if (this._maskValue.startsWith('separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (timeMasks.includes(this._maskValue)) {\n            return this._validateTime(value);\n        }\n        if (value && value.toString().length >= 1) {\n            /** @type {?} */\n            var counterOfOpt = 0;\n            var _loop_1 = function (key) {\n                if (this_1._maskService.maskAvailablePatterns[key].optional &&\n                    this_1._maskService.maskAvailablePatterns[key].optional === true) {\n                    if (this_1._maskValue.indexOf(key) !== this_1._maskValue.lastIndexOf(key)) {\n                        /** @type {?} */\n                        var opt = this_1._maskValue\n                            .split('')\n                            .filter((/**\n                         * @param {?} i\n                         * @return {?}\n                         */\n                        function (i) { return i === key; }))\n                            .join('');\n                        counterOfOpt += opt.length;\n                    }\n                    else if (this_1._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this_1._maskValue.indexOf(key) !== -1 && value.toString().length >= this_1._maskValue.indexOf(key)) {\n                        return { value: null };\n                    }\n                    if (counterOfOpt === this_1._maskValue.length) {\n                        return { value: null };\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var key in this._maskService.maskAvailablePatterns) {\n                var state_1 = _loop_1(key);\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n            }\n            if (this._maskValue.indexOf('{') === 1 &&\n                value.toString().length === this._maskValue.length + Number(this._maskValue.split('{')[1].split('}')[0]) - 4) {\n                return null;\n            }\n            if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\n                return null;\n            }\n            else if ((this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?')) ||\n                this._maskValue.indexOf('{') === 1) {\n                return { 'Mask error': true };\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                /** @type {?} */\n                var length_1 = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length_1) {\n                    return { 'Mask error': true };\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onInput = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        /** @type {?} */\n        var el = (/** @type {?} */ (e.target));\n        this._inputValue = el.value;\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        /** @type {?} */\n        var position = el.selectionStart === 1\n            ? ((/** @type {?} */ (el.selectionStart))) + this._maskService.prefix.length\n            : ((/** @type {?} */ (el.selectionStart)));\n        /** @type {?} */\n        var caretShift = 0;\n        /** @type {?} */\n        var backspaceShift = false;\n        this._maskService.applyValueChanges(position, (/**\n         * @param {?} shift\n         * @param {?} _backspaceShift\n         * @return {?}\n         */\n        function (shift, _backspaceShift) {\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        }));\n        // only set the selection if the element is active\n        if (this.document.activeElement !== el) {\n            return;\n        }\n        this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        /** @type {?} */\n        var positionToApply = this._position\n            ? this._inputValue.length + position + caretShift\n            : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        el.setSelectionRange(positionToApply, positionToApply);\n        if ((this.maskExpression.includes('H') || this.maskExpression.includes('M')) && caretShift === 0) {\n            el.setSelectionRange(((/** @type {?} */ (el.selectionStart))) + 1, ((/** @type {?} */ (el.selectionStart))) + 1);\n        }\n        this._position = null;\n    };\n    /**\n     * @return {?}\n     */\n    MaskDirective.prototype.onBlur = /**\n     * @return {?}\n     */\n    function () {\n        this._maskService.clearIfNotMatchFn();\n        this.onTouch();\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onFocus = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        /** @type {?} */\n        var el = (/** @type {?} */ (e.target));\n        /** @type {?} */\n        var posStart = 0;\n        /** @type {?} */\n        var posEnd = 0;\n        if (el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // tslint:disable-next-line\n            ((/** @type {?} */ (e))).keyCode !== 38)\n            if (this._maskService.showMaskTyped) {\n                // We are showing the mask in the input\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    // the input ONLY contains the mask, so position the cursor at the start\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                else {\n                    // the input contains some characters already\n                    if (el.selectionStart > this._maskService.actualValue.length) {\n                        // if the user clicked beyond our value's length, position the cursor at the end of our value\n                        el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\n                    }\n                }\n            }\n        /** @type {?} */\n        var nextValue = !el.value || el.value === this._maskService.prefix\n            ? this._maskService.prefix + this._maskService.maskIsShown\n            : el.value;\n        /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\n        if (el.value !== nextValue) {\n            el.value = nextValue;\n        }\n        /** fix of cursor position with prefix when mouse click occur */\n        if ((((/** @type {?} */ (el.selectionStart))) || ((/** @type {?} */ (el.selectionEnd)))) <= this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n    };\n    // tslint:disable-next-line: cyclomatic-complexity\n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onKeyDown = \n    // tslint:disable-next-line: cyclomatic-complexity\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        this._code = e.code ? e.code : e.key;\n        /** @type {?} */\n        var el = (/** @type {?} */ (e.target));\n        this._inputValue = el.value;\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (e.keyCode === 8 && ((/** @type {?} */ (el.selectionStart))) !== 0) {\n                // If specialChars is false, (shouldn't ever happen) then set to the defaults\n                this.specialCharacters = this.specialCharacters || this._config.specialCharacters;\n                if (this.prefix.length > 1 && ((/** @type {?} */ (el.selectionStart))) <= this.prefix.length) {\n                    el.setSelectionRange(this.prefix.length, this.prefix.length);\n                }\n                else {\n                    if (this._inputValue.length !== ((/** @type {?} */ (el.selectionStart))) &&\n                        ((/** @type {?} */ (el.selectionStart))) !== 1) {\n                        while (this.specialCharacters.includes(this._inputValue[((/** @type {?} */ (el.selectionStart))) - 1].toString()) &&\n                            ((this.prefix.length >= 1 && ((/** @type {?} */ (el.selectionStart))) > this.prefix.length) ||\n                                this.prefix.length === 0)) {\n                            el.setSelectionRange(((/** @type {?} */ (el.selectionStart))) - 1, ((/** @type {?} */ (el.selectionStart))) - 1);\n                        }\n                    }\n                    this.suffixCheckOnPressDelete(e.keyCode, el);\n                }\n            }\n            this.suffixCheckOnPressDelete(e.keyCode, el);\n            if (this._maskService.prefix.length &&\n                ((/** @type {?} */ (el.selectionStart))) <= this._maskService.prefix.length &&\n                ((/** @type {?} */ (el.selectionEnd))) <= this._maskService.prefix.length) {\n                e.preventDefault();\n            }\n            /** @type {?} */\n            var cursorStart = el.selectionStart;\n            // this.onFocus(e);\n            if (e.keyCode === 8 &&\n                !el.readOnly &&\n                cursorStart === 0 &&\n                el.selectionEnd === el.value.length &&\n                el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n        if (!!this.suffix &&\n            this.suffix.length > 1 &&\n            this._inputValue.length - this.suffix.length < ((/** @type {?} */ (el.selectionStart)))) {\n            el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n        }\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n    };\n    /** It writes the value in the input */\n    /**\n     * It writes the value in the input\n     * @param {?} inputValue\n     * @return {?}\n     */\n    MaskDirective.prototype.writeValue = /**\n     * It writes the value in the input\n     * @param {?} inputValue\n     * @return {?}\n     */\n    function (inputValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (inputValue === undefined) {\n                    inputValue = '';\n                }\n                if (typeof inputValue === 'number') {\n                    inputValue = String(inputValue);\n                    inputValue = this.decimalMarker !== '.' ? inputValue.replace('.', this.decimalMarker) : inputValue;\n                    this._maskService.isNumberValue = true;\n                }\n                (inputValue && this._maskService.maskExpression) ||\n                    (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))\n                    ? (this._maskService.formElementProperty = [\n                        'value',\n                        this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n                    ])\n                    : (this._maskService.formElementProperty = ['value', inputValue]);\n                this._inputValue = inputValue;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaskDirective.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = fn;\n        this._maskService.onChange = this.onChange;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaskDirective.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouch = fn;\n    };\n    /**\n     * @param {?} keyCode\n     * @param {?} el\n     * @return {?}\n     */\n    MaskDirective.prototype.suffixCheckOnPressDelete = /**\n     * @param {?} keyCode\n     * @param {?} el\n     * @return {?}\n     */\n    function (keyCode, el) {\n        if (keyCode === 46 && this.suffix.length > 0) {\n            if (this._inputValue.length - this.suffix.length <= ((/** @type {?} */ (el.selectionStart)))) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n        }\n        if (keyCode === 8) {\n            if (this.suffix.length > 1 &&\n                this._inputValue.length - this.suffix.length < ((/** @type {?} */ (el.selectionStart)))) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n            if (this.suffix.length === 1 && this._inputValue.length === ((/** @type {?} */ (el.selectionStart)))) {\n                el.setSelectionRange(((/** @type {?} */ (el.selectionStart))) - 1, ((/** @type {?} */ (el.selectionStart))) - 1);\n            }\n        }\n    };\n    /** It disables the input element */\n    /**\n     * It disables the input element\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MaskDirective.prototype.setDisabledState = /**\n     * It disables the input element\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MaskDirective.prototype.onModelChange = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (!e) {\n            this._maskService.actualValue = '';\n        }\n    };\n    /**\n     * @private\n     * @param {?} maskExp\n     * @return {?}\n     */\n    MaskDirective.prototype._repeatPatternSymbols = /**\n     * @private\n     * @param {?} maskExp\n     * @return {?}\n     */\n    function (maskExp) {\n        var _this = this;\n        return ((maskExp.match(/{[0-9]+}/) &&\n            maskExp.split('').reduce((/**\n             * @param {?} accum\n             * @param {?} currval\n             * @param {?} index\n             * @return {?}\n             */\n            function (accum, currval, index) {\n                _this._start = currval === '{' ? index : _this._start;\n                if (currval !== '}') {\n                    return _this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n                }\n                _this._end = index;\n                /** @type {?} */\n                var repeatNumber = Number(maskExp.slice(_this._start + 1, _this._end));\n                /** @type {?} */\n                var repaceWith = new Array(repeatNumber + 1).join(maskExp[_this._start - 1]);\n                return accum + repaceWith;\n            }), '')) ||\n            maskExp);\n    };\n    // tslint:disable-next-line:no-any\n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @return {?}\n     */\n    MaskDirective.prototype._applyMask = \n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MaskDirective.prototype._validateTime = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var rowMaskLen = this._maskValue.split('').filter((/**\n         * @param {?} s\n         * @return {?}\n         */\n        function (s) { return s !== ':'; })).length;\n        if (+value[value.length - 1] === 0 && value.length < rowMaskLen) {\n            return { 'Mask error': true };\n        }\n        if (value.length <= rowMaskLen - 2) {\n            return { 'Mask error': true };\n        }\n        return null;\n    };\n    MaskDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mask]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return MaskDirective; })),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return MaskDirective; })),\n                            multi: true,\n                        },\n                        MaskService,\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    MaskDirective.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: MaskService },\n        { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n    ]; };\n    MaskDirective.propDecorators = {\n        maskExpression: [{ type: Input, args: ['mask',] }],\n        specialCharacters: [{ type: Input }],\n        patterns: [{ type: Input }],\n        prefix: [{ type: Input }],\n        suffix: [{ type: Input }],\n        thousandSeparator: [{ type: Input }],\n        decimalMarker: [{ type: Input }],\n        dropSpecialCharacters: [{ type: Input }],\n        hiddenInput: [{ type: Input }],\n        showMaskTyped: [{ type: Input }],\n        placeHolderCharacter: [{ type: Input }],\n        shownMaskExpression: [{ type: Input }],\n        showTemplate: [{ type: Input }],\n        clearIfNotMatch: [{ type: Input }],\n        validation: [{ type: Input }],\n        separatorLimit: [{ type: Input }],\n        onInput: [{ type: HostListener, args: ['input', ['$event'],] }],\n        onBlur: [{ type: HostListener, args: ['blur',] }],\n        onFocus: [{ type: HostListener, args: ['click', ['$event'],] }],\n        onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n        onModelChange: [{ type: HostListener, args: ['ngModelChange', ['$event'],] }]\n    };\n    return MaskDirective;\n}());\nif (false) {\n    /** @type {?} */\n    MaskDirective.prototype.maskExpression;\n    /** @type {?} */\n    MaskDirective.prototype.specialCharacters;\n    /** @type {?} */\n    MaskDirective.prototype.patterns;\n    /** @type {?} */\n    MaskDirective.prototype.prefix;\n    /** @type {?} */\n    MaskDirective.prototype.suffix;\n    /** @type {?} */\n    MaskDirective.prototype.thousandSeparator;\n    /** @type {?} */\n    MaskDirective.prototype.decimalMarker;\n    /** @type {?} */\n    MaskDirective.prototype.dropSpecialCharacters;\n    /** @type {?} */\n    MaskDirective.prototype.hiddenInput;\n    /** @type {?} */\n    MaskDirective.prototype.showMaskTyped;\n    /** @type {?} */\n    MaskDirective.prototype.placeHolderCharacter;\n    /** @type {?} */\n    MaskDirective.prototype.shownMaskExpression;\n    /** @type {?} */\n    MaskDirective.prototype.showTemplate;\n    /** @type {?} */\n    MaskDirective.prototype.clearIfNotMatch;\n    /** @type {?} */\n    MaskDirective.prototype.validation;\n    /** @type {?} */\n    MaskDirective.prototype.separatorLimit;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._maskValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._inputValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._end;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._code;\n    /** @type {?} */\n    MaskDirective.prototype.onChange;\n    /** @type {?} */\n    MaskDirective.prototype.onTouch;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype.document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskDirective.prototype._maskService;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MaskDirective.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MaskPipe = /** @class */ (function () {\n    function MaskPipe(_maskService) {\n        this._maskService = _maskService;\n    }\n    /**\n     * @param {?} value\n     * @param {?} mask\n     * @return {?}\n     */\n    MaskPipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?} mask\n     * @return {?}\n     */\n    function (value, mask) {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(\"\" + value, mask);\n        }\n        return this._maskService.applyMaskWithPattern(\"\" + value, mask);\n    };\n    MaskPipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'mask',\n                    pure: true,\n                },] }\n    ];\n    /** @nocollapse */\n    MaskPipe.ctorParameters = function () { return [\n        { type: MaskApplierService }\n    ]; };\n    return MaskPipe;\n}());\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MaskPipe.prototype._maskService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxMaskModule = /** @class */ (function () {\n    function NgxMaskModule() {\n    }\n    /**\n     * @param {?=} configValue\n     * @return {?}\n     */\n    NgxMaskModule.forRoot = /**\n     * @param {?=} configValue\n     * @return {?}\n     */\n    function (configValue) {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue,\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig,\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\n                },\n                MaskApplierService,\n            ],\n        };\n    };\n    /**\n     * @param {?=} _configValue\n     * @return {?}\n     */\n    NgxMaskModule.forChild = /**\n     * @param {?=} _configValue\n     * @return {?}\n     */\n    function (_configValue) {\n        return {\n            ngModule: NgxMaskModule,\n        };\n    };\n    NgxMaskModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [MaskDirective, MaskPipe],\n                    declarations: [MaskDirective, MaskPipe],\n                },] }\n    ];\n    return NgxMaskModule;\n}());\n/**\n * \\@internal\n * @param {?} initConfig\n * @param {?} configValue\n * @return {?}\n */\nfunction _configFactory(initConfig, configValue) {\n    return configValue instanceof Function ? __assign({}, initConfig, configValue()) : __assign({}, initConfig, configValue);\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n((/**\n * @return {?}\n */\nfunction () {\n    if (!commonjsGlobal.KeyboardEvent) {\n        commonjsGlobal.KeyboardEvent = (/**\n         * @param {?} _eventType\n         * @param {?} _init\n         * @return {?}\n         */\n        function (_eventType, _init) { });\n    }\n}))();\n\n\nvar customKeyboardEvent = {\n\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { INITIAL_CONFIG, MaskApplierService, MaskDirective, MaskPipe, MaskService, NEW_CONFIG, NgxMaskModule, _configFactory, config, initialConfig, timeMasks, withoutValidation };\n//# sourceMappingURL=ngx-mask.js.map\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePage } from './profile.page';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { NgxMaskModule } from 'ngx-mask'\r\n \r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    NgxMaskModule.forRoot(),\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule { }\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle auto-hide=\\\"false\\\"><i class=\\\"fas fa-align-left icon-menu\\\"></i></ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n    <span class=\\\"title_t\\\">Editar</span>\\r\\n    <span class=\\\"title_w\\\">seu Perfil</span>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <img [src]=\\\"photo\\\" onError=\\\"src = '../assets/imgs/user.png'\\\" class=\\\"user-pic2\\\">\\r\\n          <ion-button size=\\\"small\\\" class=\\\"cam-button\\\" (click)=\\\"selectImage()\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <div>\\r\\n            <ion-label>Nome completo <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>account_circle</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"name\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>E-mail @mdlz.com <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>email</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              \\r\\n                <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" aria-label=\\\"\\\"\\r\\n                  aria-describedby=\\\"basic-addon2\\\" formControlName=\\\"email\\\">\\r\\n               \\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Telefone Celular <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>phone</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"phone\\\"  mask='(00) 00000-0000'>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Grau de Escolaridade <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n              <mat-select formControlName=\\\"schooling\\\" [compareWith]=\\\"compareById\\\">\\r\\n                <mat-option *ngFor=\\\"let schoolingLvl of schoolingList\\\" [value]=\\\"schoolingLvl\\\">\\r\\n                  {{schoolingLvl.description}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Nº da Matrícula</ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>file_copy</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" disabled formControlName=\\\"registration\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Fábrica </ion-label>\\r\\n            <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n              <mat-select formControlName=\\\"factory\\\" [compareWith]=\\\"compareById\\\"\\r\\n                (selectionChange)=\\\"getSections()\\\">\\r\\n                <mat-option *ngFor=\\\"let factory of factories\\\" [value]=\\\"factory\\\">\\r\\n                  {{factory.nome}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Seção </ion-label>\\r\\n            <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n              <mat-select formControlName=\\\"section\\\" [compareWith]=\\\"compareById\\\"\\r\\n                (selectionChange)=\\\"getLines()\\\">\\r\\n                <mat-option *ngFor=\\\"let section of sections\\\" [value]=\\\"section\\\">\\r\\n                  {{section.nome}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Linha </ion-label>\\r\\n            <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n              <mat-select formControlName=\\\"line\\\" [compareWith]=\\\"compareById\\\">\\r\\n                <mat-option *ngFor=\\\"let line of lines\\\" [value]=\\\"line\\\">\\r\\n                  {{line.nome}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n\\r\\n            <ion-label>Nova Senha</ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>settings</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"password\\\"  [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n              <mat-icon  matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}\\r\\n              </mat-icon>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Confirmar Nova Senha</ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>settings</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"passwordConfirm\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n              <mat-icon  matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}\\r\\n              </mat-icon>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"ion-margin-top\\\">\\r\\n            <button type=\\\"submit\\\" (click)=\\\"save()\\\" class=\\\"btn btn-block btn-mdlz-clear color2\\\">Salvar\\r\\n              Alterações</button>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\r\nimport { User } from 'src/models/User';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { CustomValidators } from 'src/app/validators/CustomValidators';\r\nimport { Factory } from 'src/models/Factory';\r\nimport { Section } from 'src/models/Section';\r\nimport { Line } from 'src/models/Line';\r\nimport { ToastText, ErrorMessage, MenuText, ErrorType, Endpoint } from 'src/commons/Constants';\r\nimport { Schooling } from 'src/models/Schooling';\r\nimport { PictureSourceType } from '@ionic-native/camera/ngx';\r\nimport { ActionSheetController, Platform } from '@ionic/angular';\r\nimport { File, FileEntry } from '@ionic-native/file/ngx';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.page.html',\r\n  styleUrls: ['./profile.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class ProfilePage {\r\n\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private logHeader = \"ProfilePage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n  \r\n  hide = true;\r\n  private user: User;\r\n  private uploadImage: boolean = false;\r\n  public form: FormGroup;\r\n  public factories: Array<Factory> = new Array<Factory>();\r\n  public sections: Array<Section> = new Array<Section>();\r\n  public lines: Array<Line> = new Array<Line>();\r\n  public schoolingList: Array<Schooling> = new Array<Schooling>();\r\n  public photo: string;\r\n  private imageData;\r\n  private imagePath;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private api: BackendApiProvider,\r\n    private utils: Utils,\r\n    private auth: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private actionSheetController: ActionSheetController,\r\n    private pageDataService: PageDataService,\r\n    private platform: Platform\r\n  ) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    this.form = this.formBuilder.group({\r\n      name: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n\r\n      phone: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n\r\n      schooling: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n\r\n      registration: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n\r\n      factory: new FormControl({ value: '', disabled: true }, Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n\r\n      section: new FormControl({ value: '', disabled: true }, Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n\r\n      line: new FormControl({ value: '', disabled: true }, Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30)\r\n      ])),\r\n\r\n      passwordConfirm: new FormControl('', Validators.compose([\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n      ])),\r\n    },\r\n      {\r\n        validator: CustomValidators.passwordsMatch\r\n      });\r\n\r\n    this.schoolingList.push(new Schooling(1, \"Ensino Fundamental Incompleto\"));\r\n    this.schoolingList.push(new Schooling(2, \"Ensino Fundamental Completo\"));\r\n    this.schoolingList.push(new Schooling(3, \"Ensino Médio Incompleto\"));\r\n    this.schoolingList.push(new Schooling(4, \"Ensino Médio Completo\"));\r\n    this.schoolingList.push(new Schooling(5, \"Ensino Superior Incompleto\"));\r\n    this.schoolingList.push(new Schooling(6, \"Ensino Superior Completo\"));\r\n\r\n    this.getUser();\r\n    let nome = this.user.getNome();\r\n    let email = this.user.getEmail();\r\n    let matricula = this.user.getMatricula();\r\n    let phone = this.user.getTelefone();\r\n    let schooling = this.schoolingList.filter(n => n.description == this.user.getEscolaridade())[0]\r\n    this.api.getLines().then((lines: Array<Line>) => {\r\n      this.lines = lines;\r\n      let line = lines.filter(k => k.getId() == this.user.getLinhaId())[0];\r\n      this.api.getSections().then((sections: Array<Section>) => {\r\n        this.sections = sections;\r\n        let section = sections.filter(k => k.getId() == line.getSecaoId())[0];\r\n        this.api.getFactories().then((factories: Array<Factory>) => {\r\n          this.factories = factories;\r\n          let factory = factories.filter(k => k.getId() == section.getFabricaId())[0];\r\n          this.form.patchValue({\r\n            'name': nome,\r\n            'email': email,\r\n            'registration': matricula,\r\n            'line': line,\r\n            'section': section,\r\n            'factory': factory,\r\n            'phone': phone,\r\n            'schooling': schooling,\r\n          });\r\n          this.photo = this.user.getFoto();\r\n        }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n      });\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n    });\r\n\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  compareById(o1, o2) {\r\n    if (o1 == null || o2 == null) {\r\n      return false;\r\n    }\r\n    return o1.id === o2.id;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private getUser() {\r\n    this.user = this.auth.loggedUser;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getFactories() {\r\n    const logHeader = this.logHeader + \"getFactories>>\";\r\n    Utils.log(logHeader);\r\n    this.api.getFactories().then((factories: Array<Factory>) => {\r\n      this.factories = factories;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getSections() {\r\n    const logHeader = this.logHeader + \"getSections>>\";\r\n    Utils.log(logHeader);\r\n    this.api.getSections(this.form.value.factory).then((sections: Array<Section>) => {\r\n      this.sections = sections;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getLines() {\r\n    const logHeader = this.logHeader + \"getLines>>\";\r\n    Utils.log(logHeader);\r\n    this.api.getLines(this.form.value.section).then((lines: Array<Line>) => {\r\n      this.lines = lines;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async selectImage() {\r\n    if (!(this.platform.is('desktop') || this.platform.is('mobileweb'))) {\r\n      const actionSheet = await this.actionSheetController.create({\r\n        header: MenuText.WHAT_DO_YOU_WANT_TO_DO,\r\n        buttons: [{\r\n          text: MenuText.LOAD_FILE,\r\n          handler: () => {\r\n            this.takePicture(PictureSourceType.PHOTOLIBRARY);\r\n          }\r\n        },\r\n        {\r\n          text: MenuText.TAKE_PICTURE,\r\n          handler: () => {\r\n            this.takePicture(PictureSourceType.CAMERA);\r\n          }\r\n        },\r\n        {\r\n          text: MenuText.CANCEL,\r\n          role: 'cancel'\r\n        }\r\n        ]\r\n      });\r\n      await actionSheet.present();\r\n    }\r\n    else {\r\n      this.utils.simpleToastError(ToastText.FEATURE_UNAVAILABLE_FOR_WEB);\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  takePicture(sourceType: PictureSourceType) {\r\n    this.utils.takePicture(sourceType).then((imageData) => {\r\n      this.utils.cropPicture(imageData).then((croppedImage) => {\r\n        this.photo = croppedImage;\r\n        let image: string = croppedImage as string;\r\n        this.imageData = image.substring(image.indexOf(\"base64,\") + 7, image.length);\r\n        this.uploadImage = true;\r\n      })\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  save() {\r\n    const logHeader = this.logHeader + \"save>>\";\r\n    Utils.log(logHeader);\r\n    let name: string = this.form.value.name;\r\n    let email: string = this.form.value.email;\r\n    let phone: string = this.form.value.phone;\r\n    let schooling: Schooling = this.form.value.schooling;\r\n    let registration: string = this.form.value.registration;\r\n    let password: string = this.form.value.password;\r\n    let passwordConfirm: string = this.form.value.passwordConfirm;\r\n    if (Utils.isStringInvalid(name)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_NAME);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>NAME>>\" + name);\r\n    }\r\n    if (Utils.isStringInvalid(email)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_EMAIL);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>EMAIL>>\" + email);\r\n    }\r\n    if (Utils.isStringInvalid(phone)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_PHONE);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>PHONE>>\" + phone);\r\n    }\r\n    if (Utils.isVarInvalid(schooling)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_SCHOOLING);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>SCHOOLING>>\" + schooling);\r\n    }\r\n    if (Utils.isStringInvalid(registration)) {\r\n      this.utils.simpleToastError(ToastText.INSERT_REGISTRATION);\r\n      throw new Error(logHeader + ErrorMessage.INVALID_STRING + \">>REGISTRATION>>\" + registration);\r\n    }\r\n    this.user.setNome(name);\r\n    this.user.setEmail(email.toLowerCase());\r\n    this.user.setTelefone(phone);\r\n    this.user.setEscolaridade(schooling.description);\r\n    this.user.setMatricula(registration);\r\n    if (this.uploadImage) {\r\n      const imageBlob = Utils.getImageBlob(this.imageData);\r\n      this.api.uploadUserImage(imageBlob).then(() => {\r\n        this.pageDataService.imageChangeEvent.emit('Image changed');\r\n        this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n        this.uploadImage = false;\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.IMAGE_UPLOAD_FAILED);\r\n        throw error;\r\n      });\r\n    }\r\n    if (!Utils.isStringInvalid(password) && !Utils.isStringInvalid(passwordConfirm)) {\r\n      if (password == passwordConfirm) {\r\n        if (password.length >= 6 || password.length <= 30) {\r\n          this.user.setSenha(password)\r\n        }\r\n        else {\r\n          this.utils.simpleToastError(ToastText.INVALID_PASSWORD_LENGTH);\r\n          throw new Error(logHeader + ErrorMessage.INVALID_PASSWORD_LENGTH);\r\n        }\r\n      }\r\n      else {\r\n        this.utils.simpleToastError(ToastText.PASSWORDS_DONT_MATCH);\r\n        throw new Error(logHeader + ErrorMessage.PASSWORDS_DONT_MATCH);\r\n      }\r\n    }\r\n    else {\r\n      this.user.setSenha(undefined)\r\n    }\r\n    this.api.editUser(this.user).then(() => {\r\n      this.utils.simpleToast(ToastText.EDIT_SUCCESSFUL);\r\n      this.auth.setAuthObject(this.user);\r\n      this.auth.loggedUser = this.user;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n","import { FormControl, AbstractControl } from '@angular/forms';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class CustomValidators {\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static passwordsMatch(AC: AbstractControl) {\r\n        let password = AC.get('password').value;\r\n        let passwordConfirm = AC.get('passwordConfirm').value;\r\n        if (password != passwordConfirm) {\r\n            return { passwordsDontMatch: true }\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static isValidMatricula(control: FormControl): any {\r\n        if (isNaN(control.value)) {\r\n            return { invalid: true }\r\n        }\r\n        let numbers;\r\n        let digits;\r\n        let sum;\r\n        let i;\r\n        let result;\r\n        let sameDigits = 1;\r\n        let Matricula = control.value;\r\n        if (Matricula.length < 11)\r\n            return { invalid: true }\r\n        for (i = 0; i < Matricula.length - 1; i++)\r\n            if (Matricula.charAt(i) != Matricula.charAt(i + 1)) {\r\n                sameDigits = 0;\r\n                break;\r\n            }\r\n        if (!sameDigits) {\r\n            numbers = Matricula.substring(0, 9);\r\n            digits = Matricula.substring(9);\r\n            sum = 0;\r\n            for (i = 10; i > 1; i--)\r\n                sum += numbers.charAt(10 - i) * i;\r\n            result = sum % 11 < 2 ? 0 : 11 - sum % 11;\r\n            if (result != digits.charAt(0))\r\n                return { invalid: true }\r\n            numbers = Matricula.substring(0, 10);\r\n            sum = 0;\r\n            for (i = 11; i > 1; i--)\r\n                sum += numbers.charAt(11 - i) * i;\r\n            result = sum % 11 < 2 ? 0 : 11 - sum % 11;\r\n            if (result != digits.charAt(1))\r\n                return { invalid: true }\r\n            return new Promise(resolve => {\r\n                setTimeout(() => {\r\n                    if (control.value === \"59566215916\") {\r\n                        resolve({ MatriculaTaken: true });\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 2000);\r\n            })\r\n        }\r\n        else\r\n            return { invalid: true }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n    static isValidEmail(control: FormControl): any {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                if (control.value.toLowerCase() === \"teste@cits.br\") {\r\n                    resolve({ emailTaken: true });\r\n                }\r\n                else {\r\n                    resolve(null);\r\n                }\r\n            }, 2000);\r\n        })\r\n    }\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}"],"sourceRoot":""}