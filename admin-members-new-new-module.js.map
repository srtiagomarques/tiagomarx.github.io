{"version":3,"sources":["webpack:///./src/app/admin/members/new/new.module.ts","webpack:///./src/app/admin/members/new/new.page.html","webpack:///./src/app/admin/members/new/new.page.scss","webpack:///./src/app/admin/members/new/new.page.ts"],"names":[],"mappings":"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","file":"admin-members-new-new-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterUserPage } from './new.page';\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterUserPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterUserPage]\r\n})\r\nexport class RegisterUserPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle auto-hide=\\\"false\\\"><i class=\\\"fas fa-align-left icon-menu\\\"></i></ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n<!-- \\r\\n   <i class=\\\"fas fa-ellipsis-h dot-ico\\\"  (click)=\\\"openMenu($event)\\\" slot=\\\"end\\\"></i> -->\\r\\n\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n\\r\\n    <span class=\\\"title_t\\\">Registro</span>\\r\\n    <span class=\\\"title_w\\\">de Usuários</span>\\r\\n    \\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n        <ion-back-button text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content  padding=\\\"true\\\" class=\\\"app-registro\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row color=\\\"primary\\\" class=\\\"ion-justify-content-center\\\">\\r\\n        <ion-col class=\\\"ion-align-self-center\\\" size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n        \\r\\n            <ion-label>Nome completo <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>account_circle</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"name\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>E-mail @mdlz.com <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>email</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n             \\r\\n                <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" aria-label=\\\"\\\"\\r\\n                  aria-describedby=\\\"basic-addon2\\\" formControlName=\\\"email\\\">\\r\\n                \\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Nº da Matrícula <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-icon class=\\\"main-icon\\\" matSuffix>file_copy</mat-icon>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"registration\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Fábrica <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n              <mat-select formControlName=\\\"factory\\\" [compareWith]=\\\"compareById\\\" (selectionChange)=\\\"getSections()\\\">\\r\\n                <mat-option *ngFor=\\\"let factory of factories\\\" [value]=\\\"factory\\\">\\r\\n                  {{factory.nome}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Seção <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n              <mat-select formControlName=\\\"section\\\" [compareWith]=\\\"compareById\\\" (selectionChange)=\\\"getLines()\\\">\\r\\n                <mat-option *ngFor=\\\"let section of sections\\\" [value]=\\\"section\\\">\\r\\n                  {{section.nome}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <ion-label>Linha <span class=\\\"required\\\">*</span></ion-label>\\r\\n            <mat-form-field class=\\\"full-width margin-top\\\">\\r\\n              <mat-select formControlName=\\\"line\\\" [compareWith]=\\\"compareById\\\" >\\r\\n                <mat-option *ngFor=\\\"let line of lines\\\" [value]=\\\"line\\\">\\r\\n                  {{line.nome}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- esse campo só habilita qdo for opção de editar -->\\r\\n            <div class=\\\"pass_reset\\\" *ngIf=\\\"modoEdicao\\\" >\\r\\n            <ion-label>Resetar Senha do Usuário</ion-label>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" aria-describedby=\\\"button-addon2\\\">\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button (click)=\\\"resetPassword()\\\" class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">Resetar </button>\\r\\n              </div>\\r\\n            </div>\\r\\n            </div>\\r\\n       \\r\\n             <!-- / esse campo só habilita qdo for opção de editar -->\\r\\n\\r\\n             <ion-checkbox formControlName=\\\"userActive\\\"></ion-checkbox><span class=\\\"user_status\\\"> Usuário(a) Ativo(a)</span>\\r\\n        <br><br>\\r\\n             <ion-checkbox formControlName=\\\"userIsAdmin\\\"></ion-checkbox><span class=\\\"user_status\\\"> Usuário(a) Administrador(a)</span>\\r\\n  \\r\\n          <div class=\\\"ion-margin-top\\\">\\r\\n            <button type=\\\"submit\\\" (click)=\\\"register()\\\" class=\\\"btn btn-block btn-mdlz-clear\\\">{{getButtonCaption()}}</button>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbWJlcnMvbmV3L25ldy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Factory } from 'src/models/Factory';\r\nimport { Section } from 'src/models/Section';\r\nimport { Line } from 'src/models/Line';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { CustomValidators } from 'src/app/validators/CustomValidators';\r\nimport { ErrorMessage, AlertTitle, AlertText, ToastText, ErrorType, MenuText } from 'src/commons/Constants';\r\nimport { Router } from '@angular/router';\r\nimport { PageDataService } from 'src/providers/page-data/page-data.service';\r\nimport { User } from 'src/models/User';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { MembersMenuComponent } from '../members-menu/members-menu.component';\r\n\r\n\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-user-register',\r\n  templateUrl: './new.page.html',\r\n  styleUrls: ['./new.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class RegisterUserPage implements OnInit {\r\n  private readonly logHeader = \"RegisterPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  modoEdicao = false;\r\n  hide = true;\r\n  form: FormGroup;\r\n  factories: Array<Factory> = new Array<Factory>();\r\n  sections: Array<Section> = new Array<Section>();\r\n  lines: Array<Line> = new Array<Line>();\r\n  defaultLine: Line;\r\n  defaultSection: Section;\r\n  defaultFactory: Factory;\r\n  managers: Array<string> = new Array<string>();\r\n  private newPassword: string;\r\n  private user: User;\r\n\r\n  compareById(o1, o2) {\r\n    if (o1 == null || o2 == null) {\r\n      return false;\r\n    }\r\n    return o1.id === o2.id;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(private api: BackendApiProvider,\r\n    private formBuilder: FormBuilder,\r\n    private utils: Utils,\r\n    private router: Router,\r\n    private pageDataService: PageDataService,\r\n    public popoverController: PopoverController) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    let data = this.pageDataService.getData('user-edit');\r\n    this.pageDataService.removeData('user-edit');\r\n    this.form = this.formBuilder.group({\r\n      userActive: new FormControl(false, null),\r\n\r\n      userIsAdmin: new FormControl(false, null),\r\n      \r\n      name: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n\r\n      registration: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n\r\n      factory: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n\r\n      section: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n\r\n      line: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ]))\r\n    });\r\n    this.modoEdicao = !Utils.isVarInvalid(data);\r\n    let isAdmin;\r\n    let isAtivo;\r\n    let nome;\r\n    let email;\r\n    let matricula;\r\n    let line;\r\n    let section;\r\n    let factory;\r\n    if (this.modoEdicao) {\r\n      let user = data;\r\n      this.user = user;\r\n      isAdmin = user.isAdmin();\r\n      isAtivo = user.isAtivo();\r\n      nome = user.getNome();\r\n      email = user.getEmail();\r\n      matricula = user.getMatricula();\r\n      this.api.getLines().then((lines: Array<Line>) => {\r\n        this.lines = lines;\r\n        line = lines.filter(k => k.getId() == this.user.getLinhaId())[0];\r\n        this.api.getSections().then((sections: Array<Section>) => {\r\n          this.sections = sections;\r\n          section = sections.filter(k => k.getId() == line.getSecaoId())[0];\r\n          this.api.getFactories().then((factories: Array<Factory>) => {\r\n            this.factories = factories;\r\n            factory = factories.filter(k => k.getId() == section.getFabricaId())[0];\r\n            this.form.patchValue({\r\n              'name': nome,\r\n              'userIsAdmin': isAdmin,\r\n              'userActive': isAtivo,\r\n              'email': email,\r\n              'registration': matricula,\r\n              'line': line,\r\n              'section': section,\r\n              'factory': factory,\r\n            });\r\n          }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n        }).catch((error) => {\r\n          this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n        });\r\n      }).catch((error) => {\r\n        this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG);\r\n      });\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  ngOnInit() {\r\n    this.getFactories();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async openMenu(ev: any) {\r\n    this.DismissClick();\r\n    const popover = await this.popoverController.create({\r\n      component: MembersMenuComponent,\r\n      event: ev,\r\n      animated: true,\r\n      showBackdrop: true,\r\n      translucent: true,\r\n      cssClass: 'popover_class'\r\n    });\r\n    return await popover.present();\r\n  }\r\n\r\n  async DismissClick() {\r\n    await this.popoverController.dismiss();\r\n  }\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getFactories() {\r\n    const logHeader = this.logHeader + \"getFactories>>\";\r\n    Utils.log(logHeader);\r\n    this.api.getFactories().then((factories: Array<Factory>) => {\r\n      this.factories = factories;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG))\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getSections() {\r\n    const logHeader = this.logHeader + \"getSections>>\";\r\n    Utils.log(logHeader);\r\n    this.api.getSections(this.form.value.factory.getId()).then((sections: Array<Section>) => {\r\n      this.sections = sections;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG))\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getLines() {\r\n    const logHeader = this.logHeader + \"getLines>>\";\r\n    Utils.log(logHeader);\r\n    this.api.getLines(this.form.value.section.getId()).then((lines: Array<Line>) => {\r\n      this.lines = lines;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG))\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async register() {\r\n    const logHeader = this.logHeader + \"register>>\";\r\n    Utils.log(logHeader);\r\n    if (Utils.isVarInvalid(this.form) || Utils.isVarInvalid(this.form.value)) {\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \"FORM>>\" + JSON.stringify(this.form));\r\n    }\r\n    if (!this.modoEdicao) {\r\n      this.api.adminRegister(this.form.value).then((response) => {\r\n        if (!Utils.isVarInvalid(response)) {\r\n          if (Utils.hasOkStatus(response)) {\r\n            this.pageDataService.pushUsers(this.user);\r\n            this.utils.simpleAlert(AlertTitle.WARNING, AlertText.SIGNUP_SUCCESSFUL);\r\n            this.router.navigate(['/members'])\r\n          }\r\n          else {\r\n            this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n          }\r\n        }\r\n        else {\r\n          this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      }).catch((error) => {\r\n        if (Utils.isVarInvalid(error._body)) {\r\n          if ((error._body as string).includes(ErrorMessage.INVALID_FORM)) {\r\n            this.utils.simpleToast(ErrorMessage.INVALID_FORM);\r\n          }\r\n          if ((error._body as string).includes(ErrorType.USER_ALREADY_ACTIVATED)) {\r\n            this.utils.simpleToast(ToastText.USER_ALREADY_ACTIVATED);\r\n          }\r\n          else {\r\n            this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n          }\r\n        }\r\n        else {\r\n          this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.user.setAdmin(this.form.value.userIsAdmin)\r\n      this.user.setAtivo(this.form.value.userActive);\r\n      this.user.setNome(this.form.value.name);\r\n      this.user.setEmail(this.form.value.email);\r\n      this.user.setAtivo(this.form.value.userActive);\r\n      this.user.setMatricula(this.form.value.registration);\r\n      this.user.setLinhaId(this.form.value.line.getId());\r\n      this.user.setSenha(undefined);\r\n      this.api.modifyUser(this.user).then((response) => {\r\n        if (!Utils.isVarInvalid(response)) {\r\n          if (Utils.hasOkStatus(response)) {\r\n            this.utils.simpleAlert(AlertTitle.WARNING, AlertText.SIGNUP_SUCCESSFUL);\r\n            this.router.navigate(['/members'])\r\n          }\r\n          else {\r\n            this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n          }\r\n        }\r\n        else {\r\n          this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      }).catch((error) => {\r\n        if (Utils.isVarInvalid(error._body)) {\r\n          if ((error._body as string).includes(ErrorMessage.INVALID_FORM)) {\r\n            this.utils.simpleToast(ErrorMessage.INVALID_FORM);\r\n          }\r\n          if ((error._body as string).includes(ErrorType.USER_ALREADY_ACTIVATED)) {\r\n            this.utils.simpleToast(ToastText.USER_ALREADY_ACTIVATED);\r\n          }\r\n          else {\r\n            this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n          }\r\n        }\r\n        else {\r\n          this.utils.simpleToast(ToastText.SOMETHING_WENT_WRONG);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async resetPassword() {\r\n    const logHeader = this.logHeader + \"resetPassword>>\";\r\n    if (Utils.isVarInvalid(this.user)) {\r\n      throw new Error(logHeader + ErrorMessage.INVALID_VARIABLE + \">>\" + this.user);\r\n    }\r\n    this.api.resetUserPassword(this.user).then(() => {\r\n      this.utils.simpleToast(ToastText.PASSWORD_RESETED);\r\n    }).catch((error) => {\r\n      this.utils.simpleToastError(ToastText.SOMETHING_WENT_WRONG);\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getButtonCaption() {\r\n    return this.modoEdicao ? MenuText.SAVE_CHANGES : MenuText.REGISTER;\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n"],"sourceRoot":""}