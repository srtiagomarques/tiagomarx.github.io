{"version":3,"sources":["webpack:///./src/app/admin/pontos/users/zeramento/zeramento.module.ts","webpack:///./src/app/admin/pontos/users/zeramento/zeramento.page.html","webpack:///./src/app/admin/pontos/users/zeramento/zeramento.page.scss","webpack:///./src/app/admin/pontos/users/zeramento/zeramento.page.ts"],"names":[],"mappings":"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","file":"admin-pontos-users-zeramento-zeramento-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ZeramentoPage } from './zeramento.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ZeramentoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ZeramentoPage]\r\n})\r\nexport class ZeramentoPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle auto-hide=\\\"false\\\"><i class=\\\"fas fa-align-left icon-menu\\\"></i></ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n\\r\\n    <span class=\\\"title_t\\\">Zeramento</span>\\r\\n    <span class=\\\"title_w\\\">de Pontos </span>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col class=\\\"ion-col-padding\\\">\\r\\n        <ion-label>Data de Zeramento de Pontos (às 00:01)</ion-label>\\r\\n        <ion-item>\\r\\n          <ion-datetime [min]=\\\"minDate\\\" max=\\\"2099\\\" [(ngModel)]=\\\"schedule\\\" dateFormat=\\\"DD/MM/YYYY\\\" placeholder=\\\"dd/mm/aa\\\"\\r\\n            displayFormat=\\\"DD/MM/YYYY\\\" monthShortNames=\\\"jan, fev, mar, abr, mai, jun, jul, ago, set, out, nov, dez\\\">\\r\\n          </ion-datetime>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <button type=\\\"submit\\\" (click)=\\\"clearPoints()\\\" class=\\\"btn btn-block btn-mdlz-clear color3 \\\"><i\\r\\n            class=\\\"fas fa-exclamation-triangle\\\"></i> Agendar</button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BvbnRvcy91c2Vycy96ZXJhbWVudG8vemVyYW1lbnRvLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AlertTitle, AlertText, MenuText, Constants, ToastText, ErrorMessage } from 'src/commons/Constants';\r\nimport { AlertController, PopoverController, ActionSheetController, ModalController } from '@ionic/angular';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-zeramento',\r\n  templateUrl: './zeramento.page.html',\r\n  styleUrls: ['./zeramento.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class ZeramentoPage {\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"ZeramentoPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  public schedule: string;\r\n  public minDate: string;\r\n  \r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    public popoverController: PopoverController,\r\n    private api: BackendApiProvider,\r\n    public actionSheetController: ActionSheetController,\r\n    private utils: Utils,\r\n    public modalController: ModalController,\r\n    public alertController: AlertController\r\n  ) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    let date = new Date();\r\n    date.setDate(new Date().getDate() + 1);\r\n    this.minDate = date.toISOString();\r\n    this.api.getPointsResetSchedule().then((schedule: number) => {\r\n      this.schedule = (new Date(schedule)).toISOString().slice(0, 16);\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async clearPoints() {\r\n    const alert = await this.alertController.create({\r\n      header: AlertTitle.ALERT,\r\n      message: AlertText.POINTS_RESET,\r\n      buttons: [{\r\n        text: MenuText.CANCEL,\r\n        role: 'cancel',\r\n        handler: () => { }\r\n      }, {\r\n        text: MenuText.IM_SURE,\r\n        handler: () => {\r\n          alert.dismiss();\r\n          this.showInputAlert();\r\n        }\r\n      }]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async showInputAlert() {\r\n    const inputAlert = await this.alertController.create({\r\n      message: 'Escreva ' + Constants.RESET_CONFIRM_CODE + ' no campo abaixo para confirmar a ação.',\r\n      inputs: [\r\n        {\r\n          name: 'confirmationWord'\r\n        }\r\n      ],\r\n      buttons: [{\r\n        text: MenuText.CANCEL,\r\n        role: 'cancel',\r\n        handler: () => { }\r\n      }, {\r\n        text: MenuText.CONFIRM,\r\n        handler: (data) => {\r\n          if (!Utils.isStringInvalid(data.confirmationWord)) {\r\n            if (data.confirmationWord == Constants.RESET_CONFIRM_CODE) {\r\n              this.api.schedulePointsReset(new Date(this.schedule)).then(() => {\r\n                this.utils.simpleToast(ToastText.POINTS_RESET_SCHEDULED);\r\n              }).catch((error: Error) => {\r\n                if (error.message.includes(ErrorMessage.INVALID_DATE)) {\r\n                  this.utils.simpleToastError(ToastText.DATE_MUST_BE_FUTURE);\r\n                }\r\n                else {\r\n                  this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG)\r\n                }\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }]\r\n    });\r\n    await inputAlert.present();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n}\r\n"],"sourceRoot":""}