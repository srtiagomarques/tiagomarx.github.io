{"version":3,"sources":["webpack:///./src/app/users/notification/notification.module.ts","webpack:///./src/app/users/notification/notification.page.html","webpack:///./src/app/users/notification/notification.page.scss","webpack:///./src/app/users/notification/notification.page.ts"],"names":[],"mappings":"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","file":"users-notification-notification-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { NotificationPage } from './notification.page';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NotificationPage]\r\n})\r\nexport class NotificationPageModule {}\r\n","module.exports = \"<ion-header class=\\\"header-extrato\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-toggle auto-hide=\\\"false\\\"><i class=\\\"fas fa-align-left icon-menu\\\"></i></ion-menu-toggle>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar class=\\\"no-radius\\\">\\r\\n    <span class=\\\"title_t\\\">Central</span>\\r\\n    <span class=\\\"title_w\\\">de Notificações</span>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  <ion-toolbar>\\r\\n    <ion-searchbar placeholder=\\\"Pesquisar\\\" animated (ionInput)=\\\"filter($event.srcElement.value)\\\"></ion-searchbar>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content padding=\\\"true\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n\\r\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" [hidden]=\\\"messageList.length > 0\\\">\\r\\n          Nenhuma notificação no momento.\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <ion-list class=\\\"msgs\\\" *ngFor=\\\"let message of messageList\\\">\\r\\n\\r\\n          <div class=\\\"badge-new\\\" *ngIf=\\\"!message.getLida()\\\">novo</div>\\r\\n          <ion-item-sliding>\\r\\n            <ion-item  no-padding no-lines (click)=\\\"openMensagem(message)\\\">\\r\\n\\r\\n              <ion-avatar slot=\\\"start\\\">\\r\\n                <span class=\\\"msg-not\\\" *ngIf=\\\"!message.getLida()\\\"><i class=\\\"fas fa-envelope\\\"></i></span>\\r\\n                <span class=\\\"msg-yes\\\" *ngIf=\\\"message.getLida()\\\"><i class=\\\"fas fa-envelope-open-text\\\"></i></span>\\r\\n              </ion-avatar>\\r\\n              <ion-avatar slot=\\\"start\\\">\\r\\n                <img src=\\\"{{message.getFromUserFoto()}}\\\">\\r\\n\\r\\n              </ion-avatar>\\r\\n\\r\\n              <ion-label>\\r\\n                <h2>{{message.getFromUserNome()}}\\r\\n                  <span class=\\\"msg-small\\\">{{message.getData().toUTCString() | date: 'dd/MM/yyyy' }}</span></h2>\\r\\n                <p class=\\\"msg\\\">{{message.getMessage()}}</p>\\r\\n              </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item-options side=\\\"end\\\">\\r\\n              <ion-item-option color=\\\"danger\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\" (click)=\\\"delete(message)\\\"></ion-icon>\\r\\n              </ion-item-option>\\r\\n            </ion-item-options>\\r\\n          </ion-item-sliding>\\r\\n\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\r\\n    <ion-infinite-scroll-content\\r\\n      loadingSpinner=\\\"dots\\\"\\r\\n      loadingText=\\\"Carregando mais...\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n  \\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PopoverController, IonInfiniteScroll } from '@ionic/angular';\r\nimport { MsgComponentComponent } from './msg-component/msg-component.component';\r\nimport { BackendApiProvider } from 'src/providers/backend-api/backend-api.service';\r\nimport { Utils } from 'src/commons/Utils';\r\nimport { Message } from 'src/models/Message';\r\nimport { ToastText } from 'src/commons/Constants';\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.page.html',\r\n  styleUrls: ['./notification.page.scss'],\r\n})\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\nexport class NotificationPage {\r\n\r\n  \r\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\r\n  \r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private readonly logHeader = \"NotificationPage>>\";\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  private messages: Array<Message> = new Array<Message>();\r\n  public messageList: Array<Message> = new Array<Message>();\r\n  private searchTerm: string;\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  constructor(\r\n    public popoverController: PopoverController,\r\n    private api: BackendApiProvider,\r\n    private utils: Utils\r\n  ) {\r\n    const logHeader = this.logHeader + \"constructor>>\";\r\n    Utils.log(logHeader);\r\n    this.getAllMessages();\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  getAllMessages() {\r\n    const logHeader = this.logHeader + \"getAllMessages()\"\r\n    this.api.getAllMessages().then((messages: Array<Message>) => {\r\n      messages.sort((a: Message, b: Message) => {\r\n        return b.getData().getTime() - a.getData().getTime();\r\n      });\r\n      messages.sort((a: Message, b: Message) => {\r\n        return (a.getLida() === b.getLida()) ? 0 : a.getLida() ? 1 : -1;\r\n      });\r\n      this.messages = messages;\r\n      this.messageList = this.messages;\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  async openMensagem(ev: any) {\r\n    let message: Message = ev;\r\n    const popover = await this.popoverController.create({\r\n      component: MsgComponentComponent,\r\n      event: ev,\r\n      animated: true,\r\n      showBackdrop: true,\r\n      translucent: true,\r\n      cssClass: 'popover_class_msg',\r\n      componentProps: {\r\n        message: message\r\n      }\r\n    });\r\n    await popover.present();\r\n    popover.onDidDismiss().then(() => {\r\n      if (!message.getLida()) {\r\n        this.api.markMessageAsRead(message.getId()).then(() => {\r\n          message.setLida(true);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  filter(evt) {\r\n    const logHeader = this.logHeader + \"filter>>\";\r\n    Utils.log(logHeader);\r\n    if (Utils.isStringInvalid(evt)) {\r\n      this.messageList = this.messages;\r\n      return;\r\n    }\r\n    const searchTerm = evt;\r\n    this.searchTerm = searchTerm;\r\n    if (!searchTerm) {\r\n      this.messageList = this.messages;\r\n      return;\r\n    }\r\n    this.messageList = this.messages.filter(n => n.getFromUserNome().toLowerCase().includes(searchTerm.toLowerCase()) || n.getMessage().toLowerCase().includes(searchTerm.toLowerCase()));\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n  delete(message: Message) {\r\n    this.api.deleteMessage(message.getId()).then(() => {\r\n      this.messages.splice(this.messages.indexOf(message), 1);\r\n      this.filter(this.searchTerm);\r\n      this.utils.simpleToast(ToastText.REMOVE_SUCCESSFUL);\r\n    }).catch((error) => this.utils.simpleToastError(error + '\\n' + ToastText.SOMETHING_WENT_WRONG));\r\n  }\r\n\r\n  \r\n  //-------------------------------------------------------------------------------------------------------------------------------//\r\n\r\n\r\n  loadData(event) {\r\n    setTimeout(() => {\r\n      console.log('Done');\r\n      event.target.complete();\r\n      if (this.messageList.length == 1000) {\r\n        event.target.disabled = true;\r\n      }\r\n    }, 500);\r\n  }\r\n}\r\n"],"sourceRoot":""}